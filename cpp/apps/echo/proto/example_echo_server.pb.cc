// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: example_echo_server.proto
// Protobuf C++ Version: 6.30.2

#include "example_echo_server.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr EchoReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        num1_{0},
        num2_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EchoReq::EchoReq(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EchoReq_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EchoReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EchoReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EchoReqDefaultTypeInternal() {}
  union {
    EchoReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EchoReqDefaultTypeInternal _EchoReq_default_instance_;

inline constexpr EchoRep::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        res_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EchoRep::EchoRep(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EchoRep_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EchoRepDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EchoRepDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EchoRepDefaultTypeInternal() {}
  union {
    EchoRep _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EchoRepDefaultTypeInternal _EchoRep_default_instance_;
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_example_5fecho_5fserver_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_example_5fecho_5fserver_2eproto = nullptr;
const ::uint32_t
    TableStruct_example_5fecho_5fserver_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::EchoReq, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::EchoReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::EchoReq, _impl_.text_),
        PROTOBUF_FIELD_OFFSET(::EchoReq, _impl_.num1_),
        PROTOBUF_FIELD_OFFSET(::EchoReq, _impl_.num2_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::EchoRep, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::EchoRep, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::EchoRep, _impl_.text_),
        PROTOBUF_FIELD_OFFSET(::EchoRep, _impl_.res_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::EchoReq)},
        {14, 24, -1, sizeof(::EchoRep)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::_EchoReq_default_instance_._instance,
    &::_EchoRep_default_instance_._instance,
};
const char descriptor_table_protodef_example_5fecho_5fserver_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\031example_echo_server.proto\"3\n\007EchoReq\022\014"
    "\n\004text\030\001 \001(\t\022\014\n\004num1\030\002 \001(\005\022\014\n\004num2\030\003 \001(\005"
    "\"$\n\007EchoRep\022\014\n\004text\030\001 \001(\t\022\013\n\003res\030\002 \001(\0052)"
    "\n\013EchoService\022\032\n\004Echo\022\010.EchoReq\032\010.EchoRe"
    "pB+Z)sigmaos/example/example_echo_server"
    "/protob\006proto3"
};
static ::absl::once_flag descriptor_table_example_5fecho_5fserver_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_example_5fecho_5fserver_2eproto = {
    false,
    false,
    214,
    descriptor_table_protodef_example_5fecho_5fserver_2eproto,
    "example_echo_server.proto",
    &descriptor_table_example_5fecho_5fserver_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_example_5fecho_5fserver_2eproto::offsets,
    file_level_enum_descriptors_example_5fecho_5fserver_2eproto,
    file_level_service_descriptors_example_5fecho_5fserver_2eproto,
};
// ===================================================================

class EchoReq::_Internal {
 public:
  using HasBits =
      decltype(std::declval<EchoReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EchoReq, _impl_._has_bits_);
};

EchoReq::EchoReq(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EchoReq_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:EchoReq)
}
PROTOBUF_NDEBUG_INLINE EchoReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::EchoReq& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        text_(arena, from.text_) {}

EchoReq::EchoReq(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EchoReq& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EchoReq_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EchoReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num1_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, num1_),
           offsetof(Impl_, num2_) -
               offsetof(Impl_, num1_) +
               sizeof(Impl_::num2_));

  // @@protoc_insertion_point(copy_constructor:EchoReq)
}
PROTOBUF_NDEBUG_INLINE EchoReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        text_(arena) {}

inline void EchoReq::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num1_),
           0,
           offsetof(Impl_, num2_) -
               offsetof(Impl_, num1_) +
               sizeof(Impl_::num2_));
}
EchoReq::~EchoReq() {
  // @@protoc_insertion_point(destructor:EchoReq)
  SharedDtor(*this);
}
inline void EchoReq::SharedDtor(MessageLite& self) {
  EchoReq& this_ = static_cast<EchoReq&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.text_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EchoReq::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EchoReq(arena);
}
constexpr auto EchoReq::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EchoReq),
                                            alignof(EchoReq));
}
constexpr auto EchoReq::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EchoReq_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EchoReq::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EchoReq>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EchoReq::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EchoReq>(), &EchoReq::ByteSizeLong,
              &EchoReq::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EchoReq, _impl_._cached_size_),
          false,
      },
      &EchoReq::kDescriptorMethods,
      &descriptor_table_example_5fecho_5fserver_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EchoReq_class_data_ =
        EchoReq::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL EchoReq::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EchoReq_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EchoReq_class_data_.tc_table);
  return EchoReq_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 20, 2>
EchoReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EchoReq, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    EchoReq_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::EchoReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string text = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EchoReq, _impl_.text_)}},
    // int32 num1 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EchoReq, _impl_.num1_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(EchoReq, _impl_.num1_)}},
    // int32 num2 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EchoReq, _impl_.num2_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(EchoReq, _impl_.num2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string text = 1;
    {PROTOBUF_FIELD_OFFSET(EchoReq, _impl_.text_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 num1 = 2;
    {PROTOBUF_FIELD_OFFSET(EchoReq, _impl_.num1_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 num2 = 3;
    {PROTOBUF_FIELD_OFFSET(EchoReq, _impl_.num2_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\7\4\0\0\0\0\0\0"
    "EchoReq"
    "text"
  }},
};
PROTOBUF_NOINLINE void EchoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:EchoReq)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.text_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.num1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.num2_) -
        reinterpret_cast<char*>(&_impl_.num1_)) + sizeof(_impl_.num2_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EchoReq::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EchoReq& this_ = static_cast<const EchoReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EchoReq::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EchoReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:EchoReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string text = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_text().empty()) {
      const std::string& _s = this_._internal_text();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "EchoReq.text");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 num1 = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_num1() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_num1(), target);
    }
  }

  // int32 num2 = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_num2() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_num2(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EchoReq)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EchoReq::ByteSizeLong(const MessageLite& base) {
  const EchoReq& this_ = static_cast<const EchoReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EchoReq::ByteSizeLong() const {
  const EchoReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:EchoReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string text = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_text().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_text());
      }
    }
    // int32 num1 = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_num1() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_num1());
      }
    }
    // int32 num2 = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_num2() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_num2());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EchoReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EchoReq*>(&to_msg);
  auto& from = static_cast<const EchoReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:EchoReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_text().empty()) {
        _this->_internal_set_text(from._internal_text());
      } else {
        if (_this->_impl_.text_.IsDefault()) {
          _this->_internal_set_text("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_num1() != 0) {
        _this->_impl_.num1_ = from._impl_.num1_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_num2() != 0) {
        _this->_impl_.num2_ = from._impl_.num2_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EchoReq::CopyFrom(const EchoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EchoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EchoReq::InternalSwap(EchoReq* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EchoReq, _impl_.num2_)
      + sizeof(EchoReq::_impl_.num2_)
      - PROTOBUF_FIELD_OFFSET(EchoReq, _impl_.num1_)>(
          reinterpret_cast<char*>(&_impl_.num1_),
          reinterpret_cast<char*>(&other->_impl_.num1_));
}

::google::protobuf::Metadata EchoReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EchoRep::_Internal {
 public:
  using HasBits =
      decltype(std::declval<EchoRep>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EchoRep, _impl_._has_bits_);
};

EchoRep::EchoRep(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EchoRep_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:EchoRep)
}
PROTOBUF_NDEBUG_INLINE EchoRep::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::EchoRep& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        text_(arena, from.text_) {}

EchoRep::EchoRep(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EchoRep& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EchoRep_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EchoRep* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.res_ = from._impl_.res_;

  // @@protoc_insertion_point(copy_constructor:EchoRep)
}
PROTOBUF_NDEBUG_INLINE EchoRep::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        text_(arena) {}

inline void EchoRep::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.res_ = {};
}
EchoRep::~EchoRep() {
  // @@protoc_insertion_point(destructor:EchoRep)
  SharedDtor(*this);
}
inline void EchoRep::SharedDtor(MessageLite& self) {
  EchoRep& this_ = static_cast<EchoRep&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.text_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EchoRep::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EchoRep(arena);
}
constexpr auto EchoRep::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EchoRep),
                                            alignof(EchoRep));
}
constexpr auto EchoRep::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EchoRep_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EchoRep::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EchoRep>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EchoRep::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EchoRep>(), &EchoRep::ByteSizeLong,
              &EchoRep::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EchoRep, _impl_._cached_size_),
          false,
      },
      &EchoRep::kDescriptorMethods,
      &descriptor_table_example_5fecho_5fserver_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EchoRep_class_data_ =
        EchoRep::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL EchoRep::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EchoRep_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EchoRep_class_data_.tc_table);
  return EchoRep_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 20, 2>
EchoRep::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EchoRep, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    EchoRep_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::EchoRep>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 res = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EchoRep, _impl_.res_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(EchoRep, _impl_.res_)}},
    // string text = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EchoRep, _impl_.text_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string text = 1;
    {PROTOBUF_FIELD_OFFSET(EchoRep, _impl_.text_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 res = 2;
    {PROTOBUF_FIELD_OFFSET(EchoRep, _impl_.res_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\7\4\0\0\0\0\0\0"
    "EchoRep"
    "text"
  }},
};
PROTOBUF_NOINLINE void EchoRep::Clear() {
// @@protoc_insertion_point(message_clear_start:EchoRep)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.text_.ClearNonDefaultToEmpty();
  }
  _impl_.res_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EchoRep::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EchoRep& this_ = static_cast<const EchoRep&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EchoRep::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EchoRep& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:EchoRep)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string text = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_text().empty()) {
      const std::string& _s = this_._internal_text();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "EchoRep.text");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 res = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_res() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_res(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EchoRep)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EchoRep::ByteSizeLong(const MessageLite& base) {
  const EchoRep& this_ = static_cast<const EchoRep&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EchoRep::ByteSizeLong() const {
  const EchoRep& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:EchoRep)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string text = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_text().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_text());
      }
    }
    // int32 res = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_res() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_res());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EchoRep::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EchoRep*>(&to_msg);
  auto& from = static_cast<const EchoRep&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:EchoRep)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_text().empty()) {
        _this->_internal_set_text(from._internal_text());
      } else {
        if (_this->_impl_.text_.IsDefault()) {
          _this->_internal_set_text("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_res() != 0) {
        _this->_impl_.res_ = from._impl_.res_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EchoRep::CopyFrom(const EchoRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EchoRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EchoRep::InternalSwap(EchoRep* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
  swap(_impl_.res_, other->_impl_.res_);
}

::google::protobuf::Metadata EchoRep::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_example_5fecho_5fserver_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
