// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: epcache.proto

#include "epcache.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR Instance::Instance(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.endpointproto_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InstanceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InstanceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InstanceDefaultTypeInternal() {}
  union {
    Instance _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InstanceDefaultTypeInternal _Instance_default_instance_;
PROTOBUF_CONSTEXPR RegisterEndpointReq::RegisterEndpointReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.servicename_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.instance_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RegisterEndpointReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterEndpointReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterEndpointReqDefaultTypeInternal() {}
  union {
    RegisterEndpointReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterEndpointReqDefaultTypeInternal _RegisterEndpointReq_default_instance_;
PROTOBUF_CONSTEXPR RegisterEndpointRep::RegisterEndpointRep(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RegisterEndpointRepDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterEndpointRepDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterEndpointRepDefaultTypeInternal() {}
  union {
    RegisterEndpointRep _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterEndpointRepDefaultTypeInternal _RegisterEndpointRep_default_instance_;
PROTOBUF_CONSTEXPR DeregisterEndpointReq::DeregisterEndpointReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.servicename_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.instanceid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeregisterEndpointReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeregisterEndpointReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeregisterEndpointReqDefaultTypeInternal() {}
  union {
    DeregisterEndpointReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeregisterEndpointReqDefaultTypeInternal _DeregisterEndpointReq_default_instance_;
PROTOBUF_CONSTEXPR DeregisterEndpointRep::DeregisterEndpointRep(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeregisterEndpointRepDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeregisterEndpointRepDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeregisterEndpointRepDefaultTypeInternal() {}
  union {
    DeregisterEndpointRep _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeregisterEndpointRepDefaultTypeInternal _DeregisterEndpointRep_default_instance_;
PROTOBUF_CONSTEXPR GetEndpointsReq::GetEndpointsReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.servicename_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.version_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetEndpointsReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetEndpointsReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetEndpointsReqDefaultTypeInternal() {}
  union {
    GetEndpointsReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetEndpointsReqDefaultTypeInternal _GetEndpointsReq_default_instance_;
PROTOBUF_CONSTEXPR GetEndpointsRep::GetEndpointsRep(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.instances_)*/{}
  , /*decltype(_impl_.version_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetEndpointsRepDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetEndpointsRepDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetEndpointsRepDefaultTypeInternal() {}
  union {
    GetEndpointsRep _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetEndpointsRepDefaultTypeInternal _GetEndpointsRep_default_instance_;
static ::_pb::Metadata file_level_metadata_epcache_2eproto[7];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_epcache_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_epcache_2eproto = nullptr;

const uint32_t TableStruct_epcache_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Instance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Instance, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::Instance, _impl_.endpointproto_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::RegisterEndpointReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::RegisterEndpointReq, _impl_.servicename_),
  PROTOBUF_FIELD_OFFSET(::RegisterEndpointReq, _impl_.instance_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::RegisterEndpointRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::RegisterEndpointRep, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DeregisterEndpointReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DeregisterEndpointReq, _impl_.servicename_),
  PROTOBUF_FIELD_OFFSET(::DeregisterEndpointReq, _impl_.instanceid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DeregisterEndpointRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DeregisterEndpointRep, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetEndpointsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::GetEndpointsReq, _impl_.servicename_),
  PROTOBUF_FIELD_OFFSET(::GetEndpointsReq, _impl_.version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetEndpointsRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::GetEndpointsRep, _impl_.instances_),
  PROTOBUF_FIELD_OFFSET(::GetEndpointsRep, _impl_.version_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Instance)},
  { 8, -1, -1, sizeof(::RegisterEndpointReq)},
  { 16, -1, -1, sizeof(::RegisterEndpointRep)},
  { 23, -1, -1, sizeof(::DeregisterEndpointReq)},
  { 31, -1, -1, sizeof(::DeregisterEndpointRep)},
  { 38, -1, -1, sizeof(::GetEndpointsReq)},
  { 46, -1, -1, sizeof(::GetEndpointsRep)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_Instance_default_instance_._instance,
  &::_RegisterEndpointReq_default_instance_._instance,
  &::_RegisterEndpointRep_default_instance_._instance,
  &::_DeregisterEndpointReq_default_instance_._instance,
  &::_DeregisterEndpointRep_default_instance_._instance,
  &::_GetEndpointsReq_default_instance_._instance,
  &::_GetEndpointsRep_default_instance_._instance,
};

const char descriptor_table_protodef_epcache_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\repcache.proto\032\023sigmap/sigmap.proto\">\n\010"
  "Instance\022\n\n\002iD\030\001 \001(\t\022&\n\rendpointProto\030\002 "
  "\001(\0132\017.TendpointProto\"G\n\023RegisterEndpoint"
  "Req\022\023\n\013serviceName\030\001 \001(\t\022\033\n\010instance\030\002 \001"
  "(\0132\t.Instance\"!\n\023RegisterEndpointRep\022\n\n\002"
  "oK\030\001 \001(\010\"@\n\025DeregisterEndpointReq\022\023\n\013ser"
  "viceName\030\001 \001(\t\022\022\n\ninstanceID\030\002 \001(\t\"#\n\025De"
  "registerEndpointRep\022\n\n\002oK\030\001 \001(\010\"7\n\017GetEn"
  "dpointsReq\022\023\n\013serviceName\030\001 \001(\t\022\017\n\007versi"
  "on\030\002 \001(\004\"@\n\017GetEndpointsRep\022\034\n\tinstances"
  "\030\001 \003(\0132\t.Instance\022\017\n\007version\030\002 \001(\004B\034Z\032si"
  "gmaos/apps/epcache/protob\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_epcache_2eproto_deps[1] = {
  &::descriptor_table_sigmap_2fsigmap_2eproto,
};
static ::_pbi::once_flag descriptor_table_epcache_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_epcache_2eproto = {
    false, false, 472, descriptor_table_protodef_epcache_2eproto,
    "epcache.proto",
    &descriptor_table_epcache_2eproto_once, descriptor_table_epcache_2eproto_deps, 1, 7,
    schemas, file_default_instances, TableStruct_epcache_2eproto::offsets,
    file_level_metadata_epcache_2eproto, file_level_enum_descriptors_epcache_2eproto,
    file_level_service_descriptors_epcache_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_epcache_2eproto_getter() {
  return &descriptor_table_epcache_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_epcache_2eproto(&descriptor_table_epcache_2eproto);

// ===================================================================

class Instance::_Internal {
 public:
  static const ::TendpointProto& endpointproto(const Instance* msg);
};

const ::TendpointProto&
Instance::_Internal::endpointproto(const Instance* msg) {
  return *msg->_impl_.endpointproto_;
}
void Instance::clear_endpointproto() {
  if (GetArenaForAllocation() == nullptr && _impl_.endpointproto_ != nullptr) {
    delete _impl_.endpointproto_;
  }
  _impl_.endpointproto_ = nullptr;
}
Instance::Instance(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Instance)
}
Instance::Instance(const Instance& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Instance* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.endpointproto_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_endpointproto()) {
    _this->_impl_.endpointproto_ = new ::TendpointProto(*from._impl_.endpointproto_);
  }
  // @@protoc_insertion_point(copy_constructor:Instance)
}

inline void Instance::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.endpointproto_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Instance::~Instance() {
  // @@protoc_insertion_point(destructor:Instance)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Instance::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.endpointproto_;
}

void Instance::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Instance::Clear() {
// @@protoc_insertion_point(message_clear_start:Instance)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.endpointproto_ != nullptr) {
    delete _impl_.endpointproto_;
  }
  _impl_.endpointproto_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Instance::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string iD = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Instance.iD"));
        } else
          goto handle_unusual;
        continue;
      // .TendpointProto endpointProto = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_endpointproto(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Instance::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Instance)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string iD = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Instance.iD");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .TendpointProto endpointProto = 2;
  if (this->_internal_has_endpointproto()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::endpointproto(this),
        _Internal::endpointproto(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Instance)
  return target;
}

size_t Instance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Instance)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string iD = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .TendpointProto endpointProto = 2;
  if (this->_internal_has_endpointproto()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.endpointproto_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Instance::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Instance::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Instance::GetClassData() const { return &_class_data_; }


void Instance::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Instance*>(&to_msg);
  auto& from = static_cast<const Instance&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Instance)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_has_endpointproto()) {
    _this->_internal_mutable_endpointproto()->::TendpointProto::MergeFrom(
        from._internal_endpointproto());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Instance::CopyFrom(const Instance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Instance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Instance::IsInitialized() const {
  return true;
}

void Instance::InternalSwap(Instance* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  swap(_impl_.endpointproto_, other->_impl_.endpointproto_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Instance::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_epcache_2eproto_getter, &descriptor_table_epcache_2eproto_once,
      file_level_metadata_epcache_2eproto[0]);
}

// ===================================================================

class RegisterEndpointReq::_Internal {
 public:
  static const ::Instance& instance(const RegisterEndpointReq* msg);
};

const ::Instance&
RegisterEndpointReq::_Internal::instance(const RegisterEndpointReq* msg) {
  return *msg->_impl_.instance_;
}
RegisterEndpointReq::RegisterEndpointReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:RegisterEndpointReq)
}
RegisterEndpointReq::RegisterEndpointReq(const RegisterEndpointReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RegisterEndpointReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.servicename_){}
    , decltype(_impl_.instance_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.servicename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.servicename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_servicename().empty()) {
    _this->_impl_.servicename_.Set(from._internal_servicename(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_instance()) {
    _this->_impl_.instance_ = new ::Instance(*from._impl_.instance_);
  }
  // @@protoc_insertion_point(copy_constructor:RegisterEndpointReq)
}

inline void RegisterEndpointReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.servicename_){}
    , decltype(_impl_.instance_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.servicename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.servicename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RegisterEndpointReq::~RegisterEndpointReq() {
  // @@protoc_insertion_point(destructor:RegisterEndpointReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RegisterEndpointReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.servicename_.Destroy();
  if (this != internal_default_instance()) delete _impl_.instance_;
}

void RegisterEndpointReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RegisterEndpointReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterEndpointReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.servicename_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.instance_ != nullptr) {
    delete _impl_.instance_;
  }
  _impl_.instance_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterEndpointReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string serviceName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_servicename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "RegisterEndpointReq.serviceName"));
        } else
          goto handle_unusual;
        continue;
      // .Instance instance = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_instance(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RegisterEndpointReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RegisterEndpointReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string serviceName = 1;
  if (!this->_internal_servicename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_servicename().data(), static_cast<int>(this->_internal_servicename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "RegisterEndpointReq.serviceName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_servicename(), target);
  }

  // .Instance instance = 2;
  if (this->_internal_has_instance()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::instance(this),
        _Internal::instance(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RegisterEndpointReq)
  return target;
}

size_t RegisterEndpointReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RegisterEndpointReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string serviceName = 1;
  if (!this->_internal_servicename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_servicename());
  }

  // .Instance instance = 2;
  if (this->_internal_has_instance()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.instance_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RegisterEndpointReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RegisterEndpointReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RegisterEndpointReq::GetClassData() const { return &_class_data_; }


void RegisterEndpointReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RegisterEndpointReq*>(&to_msg);
  auto& from = static_cast<const RegisterEndpointReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RegisterEndpointReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_servicename().empty()) {
    _this->_internal_set_servicename(from._internal_servicename());
  }
  if (from._internal_has_instance()) {
    _this->_internal_mutable_instance()->::Instance::MergeFrom(
        from._internal_instance());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterEndpointReq::CopyFrom(const RegisterEndpointReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterEndpointReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterEndpointReq::IsInitialized() const {
  return true;
}

void RegisterEndpointReq::InternalSwap(RegisterEndpointReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.servicename_, lhs_arena,
      &other->_impl_.servicename_, rhs_arena
  );
  swap(_impl_.instance_, other->_impl_.instance_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterEndpointReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_epcache_2eproto_getter, &descriptor_table_epcache_2eproto_once,
      file_level_metadata_epcache_2eproto[1]);
}

// ===================================================================

class RegisterEndpointRep::_Internal {
 public:
};

RegisterEndpointRep::RegisterEndpointRep(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:RegisterEndpointRep)
}
RegisterEndpointRep::RegisterEndpointRep(const RegisterEndpointRep& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RegisterEndpointRep* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:RegisterEndpointRep)
}

inline void RegisterEndpointRep::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RegisterEndpointRep::~RegisterEndpointRep() {
  // @@protoc_insertion_point(destructor:RegisterEndpointRep)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RegisterEndpointRep::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RegisterEndpointRep::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RegisterEndpointRep::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterEndpointRep)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterEndpointRep::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool oK = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RegisterEndpointRep::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RegisterEndpointRep)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool oK = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RegisterEndpointRep)
  return target;
}

size_t RegisterEndpointRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RegisterEndpointRep)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool oK = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RegisterEndpointRep::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RegisterEndpointRep::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RegisterEndpointRep::GetClassData() const { return &_class_data_; }


void RegisterEndpointRep::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RegisterEndpointRep*>(&to_msg);
  auto& from = static_cast<const RegisterEndpointRep&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RegisterEndpointRep)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterEndpointRep::CopyFrom(const RegisterEndpointRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterEndpointRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterEndpointRep::IsInitialized() const {
  return true;
}

void RegisterEndpointRep::InternalSwap(RegisterEndpointRep* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterEndpointRep::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_epcache_2eproto_getter, &descriptor_table_epcache_2eproto_once,
      file_level_metadata_epcache_2eproto[2]);
}

// ===================================================================

class DeregisterEndpointReq::_Internal {
 public:
};

DeregisterEndpointReq::DeregisterEndpointReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:DeregisterEndpointReq)
}
DeregisterEndpointReq::DeregisterEndpointReq(const DeregisterEndpointReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeregisterEndpointReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.servicename_){}
    , decltype(_impl_.instanceid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.servicename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.servicename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_servicename().empty()) {
    _this->_impl_.servicename_.Set(from._internal_servicename(), 
      _this->GetArenaForAllocation());
  }
  _impl_.instanceid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.instanceid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_instanceid().empty()) {
    _this->_impl_.instanceid_.Set(from._internal_instanceid(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:DeregisterEndpointReq)
}

inline void DeregisterEndpointReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.servicename_){}
    , decltype(_impl_.instanceid_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.servicename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.servicename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.instanceid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.instanceid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeregisterEndpointReq::~DeregisterEndpointReq() {
  // @@protoc_insertion_point(destructor:DeregisterEndpointReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeregisterEndpointReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.servicename_.Destroy();
  _impl_.instanceid_.Destroy();
}

void DeregisterEndpointReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeregisterEndpointReq::Clear() {
// @@protoc_insertion_point(message_clear_start:DeregisterEndpointReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.servicename_.ClearToEmpty();
  _impl_.instanceid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeregisterEndpointReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string serviceName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_servicename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "DeregisterEndpointReq.serviceName"));
        } else
          goto handle_unusual;
        continue;
      // string instanceID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_instanceid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "DeregisterEndpointReq.instanceID"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeregisterEndpointReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeregisterEndpointReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string serviceName = 1;
  if (!this->_internal_servicename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_servicename().data(), static_cast<int>(this->_internal_servicename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DeregisterEndpointReq.serviceName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_servicename(), target);
  }

  // string instanceID = 2;
  if (!this->_internal_instanceid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instanceid().data(), static_cast<int>(this->_internal_instanceid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DeregisterEndpointReq.instanceID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_instanceid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeregisterEndpointReq)
  return target;
}

size_t DeregisterEndpointReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeregisterEndpointReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string serviceName = 1;
  if (!this->_internal_servicename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_servicename());
  }

  // string instanceID = 2;
  if (!this->_internal_instanceid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instanceid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeregisterEndpointReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeregisterEndpointReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeregisterEndpointReq::GetClassData() const { return &_class_data_; }


void DeregisterEndpointReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeregisterEndpointReq*>(&to_msg);
  auto& from = static_cast<const DeregisterEndpointReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DeregisterEndpointReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_servicename().empty()) {
    _this->_internal_set_servicename(from._internal_servicename());
  }
  if (!from._internal_instanceid().empty()) {
    _this->_internal_set_instanceid(from._internal_instanceid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeregisterEndpointReq::CopyFrom(const DeregisterEndpointReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeregisterEndpointReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeregisterEndpointReq::IsInitialized() const {
  return true;
}

void DeregisterEndpointReq::InternalSwap(DeregisterEndpointReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.servicename_, lhs_arena,
      &other->_impl_.servicename_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.instanceid_, lhs_arena,
      &other->_impl_.instanceid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeregisterEndpointReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_epcache_2eproto_getter, &descriptor_table_epcache_2eproto_once,
      file_level_metadata_epcache_2eproto[3]);
}

// ===================================================================

class DeregisterEndpointRep::_Internal {
 public:
};

DeregisterEndpointRep::DeregisterEndpointRep(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:DeregisterEndpointRep)
}
DeregisterEndpointRep::DeregisterEndpointRep(const DeregisterEndpointRep& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeregisterEndpointRep* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:DeregisterEndpointRep)
}

inline void DeregisterEndpointRep::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeregisterEndpointRep::~DeregisterEndpointRep() {
  // @@protoc_insertion_point(destructor:DeregisterEndpointRep)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeregisterEndpointRep::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DeregisterEndpointRep::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeregisterEndpointRep::Clear() {
// @@protoc_insertion_point(message_clear_start:DeregisterEndpointRep)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeregisterEndpointRep::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool oK = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeregisterEndpointRep::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeregisterEndpointRep)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool oK = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeregisterEndpointRep)
  return target;
}

size_t DeregisterEndpointRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeregisterEndpointRep)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool oK = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeregisterEndpointRep::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeregisterEndpointRep::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeregisterEndpointRep::GetClassData() const { return &_class_data_; }


void DeregisterEndpointRep::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeregisterEndpointRep*>(&to_msg);
  auto& from = static_cast<const DeregisterEndpointRep&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DeregisterEndpointRep)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeregisterEndpointRep::CopyFrom(const DeregisterEndpointRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeregisterEndpointRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeregisterEndpointRep::IsInitialized() const {
  return true;
}

void DeregisterEndpointRep::InternalSwap(DeregisterEndpointRep* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeregisterEndpointRep::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_epcache_2eproto_getter, &descriptor_table_epcache_2eproto_once,
      file_level_metadata_epcache_2eproto[4]);
}

// ===================================================================

class GetEndpointsReq::_Internal {
 public:
};

GetEndpointsReq::GetEndpointsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:GetEndpointsReq)
}
GetEndpointsReq::GetEndpointsReq(const GetEndpointsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetEndpointsReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.servicename_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.servicename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.servicename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_servicename().empty()) {
    _this->_impl_.servicename_.Set(from._internal_servicename(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.version_ = from._impl_.version_;
  // @@protoc_insertion_point(copy_constructor:GetEndpointsReq)
}

inline void GetEndpointsReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.servicename_){}
    , decltype(_impl_.version_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.servicename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.servicename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetEndpointsReq::~GetEndpointsReq() {
  // @@protoc_insertion_point(destructor:GetEndpointsReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetEndpointsReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.servicename_.Destroy();
}

void GetEndpointsReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetEndpointsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:GetEndpointsReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.servicename_.ClearToEmpty();
  _impl_.version_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEndpointsReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string serviceName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_servicename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "GetEndpointsReq.serviceName"));
        } else
          goto handle_unusual;
        continue;
      // uint64 version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetEndpointsReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetEndpointsReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string serviceName = 1;
  if (!this->_internal_servicename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_servicename().data(), static_cast<int>(this->_internal_servicename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetEndpointsReq.serviceName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_servicename(), target);
  }

  // uint64 version = 2;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetEndpointsReq)
  return target;
}

size_t GetEndpointsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetEndpointsReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string serviceName = 1;
  if (!this->_internal_servicename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_servicename());
  }

  // uint64 version = 2;
  if (this->_internal_version() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetEndpointsReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetEndpointsReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetEndpointsReq::GetClassData() const { return &_class_data_; }


void GetEndpointsReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetEndpointsReq*>(&to_msg);
  auto& from = static_cast<const GetEndpointsReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GetEndpointsReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_servicename().empty()) {
    _this->_internal_set_servicename(from._internal_servicename());
  }
  if (from._internal_version() != 0) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetEndpointsReq::CopyFrom(const GetEndpointsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetEndpointsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEndpointsReq::IsInitialized() const {
  return true;
}

void GetEndpointsReq::InternalSwap(GetEndpointsReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.servicename_, lhs_arena,
      &other->_impl_.servicename_, rhs_arena
  );
  swap(_impl_.version_, other->_impl_.version_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEndpointsReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_epcache_2eproto_getter, &descriptor_table_epcache_2eproto_once,
      file_level_metadata_epcache_2eproto[5]);
}

// ===================================================================

class GetEndpointsRep::_Internal {
 public:
};

GetEndpointsRep::GetEndpointsRep(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:GetEndpointsRep)
}
GetEndpointsRep::GetEndpointsRep(const GetEndpointsRep& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetEndpointsRep* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.instances_){from._impl_.instances_}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.version_ = from._impl_.version_;
  // @@protoc_insertion_point(copy_constructor:GetEndpointsRep)
}

inline void GetEndpointsRep::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.instances_){arena}
    , decltype(_impl_.version_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetEndpointsRep::~GetEndpointsRep() {
  // @@protoc_insertion_point(destructor:GetEndpointsRep)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetEndpointsRep::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.instances_.~RepeatedPtrField();
}

void GetEndpointsRep::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetEndpointsRep::Clear() {
// @@protoc_insertion_point(message_clear_start:GetEndpointsRep)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instances_.Clear();
  _impl_.version_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEndpointsRep::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Instance instances = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_instances(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // uint64 version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetEndpointsRep::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetEndpointsRep)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Instance instances = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_instances_size()); i < n; i++) {
    const auto& repfield = this->_internal_instances(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // uint64 version = 2;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetEndpointsRep)
  return target;
}

size_t GetEndpointsRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetEndpointsRep)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Instance instances = 1;
  total_size += 1UL * this->_internal_instances_size();
  for (const auto& msg : this->_impl_.instances_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint64 version = 2;
  if (this->_internal_version() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetEndpointsRep::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetEndpointsRep::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetEndpointsRep::GetClassData() const { return &_class_data_; }


void GetEndpointsRep::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetEndpointsRep*>(&to_msg);
  auto& from = static_cast<const GetEndpointsRep&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GetEndpointsRep)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.instances_.MergeFrom(from._impl_.instances_);
  if (from._internal_version() != 0) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetEndpointsRep::CopyFrom(const GetEndpointsRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetEndpointsRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEndpointsRep::IsInitialized() const {
  return true;
}

void GetEndpointsRep::InternalSwap(GetEndpointsRep* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.instances_.InternalSwap(&other->_impl_.instances_);
  swap(_impl_.version_, other->_impl_.version_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEndpointsRep::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_epcache_2eproto_getter, &descriptor_table_epcache_2eproto_once,
      file_level_metadata_epcache_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Instance*
Arena::CreateMaybeMessage< ::Instance >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Instance >(arena);
}
template<> PROTOBUF_NOINLINE ::RegisterEndpointReq*
Arena::CreateMaybeMessage< ::RegisterEndpointReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::RegisterEndpointReq >(arena);
}
template<> PROTOBUF_NOINLINE ::RegisterEndpointRep*
Arena::CreateMaybeMessage< ::RegisterEndpointRep >(Arena* arena) {
  return Arena::CreateMessageInternal< ::RegisterEndpointRep >(arena);
}
template<> PROTOBUF_NOINLINE ::DeregisterEndpointReq*
Arena::CreateMaybeMessage< ::DeregisterEndpointReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DeregisterEndpointReq >(arena);
}
template<> PROTOBUF_NOINLINE ::DeregisterEndpointRep*
Arena::CreateMaybeMessage< ::DeregisterEndpointRep >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DeregisterEndpointRep >(arena);
}
template<> PROTOBUF_NOINLINE ::GetEndpointsReq*
Arena::CreateMaybeMessage< ::GetEndpointsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetEndpointsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::GetEndpointsRep*
Arena::CreateMaybeMessage< ::GetEndpointsRep >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetEndpointsRep >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
