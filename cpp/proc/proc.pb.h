// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proc/proc.proto
// Protobuf C++ Version: 6.30.2

#ifndef proc_2fproc_2eproto_2epb_2eh
#define proc_2fproc_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_type_handler.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
#include "sigmap/sigmap.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proc_2fproc_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proc_2fproc_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_proc_2fproc_2eproto;
}  // extern "C"
class ProcEnvProto;
struct ProcEnvProtoDefaultTypeInternal;
extern ProcEnvProtoDefaultTypeInternal _ProcEnvProto_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProcEnvProto_class_data_;
class ProcEnvProto_EtcdEndpointsEntry_DoNotUse;
struct ProcEnvProto_EtcdEndpointsEntry_DoNotUseDefaultTypeInternal;
extern ProcEnvProto_EtcdEndpointsEntry_DoNotUseDefaultTypeInternal _ProcEnvProto_EtcdEndpointsEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProcEnvProto_EtcdEndpointsEntry_DoNotUse_class_data_;
class ProcEnvProto_SecretsMapEntry_DoNotUse;
struct ProcEnvProto_SecretsMapEntry_DoNotUseDefaultTypeInternal;
extern ProcEnvProto_SecretsMapEntry_DoNotUseDefaultTypeInternal _ProcEnvProto_SecretsMapEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProcEnvProto_SecretsMapEntry_DoNotUse_class_data_;
class ProcProto;
struct ProcProtoDefaultTypeInternal;
extern ProcProtoDefaultTypeInternal _ProcProto_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProcProto_class_data_;
class ProcProto_EnvEntry_DoNotUse;
struct ProcProto_EnvEntry_DoNotUseDefaultTypeInternal;
extern ProcProto_EnvEntry_DoNotUseDefaultTypeInternal _ProcProto_EnvEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProcProto_EnvEntry_DoNotUse_class_data_;
class ProcSeqno;
struct ProcSeqnoDefaultTypeInternal;
extern ProcSeqnoDefaultTypeInternal _ProcSeqno_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProcSeqno_class_data_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class ProcSeqno final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ProcSeqno) */ {
 public:
  inline ProcSeqno() : ProcSeqno(nullptr) {}
  ~ProcSeqno() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProcSeqno* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProcSeqno));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProcSeqno(::google::protobuf::internal::ConstantInitialized);

  inline ProcSeqno(const ProcSeqno& from) : ProcSeqno(nullptr, from) {}
  inline ProcSeqno(ProcSeqno&& from) noexcept
      : ProcSeqno(nullptr, std::move(from)) {}
  inline ProcSeqno& operator=(const ProcSeqno& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcSeqno& operator=(ProcSeqno&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProcSeqno& default_instance() {
    return *reinterpret_cast<const ProcSeqno*>(
        &_ProcSeqno_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ProcSeqno& a, ProcSeqno& b) { a.Swap(&b); }
  inline void Swap(ProcSeqno* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProcSeqno* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProcSeqno* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProcSeqno>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProcSeqno& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProcSeqno& from) { ProcSeqno::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProcSeqno* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ProcSeqno"; }

 protected:
  explicit ProcSeqno(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ProcSeqno(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ProcSeqno& from);
  ProcSeqno(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ProcSeqno&& from) noexcept
      : ProcSeqno(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProcqIDFieldNumber = 3,
    kMSchedIDFieldNumber = 4,
    kEpochFieldNumber = 1,
    kSeqnoFieldNumber = 2,
  };
  // string procqID = 3;
  void clear_procqid() ;
  const std::string& procqid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_procqid(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_procqid();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_procqid();
  void set_allocated_procqid(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_procqid() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_procqid(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_procqid();

  public:
  // string mSchedID = 4;
  void clear_mschedid() ;
  const std::string& mschedid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mschedid(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_mschedid();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_mschedid();
  void set_allocated_mschedid(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_mschedid() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_mschedid(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_mschedid();

  public:
  // uint64 epoch = 1;
  void clear_epoch() ;
  ::uint64_t epoch() const;
  void set_epoch(::uint64_t value);

  private:
  ::uint64_t _internal_epoch() const;
  void _internal_set_epoch(::uint64_t value);

  public:
  // uint64 seqno = 2;
  void clear_seqno() ;
  ::uint64_t seqno() const;
  void set_seqno(::uint64_t value);

  private:
  ::uint64_t _internal_seqno() const;
  void _internal_set_seqno(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:ProcSeqno)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 33,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ProcSeqno& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr procqid_;
    ::google::protobuf::internal::ArenaStringPtr mschedid_;
    ::uint64_t epoch_;
    ::uint64_t seqno_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proc_2fproc_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ProcSeqno_class_data_;
// -------------------------------------------------------------------

class ProcProto_EnvEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ProcProto_EnvEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProcProto_EnvEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit ProcProto_EnvEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_ProcProto_EnvEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_proc_2fproc_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 35,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull ProcProto_EnvEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class ProcEnvProto_SecretsMapEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ProcEnvProto_SecretsMapEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProcEnvProto_SecretsMapEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit ProcEnvProto_SecretsMapEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_ProcEnvProto_SecretsMapEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_proc_2fproc_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 40,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull ProcEnvProto_SecretsMapEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class ProcEnvProto_EtcdEndpointsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ProcEnvProto_EtcdEndpointsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProcEnvProto_EtcdEndpointsEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit ProcEnvProto_EtcdEndpointsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_ProcEnvProto_EtcdEndpointsEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_proc_2fproc_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 43,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull ProcEnvProto_EtcdEndpointsEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class ProcEnvProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ProcEnvProto) */ {
 public:
  inline ProcEnvProto() : ProcEnvProto(nullptr) {}
  ~ProcEnvProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProcEnvProto* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProcEnvProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProcEnvProto(::google::protobuf::internal::ConstantInitialized);

  inline ProcEnvProto(const ProcEnvProto& from) : ProcEnvProto(nullptr, from) {}
  inline ProcEnvProto(ProcEnvProto&& from) noexcept
      : ProcEnvProto(nullptr, std::move(from)) {}
  inline ProcEnvProto& operator=(const ProcEnvProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcEnvProto& operator=(ProcEnvProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProcEnvProto& default_instance() {
    return *reinterpret_cast<const ProcEnvProto*>(
        &_ProcEnvProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ProcEnvProto& a, ProcEnvProto& b) { a.Swap(&b); }
  inline void Swap(ProcEnvProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProcEnvProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProcEnvProto* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProcEnvProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProcEnvProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProcEnvProto& from) { ProcEnvProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProcEnvProto* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ProcEnvProto"; }

 protected:
  explicit ProcEnvProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ProcEnvProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ProcEnvProto& from);
  ProcEnvProto(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ProcEnvProto&& from) noexcept
      : ProcEnvProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEtcdEndpointsFieldNumber = 7,
    kSecretsMapFieldNumber = 23,
    kSigmaPathFieldNumber = 24,
    kKernelsFieldNumber = 25,
    kPidStrFieldNumber = 1,
    kProgramFieldNumber = 2,
    kRealmStrFieldNumber = 3,
    kProcDirFieldNumber = 5,
    kParentDirFieldNumber = 6,
    kOuterContainerIPStrFieldNumber = 8,
    kInnerContainerIPStrFieldNumber = 9,
    kKernelIDFieldNumber = 10,
    kBuildTagFieldNumber = 11,
    kPerfFieldNumber = 12,
    kDebugFieldNumber = 13,
    kProcdPIDStrFieldNumber = 14,
    kStraceFieldNumber = 18,
    kRealmSwitchStrFieldNumber = 26,
    kVersionFieldNumber = 27,
    kFailFieldNumber = 28,
    kPrincipalFieldNumber = 4,
    kSpawnTimePBFieldNumber = 17,
    kMSchedEndpointProtoFieldNumber = 19,
    kNamedEndpointProtoFieldNumber = 20,
    kHowIntFieldNumber = 16,
    kPrivilegedFieldNumber = 15,
    kUseSPProxyFieldNumber = 21,
    kUseDialProxyFieldNumber = 22,
  };
  // map<string, .TendpointProto> etcdEndpoints = 7;
  int etcdendpoints_size() const;
  private:
  int _internal_etcdendpoints_size() const;

  public:
  void clear_etcdendpoints() ;
  const ::google::protobuf::Map<std::string, ::TendpointProto>& etcdendpoints() const;
  ::google::protobuf::Map<std::string, ::TendpointProto>* PROTOBUF_NONNULL mutable_etcdendpoints();

  private:
  const ::google::protobuf::Map<std::string, ::TendpointProto>& _internal_etcdendpoints() const;
  ::google::protobuf::Map<std::string, ::TendpointProto>* PROTOBUF_NONNULL _internal_mutable_etcdendpoints();

  public:
  // map<string, .SecretProto> secretsMap = 23;
  int secretsmap_size() const;
  private:
  int _internal_secretsmap_size() const;

  public:
  void clear_secretsmap() ;
  const ::google::protobuf::Map<std::string, ::SecretProto>& secretsmap() const;
  ::google::protobuf::Map<std::string, ::SecretProto>* PROTOBUF_NONNULL mutable_secretsmap();

  private:
  const ::google::protobuf::Map<std::string, ::SecretProto>& _internal_secretsmap() const;
  ::google::protobuf::Map<std::string, ::SecretProto>* PROTOBUF_NONNULL _internal_mutable_secretsmap();

  public:
  // repeated string sigmaPath = 24;
  int sigmapath_size() const;
  private:
  int _internal_sigmapath_size() const;

  public:
  void clear_sigmapath() ;
  const std::string& sigmapath(int index) const;
  std::string* PROTOBUF_NONNULL mutable_sigmapath(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sigmapath(int index, Arg_&& value, Args_... args);
  std::string* PROTOBUF_NONNULL add_sigmapath();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_sigmapath(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& sigmapath() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL mutable_sigmapath();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_sigmapath() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL _internal_mutable_sigmapath();

  public:
  // repeated string kernels = 25;
  int kernels_size() const;
  private:
  int _internal_kernels_size() const;

  public:
  void clear_kernels() ;
  const std::string& kernels(int index) const;
  std::string* PROTOBUF_NONNULL mutable_kernels(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_kernels(int index, Arg_&& value, Args_... args);
  std::string* PROTOBUF_NONNULL add_kernels();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_kernels(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& kernels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL mutable_kernels();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_kernels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL _internal_mutable_kernels();

  public:
  // string pidStr = 1;
  void clear_pidstr() ;
  const std::string& pidstr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pidstr(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_pidstr();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_pidstr();
  void set_allocated_pidstr(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_pidstr() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_pidstr(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_pidstr();

  public:
  // string program = 2;
  void clear_program() ;
  const std::string& program() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_program(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_program();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_program();
  void set_allocated_program(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_program() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_program(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_program();

  public:
  // string realmStr = 3;
  void clear_realmstr() ;
  const std::string& realmstr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_realmstr(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_realmstr();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_realmstr();
  void set_allocated_realmstr(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_realmstr() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_realmstr(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_realmstr();

  public:
  // string procDir = 5;
  void clear_procdir() ;
  const std::string& procdir() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_procdir(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_procdir();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_procdir();
  void set_allocated_procdir(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_procdir() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_procdir(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_procdir();

  public:
  // string parentDir = 6;
  void clear_parentdir() ;
  const std::string& parentdir() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_parentdir(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_parentdir();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_parentdir();
  void set_allocated_parentdir(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_parentdir() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_parentdir(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_parentdir();

  public:
  // string outerContainerIPStr = 8;
  void clear_outercontaineripstr() ;
  const std::string& outercontaineripstr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_outercontaineripstr(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_outercontaineripstr();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_outercontaineripstr();
  void set_allocated_outercontaineripstr(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_outercontaineripstr() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_outercontaineripstr(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_outercontaineripstr();

  public:
  // string innerContainerIPStr = 9;
  void clear_innercontaineripstr() ;
  const std::string& innercontaineripstr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_innercontaineripstr(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_innercontaineripstr();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_innercontaineripstr();
  void set_allocated_innercontaineripstr(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_innercontaineripstr() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_innercontaineripstr(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_innercontaineripstr();

  public:
  // string kernelID = 10;
  void clear_kernelid() ;
  const std::string& kernelid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_kernelid(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_kernelid();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_kernelid();
  void set_allocated_kernelid(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_kernelid() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_kernelid(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_kernelid();

  public:
  // string buildTag = 11;
  void clear_buildtag() ;
  const std::string& buildtag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_buildtag(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_buildtag();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_buildtag();
  void set_allocated_buildtag(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_buildtag() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_buildtag(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_buildtag();

  public:
  // string perf = 12;
  void clear_perf() ;
  const std::string& perf() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_perf(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_perf();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_perf();
  void set_allocated_perf(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_perf() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_perf(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_perf();

  public:
  // string debug = 13;
  void clear_debug() ;
  const std::string& debug() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_debug(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_debug();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_debug();
  void set_allocated_debug(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_debug() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_debug(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_debug();

  public:
  // string procdPIDStr = 14;
  void clear_procdpidstr() ;
  const std::string& procdpidstr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_procdpidstr(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_procdpidstr();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_procdpidstr();
  void set_allocated_procdpidstr(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_procdpidstr() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_procdpidstr(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_procdpidstr();

  public:
  // string strace = 18;
  void clear_strace() ;
  const std::string& strace() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_strace(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_strace();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_strace();
  void set_allocated_strace(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_strace() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_strace(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_strace();

  public:
  // string realmSwitchStr = 26;
  void clear_realmswitchstr() ;
  const std::string& realmswitchstr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_realmswitchstr(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_realmswitchstr();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_realmswitchstr();
  void set_allocated_realmswitchstr(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_realmswitchstr() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_realmswitchstr(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_realmswitchstr();

  public:
  // string version = 27;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_version();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_version();
  void set_allocated_version(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_version() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_version(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_version();

  public:
  // string fail = 28;
  void clear_fail() ;
  const std::string& fail() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fail(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_fail();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_fail();
  void set_allocated_fail(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_fail() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_fail(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_fail();

  public:
  // .Tprincipal principal = 4;
  bool has_principal() const;
  void clear_principal() ;
  const ::Tprincipal& principal() const;
  [[nodiscard]] ::Tprincipal* PROTOBUF_NULLABLE release_principal();
  ::Tprincipal* PROTOBUF_NONNULL mutable_principal();
  void set_allocated_principal(::Tprincipal* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_principal(::Tprincipal* PROTOBUF_NULLABLE value);
  ::Tprincipal* PROTOBUF_NULLABLE unsafe_arena_release_principal();

  private:
  const ::Tprincipal& _internal_principal() const;
  ::Tprincipal* PROTOBUF_NONNULL _internal_mutable_principal();

  public:
  // .google.protobuf.Timestamp spawnTimePB = 17;
  bool has_spawntimepb() const;
  void clear_spawntimepb() ;
  const ::google::protobuf::Timestamp& spawntimepb() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_spawntimepb();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_spawntimepb();
  void set_allocated_spawntimepb(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_spawntimepb(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_spawntimepb();

  private:
  const ::google::protobuf::Timestamp& _internal_spawntimepb() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_spawntimepb();

  public:
  // .TendpointProto mSchedEndpointProto = 19;
  bool has_mschedendpointproto() const;
  void clear_mschedendpointproto() ;
  const ::TendpointProto& mschedendpointproto() const;
  [[nodiscard]] ::TendpointProto* PROTOBUF_NULLABLE release_mschedendpointproto();
  ::TendpointProto* PROTOBUF_NONNULL mutable_mschedendpointproto();
  void set_allocated_mschedendpointproto(::TendpointProto* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_mschedendpointproto(::TendpointProto* PROTOBUF_NULLABLE value);
  ::TendpointProto* PROTOBUF_NULLABLE unsafe_arena_release_mschedendpointproto();

  private:
  const ::TendpointProto& _internal_mschedendpointproto() const;
  ::TendpointProto* PROTOBUF_NONNULL _internal_mutable_mschedendpointproto();

  public:
  // .TendpointProto namedEndpointProto = 20;
  bool has_namedendpointproto() const;
  void clear_namedendpointproto() ;
  const ::TendpointProto& namedendpointproto() const;
  [[nodiscard]] ::TendpointProto* PROTOBUF_NULLABLE release_namedendpointproto();
  ::TendpointProto* PROTOBUF_NONNULL mutable_namedendpointproto();
  void set_allocated_namedendpointproto(::TendpointProto* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_namedendpointproto(::TendpointProto* PROTOBUF_NULLABLE value);
  ::TendpointProto* PROTOBUF_NULLABLE unsafe_arena_release_namedendpointproto();

  private:
  const ::TendpointProto& _internal_namedendpointproto() const;
  ::TendpointProto* PROTOBUF_NONNULL _internal_mutable_namedendpointproto();

  public:
  // int32 howInt = 16;
  void clear_howint() ;
  ::int32_t howint() const;
  void set_howint(::int32_t value);

  private:
  ::int32_t _internal_howint() const;
  void _internal_set_howint(::int32_t value);

  public:
  // bool privileged = 15;
  void clear_privileged() ;
  bool privileged() const;
  void set_privileged(bool value);

  private:
  bool _internal_privileged() const;
  void _internal_set_privileged(bool value);

  public:
  // bool useSPProxy = 21;
  void clear_usespproxy() ;
  bool usespproxy() const;
  void set_usespproxy(bool value);

  private:
  bool _internal_usespproxy() const;
  void _internal_set_usespproxy(bool value);

  public:
  // bool useDialProxy = 22;
  void clear_usedialproxy() ;
  bool usedialproxy() const;
  void set_usedialproxy(bool value);

  private:
  bool _internal_usedialproxy() const;
  void _internal_set_usedialproxy(bool value);

  public:
  // @@protoc_insertion_point(class_scope:ProcEnvProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<5, 28,
                                   8, 226,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ProcEnvProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<ProcEnvProto_EtcdEndpointsEntry_DoNotUse, std::string, ::TendpointProto,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        etcdendpoints_;
    ::google::protobuf::internal::MapField<ProcEnvProto_SecretsMapEntry_DoNotUse, std::string, ::SecretProto,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        secretsmap_;
    ::google::protobuf::RepeatedPtrField<std::string> sigmapath_;
    ::google::protobuf::RepeatedPtrField<std::string> kernels_;
    ::google::protobuf::internal::ArenaStringPtr pidstr_;
    ::google::protobuf::internal::ArenaStringPtr program_;
    ::google::protobuf::internal::ArenaStringPtr realmstr_;
    ::google::protobuf::internal::ArenaStringPtr procdir_;
    ::google::protobuf::internal::ArenaStringPtr parentdir_;
    ::google::protobuf::internal::ArenaStringPtr outercontaineripstr_;
    ::google::protobuf::internal::ArenaStringPtr innercontaineripstr_;
    ::google::protobuf::internal::ArenaStringPtr kernelid_;
    ::google::protobuf::internal::ArenaStringPtr buildtag_;
    ::google::protobuf::internal::ArenaStringPtr perf_;
    ::google::protobuf::internal::ArenaStringPtr debug_;
    ::google::protobuf::internal::ArenaStringPtr procdpidstr_;
    ::google::protobuf::internal::ArenaStringPtr strace_;
    ::google::protobuf::internal::ArenaStringPtr realmswitchstr_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::internal::ArenaStringPtr fail_;
    ::Tprincipal* PROTOBUF_NULLABLE principal_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE spawntimepb_;
    ::TendpointProto* PROTOBUF_NULLABLE mschedendpointproto_;
    ::TendpointProto* PROTOBUF_NULLABLE namedendpointproto_;
    ::int32_t howint_;
    bool privileged_;
    bool usespproxy_;
    bool usedialproxy_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proc_2fproc_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ProcEnvProto_class_data_;
// -------------------------------------------------------------------

class ProcProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ProcProto) */ {
 public:
  inline ProcProto() : ProcProto(nullptr) {}
  ~ProcProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProcProto* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProcProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProcProto(::google::protobuf::internal::ConstantInitialized);

  inline ProcProto(const ProcProto& from) : ProcProto(nullptr, from) {}
  inline ProcProto(ProcProto&& from) noexcept
      : ProcProto(nullptr, std::move(from)) {}
  inline ProcProto& operator=(const ProcProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcProto& operator=(ProcProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProcProto& default_instance() {
    return *reinterpret_cast<const ProcProto*>(
        &_ProcProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ProcProto& a, ProcProto& b) { a.Swap(&b); }
  inline void Swap(ProcProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProcProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProcProto* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProcProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProcProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProcProto& from) { ProcProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProcProto* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ProcProto"; }

 protected:
  explicit ProcProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ProcProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ProcProto& from);
  ProcProto(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ProcProto&& from) noexcept
      : ProcProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kArgsFieldNumber = 2,
    kEnvFieldNumber = 3,
    kProcEnvProtoFieldNumber = 1,
    kTypeIntFieldNumber = 4,
    kMcpuIntFieldNumber = 5,
    kMemIntFieldNumber = 6,
  };
  // repeated string args = 2;
  int args_size() const;
  private:
  int _internal_args_size() const;

  public:
  void clear_args() ;
  const std::string& args(int index) const;
  std::string* PROTOBUF_NONNULL mutable_args(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_args(int index, Arg_&& value, Args_... args);
  std::string* PROTOBUF_NONNULL add_args();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_args(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& args() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL mutable_args();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_args() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL _internal_mutable_args();

  public:
  // map<string, string> env = 3;
  int env_size() const;
  private:
  int _internal_env_size() const;

  public:
  void clear_env() ;
  const ::google::protobuf::Map<std::string, std::string>& env() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_env();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_env() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_env();

  public:
  // .ProcEnvProto procEnvProto = 1;
  bool has_procenvproto() const;
  void clear_procenvproto() ;
  const ::ProcEnvProto& procenvproto() const;
  [[nodiscard]] ::ProcEnvProto* PROTOBUF_NULLABLE release_procenvproto();
  ::ProcEnvProto* PROTOBUF_NONNULL mutable_procenvproto();
  void set_allocated_procenvproto(::ProcEnvProto* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_procenvproto(::ProcEnvProto* PROTOBUF_NULLABLE value);
  ::ProcEnvProto* PROTOBUF_NULLABLE unsafe_arena_release_procenvproto();

  private:
  const ::ProcEnvProto& _internal_procenvproto() const;
  ::ProcEnvProto* PROTOBUF_NONNULL _internal_mutable_procenvproto();

  public:
  // uint32 typeInt = 4;
  void clear_typeint() ;
  ::uint32_t typeint() const;
  void set_typeint(::uint32_t value);

  private:
  ::uint32_t _internal_typeint() const;
  void _internal_set_typeint(::uint32_t value);

  public:
  // uint32 mcpuInt = 5;
  void clear_mcpuint() ;
  ::uint32_t mcpuint() const;
  void set_mcpuint(::uint32_t value);

  private:
  ::uint32_t _internal_mcpuint() const;
  void _internal_set_mcpuint(::uint32_t value);

  public:
  // uint32 memInt = 6;
  void clear_memint() ;
  ::uint32_t memint() const;
  void set_memint(::uint32_t value);

  private:
  ::uint32_t _internal_memint() const;
  void _internal_set_memint(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ProcProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   2, 25,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ProcProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> args_;
    ::google::protobuf::internal::MapField<ProcProto_EnvEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        env_;
    ::ProcEnvProto* PROTOBUF_NULLABLE procenvproto_;
    ::uint32_t typeint_;
    ::uint32_t mcpuint_;
    ::uint32_t memint_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proc_2fproc_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ProcProto_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ProcSeqno

// uint64 epoch = 1;
inline void ProcSeqno::clear_epoch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoch_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t ProcSeqno::epoch() const {
  // @@protoc_insertion_point(field_get:ProcSeqno.epoch)
  return _internal_epoch();
}
inline void ProcSeqno::set_epoch(::uint64_t value) {
  _internal_set_epoch(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:ProcSeqno.epoch)
}
inline ::uint64_t ProcSeqno::_internal_epoch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.epoch_;
}
inline void ProcSeqno::_internal_set_epoch(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoch_ = value;
}

// uint64 seqno = 2;
inline void ProcSeqno::clear_seqno() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seqno_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint64_t ProcSeqno::seqno() const {
  // @@protoc_insertion_point(field_get:ProcSeqno.seqno)
  return _internal_seqno();
}
inline void ProcSeqno::set_seqno(::uint64_t value) {
  _internal_set_seqno(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:ProcSeqno.seqno)
}
inline ::uint64_t ProcSeqno::_internal_seqno() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seqno_;
}
inline void ProcSeqno::_internal_set_seqno(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seqno_ = value;
}

// string procqID = 3;
inline void ProcSeqno::clear_procqid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.procqid_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProcSeqno::procqid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcSeqno.procqID)
  return _internal_procqid();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProcSeqno::set_procqid(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.procqid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProcSeqno.procqID)
}
inline std::string* PROTOBUF_NONNULL ProcSeqno::mutable_procqid()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_procqid();
  // @@protoc_insertion_point(field_mutable:ProcSeqno.procqID)
  return _s;
}
inline const std::string& ProcSeqno::_internal_procqid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.procqid_.Get();
}
inline void ProcSeqno::_internal_set_procqid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.procqid_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ProcSeqno::_internal_mutable_procqid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.procqid_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ProcSeqno::release_procqid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcSeqno.procqID)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.procqid_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.procqid_.Set("", GetArena());
  }
  return released;
}
inline void ProcSeqno::set_allocated_procqid(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.procqid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.procqid_.IsDefault()) {
    _impl_.procqid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ProcSeqno.procqID)
}

// string mSchedID = 4;
inline void ProcSeqno::clear_mschedid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mschedid_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ProcSeqno::mschedid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcSeqno.mSchedID)
  return _internal_mschedid();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProcSeqno::set_mschedid(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.mschedid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProcSeqno.mSchedID)
}
inline std::string* PROTOBUF_NONNULL ProcSeqno::mutable_mschedid()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mschedid();
  // @@protoc_insertion_point(field_mutable:ProcSeqno.mSchedID)
  return _s;
}
inline const std::string& ProcSeqno::_internal_mschedid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mschedid_.Get();
}
inline void ProcSeqno::_internal_set_mschedid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.mschedid_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ProcSeqno::_internal_mutable_mschedid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.mschedid_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ProcSeqno::release_mschedid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcSeqno.mSchedID)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.mschedid_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.mschedid_.Set("", GetArena());
  }
  return released;
}
inline void ProcSeqno::set_allocated_mschedid(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.mschedid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.mschedid_.IsDefault()) {
    _impl_.mschedid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ProcSeqno.mSchedID)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ProcEnvProto

// string pidStr = 1;
inline void ProcEnvProto::clear_pidstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pidstr_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProcEnvProto::pidstr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.pidStr)
  return _internal_pidstr();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProcEnvProto::set_pidstr(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.pidstr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProcEnvProto.pidStr)
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::mutable_pidstr()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pidstr();
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.pidStr)
  return _s;
}
inline const std::string& ProcEnvProto::_internal_pidstr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pidstr_.Get();
}
inline void ProcEnvProto::_internal_set_pidstr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.pidstr_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_pidstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.pidstr_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ProcEnvProto::release_pidstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcEnvProto.pidStr)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.pidstr_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.pidstr_.Set("", GetArena());
  }
  return released;
}
inline void ProcEnvProto::set_allocated_pidstr(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.pidstr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pidstr_.IsDefault()) {
    _impl_.pidstr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ProcEnvProto.pidStr)
}

// string program = 2;
inline void ProcEnvProto::clear_program() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.program_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ProcEnvProto::program() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.program)
  return _internal_program();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProcEnvProto::set_program(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.program_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProcEnvProto.program)
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::mutable_program()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_program();
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.program)
  return _s;
}
inline const std::string& ProcEnvProto::_internal_program() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.program_.Get();
}
inline void ProcEnvProto::_internal_set_program(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.program_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_program() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.program_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ProcEnvProto::release_program() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcEnvProto.program)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.program_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.program_.Set("", GetArena());
  }
  return released;
}
inline void ProcEnvProto::set_allocated_program(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.program_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.program_.IsDefault()) {
    _impl_.program_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ProcEnvProto.program)
}

// string realmStr = 3;
inline void ProcEnvProto::clear_realmstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.realmstr_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& ProcEnvProto::realmstr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.realmStr)
  return _internal_realmstr();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProcEnvProto::set_realmstr(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.realmstr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProcEnvProto.realmStr)
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::mutable_realmstr()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_realmstr();
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.realmStr)
  return _s;
}
inline const std::string& ProcEnvProto::_internal_realmstr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.realmstr_.Get();
}
inline void ProcEnvProto::_internal_set_realmstr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.realmstr_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_realmstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.realmstr_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ProcEnvProto::release_realmstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcEnvProto.realmStr)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.realmstr_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.realmstr_.Set("", GetArena());
  }
  return released;
}
inline void ProcEnvProto::set_allocated_realmstr(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.realmstr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.realmstr_.IsDefault()) {
    _impl_.realmstr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ProcEnvProto.realmStr)
}

// .Tprincipal principal = 4;
inline bool ProcEnvProto::has_principal() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.principal_ != nullptr);
  return value;
}
inline const ::Tprincipal& ProcEnvProto::_internal_principal() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Tprincipal* p = _impl_.principal_;
  return p != nullptr ? *p : reinterpret_cast<const ::Tprincipal&>(::_Tprincipal_default_instance_);
}
inline const ::Tprincipal& ProcEnvProto::principal() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.principal)
  return _internal_principal();
}
inline void ProcEnvProto::unsafe_arena_set_allocated_principal(
    ::Tprincipal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.principal_);
  }
  _impl_.principal_ = reinterpret_cast<::Tprincipal*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00010000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00010000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProcEnvProto.principal)
}
inline ::Tprincipal* PROTOBUF_NULLABLE ProcEnvProto::release_principal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00010000u;
  ::Tprincipal* released = _impl_.principal_;
  _impl_.principal_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Tprincipal* PROTOBUF_NULLABLE ProcEnvProto::unsafe_arena_release_principal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcEnvProto.principal)

  _impl_._has_bits_[0] &= ~0x00010000u;
  ::Tprincipal* temp = _impl_.principal_;
  _impl_.principal_ = nullptr;
  return temp;
}
inline ::Tprincipal* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_principal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.principal_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Tprincipal>(GetArena());
    _impl_.principal_ = reinterpret_cast<::Tprincipal*>(p);
  }
  return _impl_.principal_;
}
inline ::Tprincipal* PROTOBUF_NONNULL ProcEnvProto::mutable_principal()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00010000u;
  ::Tprincipal* _msg = _internal_mutable_principal();
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.principal)
  return _msg;
}
inline void ProcEnvProto::set_allocated_principal(::Tprincipal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.principal_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00010000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00010000u;
  }

  _impl_.principal_ = reinterpret_cast<::Tprincipal*>(value);
  // @@protoc_insertion_point(field_set_allocated:ProcEnvProto.principal)
}

// string procDir = 5;
inline void ProcEnvProto::clear_procdir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.procdir_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& ProcEnvProto::procdir() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.procDir)
  return _internal_procdir();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProcEnvProto::set_procdir(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.procdir_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProcEnvProto.procDir)
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::mutable_procdir()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_procdir();
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.procDir)
  return _s;
}
inline const std::string& ProcEnvProto::_internal_procdir() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.procdir_.Get();
}
inline void ProcEnvProto::_internal_set_procdir(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.procdir_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_procdir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.procdir_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ProcEnvProto::release_procdir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcEnvProto.procDir)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.procdir_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.procdir_.Set("", GetArena());
  }
  return released;
}
inline void ProcEnvProto::set_allocated_procdir(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.procdir_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.procdir_.IsDefault()) {
    _impl_.procdir_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ProcEnvProto.procDir)
}

// string parentDir = 6;
inline void ProcEnvProto::clear_parentdir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parentdir_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& ProcEnvProto::parentdir() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.parentDir)
  return _internal_parentdir();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProcEnvProto::set_parentdir(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.parentdir_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProcEnvProto.parentDir)
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::mutable_parentdir()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_parentdir();
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.parentDir)
  return _s;
}
inline const std::string& ProcEnvProto::_internal_parentdir() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parentdir_.Get();
}
inline void ProcEnvProto::_internal_set_parentdir(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.parentdir_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_parentdir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.parentdir_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ProcEnvProto::release_parentdir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcEnvProto.parentDir)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.parentdir_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.parentdir_.Set("", GetArena());
  }
  return released;
}
inline void ProcEnvProto::set_allocated_parentdir(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.parentdir_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.parentdir_.IsDefault()) {
    _impl_.parentdir_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ProcEnvProto.parentDir)
}

// map<string, .TendpointProto> etcdEndpoints = 7;
inline int ProcEnvProto::_internal_etcdendpoints_size() const {
  return _internal_etcdendpoints().size();
}
inline int ProcEnvProto::etcdendpoints_size() const {
  return _internal_etcdendpoints_size();
}
inline const ::google::protobuf::Map<std::string, ::TendpointProto>& ProcEnvProto::_internal_etcdendpoints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.etcdendpoints_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::TendpointProto>& ProcEnvProto::etcdendpoints() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:ProcEnvProto.etcdEndpoints)
  return _internal_etcdendpoints();
}
inline ::google::protobuf::Map<std::string, ::TendpointProto>* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_etcdendpoints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.etcdendpoints_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::TendpointProto>* PROTOBUF_NONNULL ProcEnvProto::mutable_etcdendpoints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:ProcEnvProto.etcdEndpoints)
  return _internal_mutable_etcdendpoints();
}

// string outerContainerIPStr = 8;
inline void ProcEnvProto::clear_outercontaineripstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outercontaineripstr_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& ProcEnvProto::outercontaineripstr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.outerContainerIPStr)
  return _internal_outercontaineripstr();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProcEnvProto::set_outercontaineripstr(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.outercontaineripstr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProcEnvProto.outerContainerIPStr)
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::mutable_outercontaineripstr()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_outercontaineripstr();
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.outerContainerIPStr)
  return _s;
}
inline const std::string& ProcEnvProto::_internal_outercontaineripstr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.outercontaineripstr_.Get();
}
inline void ProcEnvProto::_internal_set_outercontaineripstr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.outercontaineripstr_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_outercontaineripstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.outercontaineripstr_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ProcEnvProto::release_outercontaineripstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcEnvProto.outerContainerIPStr)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.outercontaineripstr_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.outercontaineripstr_.Set("", GetArena());
  }
  return released;
}
inline void ProcEnvProto::set_allocated_outercontaineripstr(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.outercontaineripstr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.outercontaineripstr_.IsDefault()) {
    _impl_.outercontaineripstr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ProcEnvProto.outerContainerIPStr)
}

// string innerContainerIPStr = 9;
inline void ProcEnvProto::clear_innercontaineripstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.innercontaineripstr_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const std::string& ProcEnvProto::innercontaineripstr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.innerContainerIPStr)
  return _internal_innercontaineripstr();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProcEnvProto::set_innercontaineripstr(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.innercontaineripstr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProcEnvProto.innerContainerIPStr)
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::mutable_innercontaineripstr()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_innercontaineripstr();
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.innerContainerIPStr)
  return _s;
}
inline const std::string& ProcEnvProto::_internal_innercontaineripstr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.innercontaineripstr_.Get();
}
inline void ProcEnvProto::_internal_set_innercontaineripstr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.innercontaineripstr_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_innercontaineripstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.innercontaineripstr_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ProcEnvProto::release_innercontaineripstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcEnvProto.innerContainerIPStr)
  if ((_impl_._has_bits_[0] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  auto* released = _impl_.innercontaineripstr_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.innercontaineripstr_.Set("", GetArena());
  }
  return released;
}
inline void ProcEnvProto::set_allocated_innercontaineripstr(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.innercontaineripstr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.innercontaineripstr_.IsDefault()) {
    _impl_.innercontaineripstr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ProcEnvProto.innerContainerIPStr)
}

// string kernelID = 10;
inline void ProcEnvProto::clear_kernelid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kernelid_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const std::string& ProcEnvProto::kernelid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.kernelID)
  return _internal_kernelid();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProcEnvProto::set_kernelid(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.kernelid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProcEnvProto.kernelID)
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::mutable_kernelid()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_kernelid();
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.kernelID)
  return _s;
}
inline const std::string& ProcEnvProto::_internal_kernelid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kernelid_.Get();
}
inline void ProcEnvProto::_internal_set_kernelid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.kernelid_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_kernelid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  return _impl_.kernelid_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ProcEnvProto::release_kernelid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcEnvProto.kernelID)
  if ((_impl_._has_bits_[0] & 0x00000080u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000080u;
  auto* released = _impl_.kernelid_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.kernelid_.Set("", GetArena());
  }
  return released;
}
inline void ProcEnvProto::set_allocated_kernelid(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  _impl_.kernelid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.kernelid_.IsDefault()) {
    _impl_.kernelid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ProcEnvProto.kernelID)
}

// string buildTag = 11;
inline void ProcEnvProto::clear_buildtag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buildtag_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline const std::string& ProcEnvProto::buildtag() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.buildTag)
  return _internal_buildtag();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProcEnvProto::set_buildtag(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.buildtag_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProcEnvProto.buildTag)
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::mutable_buildtag()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_buildtag();
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.buildTag)
  return _s;
}
inline const std::string& ProcEnvProto::_internal_buildtag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.buildtag_.Get();
}
inline void ProcEnvProto::_internal_set_buildtag(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.buildtag_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_buildtag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  return _impl_.buildtag_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ProcEnvProto::release_buildtag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcEnvProto.buildTag)
  if ((_impl_._has_bits_[0] & 0x00000100u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000100u;
  auto* released = _impl_.buildtag_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.buildtag_.Set("", GetArena());
  }
  return released;
}
inline void ProcEnvProto::set_allocated_buildtag(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  _impl_.buildtag_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.buildtag_.IsDefault()) {
    _impl_.buildtag_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ProcEnvProto.buildTag)
}

// string perf = 12;
inline void ProcEnvProto::clear_perf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.perf_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline const std::string& ProcEnvProto::perf() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.perf)
  return _internal_perf();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProcEnvProto::set_perf(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.perf_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProcEnvProto.perf)
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::mutable_perf()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_perf();
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.perf)
  return _s;
}
inline const std::string& ProcEnvProto::_internal_perf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.perf_.Get();
}
inline void ProcEnvProto::_internal_set_perf(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.perf_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_perf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  return _impl_.perf_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ProcEnvProto::release_perf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcEnvProto.perf)
  if ((_impl_._has_bits_[0] & 0x00000200u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000200u;
  auto* released = _impl_.perf_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.perf_.Set("", GetArena());
  }
  return released;
}
inline void ProcEnvProto::set_allocated_perf(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  _impl_.perf_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.perf_.IsDefault()) {
    _impl_.perf_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ProcEnvProto.perf)
}

// string debug = 13;
inline void ProcEnvProto::clear_debug() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.debug_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline const std::string& ProcEnvProto::debug() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.debug)
  return _internal_debug();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProcEnvProto::set_debug(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.debug_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProcEnvProto.debug)
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::mutable_debug()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_debug();
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.debug)
  return _s;
}
inline const std::string& ProcEnvProto::_internal_debug() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.debug_.Get();
}
inline void ProcEnvProto::_internal_set_debug(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.debug_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_debug() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000400u;
  return _impl_.debug_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ProcEnvProto::release_debug() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcEnvProto.debug)
  if ((_impl_._has_bits_[0] & 0x00000400u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000400u;
  auto* released = _impl_.debug_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.debug_.Set("", GetArena());
  }
  return released;
}
inline void ProcEnvProto::set_allocated_debug(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  _impl_.debug_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.debug_.IsDefault()) {
    _impl_.debug_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ProcEnvProto.debug)
}

// string procdPIDStr = 14;
inline void ProcEnvProto::clear_procdpidstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.procdpidstr_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline const std::string& ProcEnvProto::procdpidstr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.procdPIDStr)
  return _internal_procdpidstr();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProcEnvProto::set_procdpidstr(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.procdpidstr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProcEnvProto.procdPIDStr)
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::mutable_procdpidstr()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_procdpidstr();
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.procdPIDStr)
  return _s;
}
inline const std::string& ProcEnvProto::_internal_procdpidstr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.procdpidstr_.Get();
}
inline void ProcEnvProto::_internal_set_procdpidstr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.procdpidstr_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_procdpidstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000800u;
  return _impl_.procdpidstr_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ProcEnvProto::release_procdpidstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcEnvProto.procdPIDStr)
  if ((_impl_._has_bits_[0] & 0x00000800u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000800u;
  auto* released = _impl_.procdpidstr_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.procdpidstr_.Set("", GetArena());
  }
  return released;
}
inline void ProcEnvProto::set_allocated_procdpidstr(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  _impl_.procdpidstr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.procdpidstr_.IsDefault()) {
    _impl_.procdpidstr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ProcEnvProto.procdPIDStr)
}

// bool privileged = 15;
inline void ProcEnvProto::clear_privileged() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.privileged_ = false;
  _impl_._has_bits_[0] &= ~0x00200000u;
}
inline bool ProcEnvProto::privileged() const {
  // @@protoc_insertion_point(field_get:ProcEnvProto.privileged)
  return _internal_privileged();
}
inline void ProcEnvProto::set_privileged(bool value) {
  _internal_set_privileged(value);
  _impl_._has_bits_[0] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:ProcEnvProto.privileged)
}
inline bool ProcEnvProto::_internal_privileged() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.privileged_;
}
inline void ProcEnvProto::_internal_set_privileged(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.privileged_ = value;
}

// int32 howInt = 16;
inline void ProcEnvProto::clear_howint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.howint_ = 0;
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline ::int32_t ProcEnvProto::howint() const {
  // @@protoc_insertion_point(field_get:ProcEnvProto.howInt)
  return _internal_howint();
}
inline void ProcEnvProto::set_howint(::int32_t value) {
  _internal_set_howint(value);
  _impl_._has_bits_[0] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:ProcEnvProto.howInt)
}
inline ::int32_t ProcEnvProto::_internal_howint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.howint_;
}
inline void ProcEnvProto::_internal_set_howint(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.howint_ = value;
}

// .google.protobuf.Timestamp spawnTimePB = 17;
inline bool ProcEnvProto::has_spawntimepb() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spawntimepb_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& ProcEnvProto::_internal_spawntimepb() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.spawntimepb_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& ProcEnvProto::spawntimepb() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.spawnTimePB)
  return _internal_spawntimepb();
}
inline void ProcEnvProto::unsafe_arena_set_allocated_spawntimepb(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.spawntimepb_);
  }
  _impl_.spawntimepb_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00020000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00020000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProcEnvProto.spawnTimePB)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE ProcEnvProto::release_spawntimepb() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00020000u;
  ::google::protobuf::Timestamp* released = _impl_.spawntimepb_;
  _impl_.spawntimepb_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE ProcEnvProto::unsafe_arena_release_spawntimepb() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcEnvProto.spawnTimePB)

  _impl_._has_bits_[0] &= ~0x00020000u;
  ::google::protobuf::Timestamp* temp = _impl_.spawntimepb_;
  _impl_.spawntimepb_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_spawntimepb() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.spawntimepb_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.spawntimepb_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.spawntimepb_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL ProcEnvProto::mutable_spawntimepb()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00020000u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_spawntimepb();
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.spawnTimePB)
  return _msg;
}
inline void ProcEnvProto::set_allocated_spawntimepb(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.spawntimepb_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00020000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00020000u;
  }

  _impl_.spawntimepb_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:ProcEnvProto.spawnTimePB)
}

// string strace = 18;
inline void ProcEnvProto::clear_strace() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strace_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline const std::string& ProcEnvProto::strace() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.strace)
  return _internal_strace();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProcEnvProto::set_strace(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.strace_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProcEnvProto.strace)
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::mutable_strace()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_strace();
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.strace)
  return _s;
}
inline const std::string& ProcEnvProto::_internal_strace() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.strace_.Get();
}
inline void ProcEnvProto::_internal_set_strace(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.strace_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_strace() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00001000u;
  return _impl_.strace_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ProcEnvProto::release_strace() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcEnvProto.strace)
  if ((_impl_._has_bits_[0] & 0x00001000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00001000u;
  auto* released = _impl_.strace_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.strace_.Set("", GetArena());
  }
  return released;
}
inline void ProcEnvProto::set_allocated_strace(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }
  _impl_.strace_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.strace_.IsDefault()) {
    _impl_.strace_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ProcEnvProto.strace)
}

// .TendpointProto mSchedEndpointProto = 19;
inline bool ProcEnvProto::has_mschedendpointproto() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mschedendpointproto_ != nullptr);
  return value;
}
inline const ::TendpointProto& ProcEnvProto::_internal_mschedendpointproto() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::TendpointProto* p = _impl_.mschedendpointproto_;
  return p != nullptr ? *p : reinterpret_cast<const ::TendpointProto&>(::_TendpointProto_default_instance_);
}
inline const ::TendpointProto& ProcEnvProto::mschedendpointproto() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.mSchedEndpointProto)
  return _internal_mschedendpointproto();
}
inline void ProcEnvProto::unsafe_arena_set_allocated_mschedendpointproto(
    ::TendpointProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mschedendpointproto_);
  }
  _impl_.mschedendpointproto_ = reinterpret_cast<::TendpointProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00040000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00040000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProcEnvProto.mSchedEndpointProto)
}
inline ::TendpointProto* PROTOBUF_NULLABLE ProcEnvProto::release_mschedendpointproto() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00040000u;
  ::TendpointProto* released = _impl_.mschedendpointproto_;
  _impl_.mschedendpointproto_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::TendpointProto* PROTOBUF_NULLABLE ProcEnvProto::unsafe_arena_release_mschedendpointproto() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcEnvProto.mSchedEndpointProto)

  _impl_._has_bits_[0] &= ~0x00040000u;
  ::TendpointProto* temp = _impl_.mschedendpointproto_;
  _impl_.mschedendpointproto_ = nullptr;
  return temp;
}
inline ::TendpointProto* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_mschedendpointproto() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mschedendpointproto_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::TendpointProto>(GetArena());
    _impl_.mschedendpointproto_ = reinterpret_cast<::TendpointProto*>(p);
  }
  return _impl_.mschedendpointproto_;
}
inline ::TendpointProto* PROTOBUF_NONNULL ProcEnvProto::mutable_mschedendpointproto()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00040000u;
  ::TendpointProto* _msg = _internal_mutable_mschedendpointproto();
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.mSchedEndpointProto)
  return _msg;
}
inline void ProcEnvProto::set_allocated_mschedendpointproto(::TendpointProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mschedendpointproto_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00040000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00040000u;
  }

  _impl_.mschedendpointproto_ = reinterpret_cast<::TendpointProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:ProcEnvProto.mSchedEndpointProto)
}

// .TendpointProto namedEndpointProto = 20;
inline bool ProcEnvProto::has_namedendpointproto() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.namedendpointproto_ != nullptr);
  return value;
}
inline const ::TendpointProto& ProcEnvProto::_internal_namedendpointproto() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::TendpointProto* p = _impl_.namedendpointproto_;
  return p != nullptr ? *p : reinterpret_cast<const ::TendpointProto&>(::_TendpointProto_default_instance_);
}
inline const ::TendpointProto& ProcEnvProto::namedendpointproto() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.namedEndpointProto)
  return _internal_namedendpointproto();
}
inline void ProcEnvProto::unsafe_arena_set_allocated_namedendpointproto(
    ::TendpointProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.namedendpointproto_);
  }
  _impl_.namedendpointproto_ = reinterpret_cast<::TendpointProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00080000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00080000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProcEnvProto.namedEndpointProto)
}
inline ::TendpointProto* PROTOBUF_NULLABLE ProcEnvProto::release_namedendpointproto() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00080000u;
  ::TendpointProto* released = _impl_.namedendpointproto_;
  _impl_.namedendpointproto_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::TendpointProto* PROTOBUF_NULLABLE ProcEnvProto::unsafe_arena_release_namedendpointproto() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcEnvProto.namedEndpointProto)

  _impl_._has_bits_[0] &= ~0x00080000u;
  ::TendpointProto* temp = _impl_.namedendpointproto_;
  _impl_.namedendpointproto_ = nullptr;
  return temp;
}
inline ::TendpointProto* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_namedendpointproto() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.namedendpointproto_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::TendpointProto>(GetArena());
    _impl_.namedendpointproto_ = reinterpret_cast<::TendpointProto*>(p);
  }
  return _impl_.namedendpointproto_;
}
inline ::TendpointProto* PROTOBUF_NONNULL ProcEnvProto::mutable_namedendpointproto()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00080000u;
  ::TendpointProto* _msg = _internal_mutable_namedendpointproto();
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.namedEndpointProto)
  return _msg;
}
inline void ProcEnvProto::set_allocated_namedendpointproto(::TendpointProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.namedendpointproto_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00080000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00080000u;
  }

  _impl_.namedendpointproto_ = reinterpret_cast<::TendpointProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:ProcEnvProto.namedEndpointProto)
}

// bool useSPProxy = 21;
inline void ProcEnvProto::clear_usespproxy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.usespproxy_ = false;
  _impl_._has_bits_[0] &= ~0x00400000u;
}
inline bool ProcEnvProto::usespproxy() const {
  // @@protoc_insertion_point(field_get:ProcEnvProto.useSPProxy)
  return _internal_usespproxy();
}
inline void ProcEnvProto::set_usespproxy(bool value) {
  _internal_set_usespproxy(value);
  _impl_._has_bits_[0] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:ProcEnvProto.useSPProxy)
}
inline bool ProcEnvProto::_internal_usespproxy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.usespproxy_;
}
inline void ProcEnvProto::_internal_set_usespproxy(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.usespproxy_ = value;
}

// bool useDialProxy = 22;
inline void ProcEnvProto::clear_usedialproxy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.usedialproxy_ = false;
  _impl_._has_bits_[0] &= ~0x00800000u;
}
inline bool ProcEnvProto::usedialproxy() const {
  // @@protoc_insertion_point(field_get:ProcEnvProto.useDialProxy)
  return _internal_usedialproxy();
}
inline void ProcEnvProto::set_usedialproxy(bool value) {
  _internal_set_usedialproxy(value);
  _impl_._has_bits_[0] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:ProcEnvProto.useDialProxy)
}
inline bool ProcEnvProto::_internal_usedialproxy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.usedialproxy_;
}
inline void ProcEnvProto::_internal_set_usedialproxy(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.usedialproxy_ = value;
}

// map<string, .SecretProto> secretsMap = 23;
inline int ProcEnvProto::_internal_secretsmap_size() const {
  return _internal_secretsmap().size();
}
inline int ProcEnvProto::secretsmap_size() const {
  return _internal_secretsmap_size();
}
inline const ::google::protobuf::Map<std::string, ::SecretProto>& ProcEnvProto::_internal_secretsmap() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.secretsmap_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::SecretProto>& ProcEnvProto::secretsmap() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:ProcEnvProto.secretsMap)
  return _internal_secretsmap();
}
inline ::google::protobuf::Map<std::string, ::SecretProto>* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_secretsmap() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.secretsmap_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::SecretProto>* PROTOBUF_NONNULL ProcEnvProto::mutable_secretsmap()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:ProcEnvProto.secretsMap)
  return _internal_mutable_secretsmap();
}

// repeated string sigmaPath = 24;
inline int ProcEnvProto::_internal_sigmapath_size() const {
  return _internal_sigmapath().size();
}
inline int ProcEnvProto::sigmapath_size() const {
  return _internal_sigmapath_size();
}
inline void ProcEnvProto::clear_sigmapath() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sigmapath_.Clear();
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::add_sigmapath()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_sigmapath()->Add();
  // @@protoc_insertion_point(field_add_mutable:ProcEnvProto.sigmaPath)
  return _s;
}
inline const std::string& ProcEnvProto::sigmapath(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.sigmaPath)
  return _internal_sigmapath().Get(index);
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::mutable_sigmapath(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.sigmaPath)
  return _internal_mutable_sigmapath()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ProcEnvProto::set_sigmapath(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_sigmapath()->Mutable(index), std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:ProcEnvProto.sigmaPath)
}
template <typename Arg_, typename... Args_>
inline void ProcEnvProto::add_sigmapath(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_sigmapath(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:ProcEnvProto.sigmaPath)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>& ProcEnvProto::sigmapath() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ProcEnvProto.sigmaPath)
  return _internal_sigmapath();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
ProcEnvProto::mutable_sigmapath() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ProcEnvProto.sigmaPath)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_sigmapath();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ProcEnvProto::_internal_sigmapath() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sigmapath_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
ProcEnvProto::_internal_mutable_sigmapath() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.sigmapath_;
}

// repeated string kernels = 25;
inline int ProcEnvProto::_internal_kernels_size() const {
  return _internal_kernels().size();
}
inline int ProcEnvProto::kernels_size() const {
  return _internal_kernels_size();
}
inline void ProcEnvProto::clear_kernels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kernels_.Clear();
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::add_kernels()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_kernels()->Add();
  // @@protoc_insertion_point(field_add_mutable:ProcEnvProto.kernels)
  return _s;
}
inline const std::string& ProcEnvProto::kernels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.kernels)
  return _internal_kernels().Get(index);
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::mutable_kernels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.kernels)
  return _internal_mutable_kernels()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ProcEnvProto::set_kernels(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_kernels()->Mutable(index), std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:ProcEnvProto.kernels)
}
template <typename Arg_, typename... Args_>
inline void ProcEnvProto::add_kernels(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_kernels(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:ProcEnvProto.kernels)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>& ProcEnvProto::kernels() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ProcEnvProto.kernels)
  return _internal_kernels();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
ProcEnvProto::mutable_kernels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ProcEnvProto.kernels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_kernels();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ProcEnvProto::_internal_kernels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kernels_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
ProcEnvProto::_internal_mutable_kernels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.kernels_;
}

// string realmSwitchStr = 26;
inline void ProcEnvProto::clear_realmswitchstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.realmswitchstr_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline const std::string& ProcEnvProto::realmswitchstr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.realmSwitchStr)
  return _internal_realmswitchstr();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProcEnvProto::set_realmswitchstr(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.realmswitchstr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProcEnvProto.realmSwitchStr)
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::mutable_realmswitchstr()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_realmswitchstr();
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.realmSwitchStr)
  return _s;
}
inline const std::string& ProcEnvProto::_internal_realmswitchstr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.realmswitchstr_.Get();
}
inline void ProcEnvProto::_internal_set_realmswitchstr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.realmswitchstr_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_realmswitchstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00002000u;
  return _impl_.realmswitchstr_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ProcEnvProto::release_realmswitchstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcEnvProto.realmSwitchStr)
  if ((_impl_._has_bits_[0] & 0x00002000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00002000u;
  auto* released = _impl_.realmswitchstr_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.realmswitchstr_.Set("", GetArena());
  }
  return released;
}
inline void ProcEnvProto::set_allocated_realmswitchstr(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }
  _impl_.realmswitchstr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.realmswitchstr_.IsDefault()) {
    _impl_.realmswitchstr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ProcEnvProto.realmSwitchStr)
}

// string version = 27;
inline void ProcEnvProto::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline const std::string& ProcEnvProto::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProcEnvProto::set_version(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProcEnvProto.version)
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::mutable_version()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.version)
  return _s;
}
inline const std::string& ProcEnvProto::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void ProcEnvProto::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.version_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00004000u;
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ProcEnvProto::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcEnvProto.version)
  if ((_impl_._has_bits_[0] & 0x00004000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00004000u;
  auto* released = _impl_.version_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.version_.Set("", GetArena());
  }
  return released;
}
inline void ProcEnvProto::set_allocated_version(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00004000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00004000u;
  }
  _impl_.version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.version_.IsDefault()) {
    _impl_.version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ProcEnvProto.version)
}

// string fail = 28;
inline void ProcEnvProto::clear_fail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fail_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline const std::string& ProcEnvProto::fail() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcEnvProto.fail)
  return _internal_fail();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProcEnvProto::set_fail(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00008000u;
  _impl_.fail_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProcEnvProto.fail)
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::mutable_fail()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_fail();
  // @@protoc_insertion_point(field_mutable:ProcEnvProto.fail)
  return _s;
}
inline const std::string& ProcEnvProto::_internal_fail() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fail_.Get();
}
inline void ProcEnvProto::_internal_set_fail(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00008000u;
  _impl_.fail_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ProcEnvProto::_internal_mutable_fail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00008000u;
  return _impl_.fail_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ProcEnvProto::release_fail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcEnvProto.fail)
  if ((_impl_._has_bits_[0] & 0x00008000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00008000u;
  auto* released = _impl_.fail_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.fail_.Set("", GetArena());
  }
  return released;
}
inline void ProcEnvProto::set_allocated_fail(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00008000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00008000u;
  }
  _impl_.fail_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.fail_.IsDefault()) {
    _impl_.fail_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ProcEnvProto.fail)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ProcProto

// .ProcEnvProto procEnvProto = 1;
inline bool ProcProto::has_procenvproto() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.procenvproto_ != nullptr);
  return value;
}
inline void ProcProto::clear_procenvproto() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.procenvproto_ != nullptr) _impl_.procenvproto_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::ProcEnvProto& ProcProto::_internal_procenvproto() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ProcEnvProto* p = _impl_.procenvproto_;
  return p != nullptr ? *p : reinterpret_cast<const ::ProcEnvProto&>(::_ProcEnvProto_default_instance_);
}
inline const ::ProcEnvProto& ProcProto::procenvproto() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcProto.procEnvProto)
  return _internal_procenvproto();
}
inline void ProcProto::unsafe_arena_set_allocated_procenvproto(
    ::ProcEnvProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.procenvproto_);
  }
  _impl_.procenvproto_ = reinterpret_cast<::ProcEnvProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProcProto.procEnvProto)
}
inline ::ProcEnvProto* PROTOBUF_NULLABLE ProcProto::release_procenvproto() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ProcEnvProto* released = _impl_.procenvproto_;
  _impl_.procenvproto_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ProcEnvProto* PROTOBUF_NULLABLE ProcProto::unsafe_arena_release_procenvproto() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProcProto.procEnvProto)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ProcEnvProto* temp = _impl_.procenvproto_;
  _impl_.procenvproto_ = nullptr;
  return temp;
}
inline ::ProcEnvProto* PROTOBUF_NONNULL ProcProto::_internal_mutable_procenvproto() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.procenvproto_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ProcEnvProto>(GetArena());
    _impl_.procenvproto_ = reinterpret_cast<::ProcEnvProto*>(p);
  }
  return _impl_.procenvproto_;
}
inline ::ProcEnvProto* PROTOBUF_NONNULL ProcProto::mutable_procenvproto()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::ProcEnvProto* _msg = _internal_mutable_procenvproto();
  // @@protoc_insertion_point(field_mutable:ProcProto.procEnvProto)
  return _msg;
}
inline void ProcProto::set_allocated_procenvproto(::ProcEnvProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.procenvproto_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.procenvproto_ = reinterpret_cast<::ProcEnvProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:ProcProto.procEnvProto)
}

// repeated string args = 2;
inline int ProcProto::_internal_args_size() const {
  return _internal_args().size();
}
inline int ProcProto::args_size() const {
  return _internal_args_size();
}
inline void ProcProto::clear_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.args_.Clear();
}
inline std::string* PROTOBUF_NONNULL ProcProto::add_args()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_args()->Add();
  // @@protoc_insertion_point(field_add_mutable:ProcProto.args)
  return _s;
}
inline const std::string& ProcProto::args(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProcProto.args)
  return _internal_args().Get(index);
}
inline std::string* PROTOBUF_NONNULL ProcProto::mutable_args(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ProcProto.args)
  return _internal_mutable_args()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ProcProto::set_args(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_args()->Mutable(index), std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:ProcProto.args)
}
template <typename Arg_, typename... Args_>
inline void ProcProto::add_args(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_args(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:ProcProto.args)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>& ProcProto::args() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ProcProto.args)
  return _internal_args();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
ProcProto::mutable_args() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ProcProto.args)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_args();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ProcProto::_internal_args() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.args_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
ProcProto::_internal_mutable_args() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.args_;
}

// map<string, string> env = 3;
inline int ProcProto::_internal_env_size() const {
  return _internal_env().size();
}
inline int ProcProto::env_size() const {
  return _internal_env_size();
}
inline void ProcProto::clear_env() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.env_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ProcProto::_internal_env() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.env_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ProcProto::env() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:ProcProto.env)
  return _internal_env();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL ProcProto::_internal_mutable_env() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.env_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL ProcProto::mutable_env()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:ProcProto.env)
  return _internal_mutable_env();
}

// uint32 typeInt = 4;
inline void ProcProto::clear_typeint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.typeint_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t ProcProto::typeint() const {
  // @@protoc_insertion_point(field_get:ProcProto.typeInt)
  return _internal_typeint();
}
inline void ProcProto::set_typeint(::uint32_t value) {
  _internal_set_typeint(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:ProcProto.typeInt)
}
inline ::uint32_t ProcProto::_internal_typeint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.typeint_;
}
inline void ProcProto::_internal_set_typeint(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.typeint_ = value;
}

// uint32 mcpuInt = 5;
inline void ProcProto::clear_mcpuint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mcpuint_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t ProcProto::mcpuint() const {
  // @@protoc_insertion_point(field_get:ProcProto.mcpuInt)
  return _internal_mcpuint();
}
inline void ProcProto::set_mcpuint(::uint32_t value) {
  _internal_set_mcpuint(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:ProcProto.mcpuInt)
}
inline ::uint32_t ProcProto::_internal_mcpuint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mcpuint_;
}
inline void ProcProto::_internal_set_mcpuint(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mcpuint_ = value;
}

// uint32 memInt = 6;
inline void ProcProto::clear_memint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memint_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t ProcProto::memint() const {
  // @@protoc_insertion_point(field_get:ProcProto.memInt)
  return _internal_memint();
}
inline void ProcProto::set_memint(::uint32_t value) {
  _internal_set_memint(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:ProcProto.memInt)
}
inline ::uint32_t ProcProto::_internal_memint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memint_;
}
inline void ProcProto::_internal_set_memint(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memint_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // proc_2fproc_2eproto_2epb_2eh
