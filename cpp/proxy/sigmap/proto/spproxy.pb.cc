// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proxy/sigmap/proto/spproxy.proto

#include "proxy/sigmap/proto/spproxy.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
        template <typename>
PROTOBUF_CONSTEXPR SigmaInitReq::SigmaInitReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.procenvproto_)*/ nullptr,
    } {}
struct SigmaInitReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaInitReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaInitReqDefaultTypeInternal() {}
  union {
    SigmaInitReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaInitReqDefaultTypeInternal _SigmaInitReq_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SigmaNullReq::SigmaNullReq(::_pbi::ConstantInitialized) {}
struct SigmaNullReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaNullReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaNullReqDefaultTypeInternal() {}
  union {
    SigmaNullReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaNullReqDefaultTypeInternal _SigmaNullReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaRealmReq::SigmaRealmReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.realmstr_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SigmaRealmReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaRealmReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaRealmReqDefaultTypeInternal() {}
  union {
    SigmaRealmReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaRealmReqDefaultTypeInternal _SigmaRealmReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaCloseReq::SigmaCloseReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.fd_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SigmaCloseReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaCloseReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaCloseReqDefaultTypeInternal() {}
  union {
    SigmaCloseReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaCloseReqDefaultTypeInternal _SigmaCloseReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaErrRep::SigmaErrRep(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.err_)*/ nullptr,
    } {}
struct SigmaErrRepDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaErrRepDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaErrRepDefaultTypeInternal() {}
  union {
    SigmaErrRep _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaErrRepDefaultTypeInternal _SigmaErrRep_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaPathReq::SigmaPathReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.path_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SigmaPathReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaPathReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaPathReqDefaultTypeInternal() {}
  union {
    SigmaPathReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaPathReqDefaultTypeInternal _SigmaPathReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaStatRep::SigmaStatRep(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.stat_)*/ nullptr,
      /*decltype(_impl_.err_)*/ nullptr,
    } {}
struct SigmaStatRepDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaStatRepDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaStatRepDefaultTypeInternal() {}
  union {
    SigmaStatRep _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaStatRepDefaultTypeInternal _SigmaStatRep_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaCreateReq::SigmaCreateReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.path_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.fence_)*/ nullptr,
      /*decltype(_impl_.perm_)*/ 0u,
      /*decltype(_impl_.mode_)*/ 0u,
      /*decltype(_impl_.leaseid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.wait_)*/ false,
    } {}
struct SigmaCreateReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaCreateReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaCreateReqDefaultTypeInternal() {}
  union {
    SigmaCreateReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaCreateReqDefaultTypeInternal _SigmaCreateReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaFdRep::SigmaFdRep(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.err_)*/ nullptr,
      /*decltype(_impl_.fd_)*/ 0u,
    } {}
struct SigmaFdRepDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaFdRepDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaFdRepDefaultTypeInternal() {}
  union {
    SigmaFdRep _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaFdRepDefaultTypeInternal _SigmaFdRep_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaRenameReq::SigmaRenameReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.src_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.dst_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SigmaRenameReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaRenameReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaRenameReqDefaultTypeInternal() {}
  union {
    SigmaRenameReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaRenameReqDefaultTypeInternal _SigmaRenameReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaDataRep::SigmaDataRep(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.blob_)*/ nullptr,
      /*decltype(_impl_.err_)*/ nullptr,
    } {}
struct SigmaDataRepDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaDataRepDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaDataRepDefaultTypeInternal() {}
  union {
    SigmaDataRep _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaDataRepDefaultTypeInternal _SigmaDataRep_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaPutFileReq::SigmaPutFileReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.path_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.blob_)*/ nullptr,
      /*decltype(_impl_.perm_)*/ 0u,
      /*decltype(_impl_.mode_)*/ 0u,
      /*decltype(_impl_.offset_)*/ ::uint64_t{0u},
      /*decltype(_impl_.leaseid_)*/ ::uint64_t{0u},
    } {}
struct SigmaPutFileReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaPutFileReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaPutFileReqDefaultTypeInternal() {}
  union {
    SigmaPutFileReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaPutFileReqDefaultTypeInternal _SigmaPutFileReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaSizeRep::SigmaSizeRep(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.err_)*/ nullptr,
      /*decltype(_impl_.size_)*/ ::uint64_t{0u},
    } {}
struct SigmaSizeRepDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaSizeRepDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaSizeRepDefaultTypeInternal() {}
  union {
    SigmaSizeRep _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaSizeRepDefaultTypeInternal _SigmaSizeRep_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaReadReq::SigmaReadReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.size_)*/ ::uint64_t{0u},
      /*decltype(_impl_.off_)*/ ::uint64_t{0u},
      /*decltype(_impl_.fd_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SigmaReadReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaReadReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaReadReqDefaultTypeInternal() {}
  union {
    SigmaReadReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaReadReqDefaultTypeInternal _SigmaReadReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaWriteReq::SigmaWriteReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.fence_)*/ nullptr,
      /*decltype(_impl_.blob_)*/ nullptr,
      /*decltype(_impl_.fd_)*/ 0u,
      /*decltype(_impl_.noutvec_)*/ 0u,
    } {}
struct SigmaWriteReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaWriteReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaWriteReqDefaultTypeInternal() {}
  union {
    SigmaWriteReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaWriteReqDefaultTypeInternal _SigmaWriteReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaSeekReq::SigmaSeekReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.offset_)*/ ::uint64_t{0u},
      /*decltype(_impl_.fd_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SigmaSeekReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaSeekReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaSeekReqDefaultTypeInternal() {}
  union {
    SigmaSeekReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaSeekReqDefaultTypeInternal _SigmaSeekReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaClntIdRep::SigmaClntIdRep(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.err_)*/ nullptr,
      /*decltype(_impl_.clntid_)*/ ::uint64_t{0u},
    } {}
struct SigmaClntIdRepDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaClntIdRepDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaClntIdRepDefaultTypeInternal() {}
  union {
    SigmaClntIdRep _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaClntIdRepDefaultTypeInternal _SigmaClntIdRep_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaFenceReq::SigmaFenceReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.path_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.fence_)*/ nullptr,
    } {}
struct SigmaFenceReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaFenceReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaFenceReqDefaultTypeInternal() {}
  union {
    SigmaFenceReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaFenceReqDefaultTypeInternal _SigmaFenceReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaMountTreeReq::SigmaMountTreeReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.tree_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.mountname_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.endpoint_)*/ nullptr,
    } {}
struct SigmaMountTreeReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaMountTreeReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaMountTreeReqDefaultTypeInternal() {}
  union {
    SigmaMountTreeReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaMountTreeReqDefaultTypeInternal _SigmaMountTreeReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaLastMountRep::SigmaLastMountRep(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.path1_)*/ {},
      /*decltype(_impl_.path2_)*/ {},
      /*decltype(_impl_.err_)*/ nullptr,
    } {}
struct SigmaLastMountRepDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaLastMountRepDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaLastMountRepDefaultTypeInternal() {}
  union {
    SigmaLastMountRep _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaLastMountRepDefaultTypeInternal _SigmaLastMountRep_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaMountReq::SigmaMountReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.port_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.endpoint_)*/ nullptr,
    } {}
struct SigmaMountReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaMountReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaMountReqDefaultTypeInternal() {}
  union {
    SigmaMountReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaMountReqDefaultTypeInternal _SigmaMountReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaMountRep::SigmaMountRep(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.endpoint_)*/ nullptr,
      /*decltype(_impl_.err_)*/ nullptr,
      /*decltype(_impl_.local_)*/ false,
    } {}
struct SigmaMountRepDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaMountRepDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaMountRepDefaultTypeInternal() {}
  union {
    SigmaMountRep _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaMountRepDefaultTypeInternal _SigmaMountRep_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SigmaMountsRep::SigmaMountsRep(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.endpoints_)*/ {},
      /*decltype(_impl_.err_)*/ nullptr,
    } {}
struct SigmaMountsRepDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigmaMountsRepDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigmaMountsRepDefaultTypeInternal() {}
  union {
    SigmaMountsRep _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigmaMountsRepDefaultTypeInternal _SigmaMountsRep_default_instance_;
static ::_pb::Metadata file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[23];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proxy_2fsigmap_2fproto_2fspproxy_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_proxy_2fsigmap_2fproto_2fspproxy_2eproto = nullptr;
const ::uint32_t TableStruct_proxy_2fsigmap_2fproto_2fspproxy_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::SigmaInitReq, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SigmaInitReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaInitReq, _impl_.procenvproto_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SigmaNullReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SigmaRealmReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaRealmReq, _impl_.realmstr_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SigmaCloseReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaCloseReq, _impl_.fd_),
    PROTOBUF_FIELD_OFFSET(::SigmaErrRep, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SigmaErrRep, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaErrRep, _impl_.err_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SigmaPathReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaPathReq, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::SigmaStatRep, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SigmaStatRep, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaStatRep, _impl_.stat_),
    PROTOBUF_FIELD_OFFSET(::SigmaStatRep, _impl_.err_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SigmaCreateReq, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SigmaCreateReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaCreateReq, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::SigmaCreateReq, _impl_.perm_),
    PROTOBUF_FIELD_OFFSET(::SigmaCreateReq, _impl_.mode_),
    PROTOBUF_FIELD_OFFSET(::SigmaCreateReq, _impl_.leaseid_),
    PROTOBUF_FIELD_OFFSET(::SigmaCreateReq, _impl_.fence_),
    PROTOBUF_FIELD_OFFSET(::SigmaCreateReq, _impl_.wait_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::SigmaFdRep, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SigmaFdRep, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaFdRep, _impl_.fd_),
    PROTOBUF_FIELD_OFFSET(::SigmaFdRep, _impl_.err_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SigmaRenameReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaRenameReq, _impl_.src_),
    PROTOBUF_FIELD_OFFSET(::SigmaRenameReq, _impl_.dst_),
    PROTOBUF_FIELD_OFFSET(::SigmaDataRep, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SigmaDataRep, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaDataRep, _impl_.blob_),
    PROTOBUF_FIELD_OFFSET(::SigmaDataRep, _impl_.err_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SigmaPutFileReq, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SigmaPutFileReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaPutFileReq, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::SigmaPutFileReq, _impl_.perm_),
    PROTOBUF_FIELD_OFFSET(::SigmaPutFileReq, _impl_.mode_),
    PROTOBUF_FIELD_OFFSET(::SigmaPutFileReq, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SigmaPutFileReq, _impl_.leaseid_),
    PROTOBUF_FIELD_OFFSET(::SigmaPutFileReq, _impl_.blob_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::SigmaSizeRep, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SigmaSizeRep, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaSizeRep, _impl_.size_),
    PROTOBUF_FIELD_OFFSET(::SigmaSizeRep, _impl_.err_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SigmaReadReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaReadReq, _impl_.fd_),
    PROTOBUF_FIELD_OFFSET(::SigmaReadReq, _impl_.size_),
    PROTOBUF_FIELD_OFFSET(::SigmaReadReq, _impl_.off_),
    PROTOBUF_FIELD_OFFSET(::SigmaWriteReq, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SigmaWriteReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaWriteReq, _impl_.fd_),
    PROTOBUF_FIELD_OFFSET(::SigmaWriteReq, _impl_.fence_),
    PROTOBUF_FIELD_OFFSET(::SigmaWriteReq, _impl_.blob_),
    PROTOBUF_FIELD_OFFSET(::SigmaWriteReq, _impl_.noutvec_),
    ~0u,
    0,
    1,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SigmaSeekReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaSeekReq, _impl_.fd_),
    PROTOBUF_FIELD_OFFSET(::SigmaSeekReq, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SigmaClntIdRep, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SigmaClntIdRep, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaClntIdRep, _impl_.clntid_),
    PROTOBUF_FIELD_OFFSET(::SigmaClntIdRep, _impl_.err_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::SigmaFenceReq, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SigmaFenceReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaFenceReq, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::SigmaFenceReq, _impl_.fence_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::SigmaMountTreeReq, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SigmaMountTreeReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaMountTreeReq, _impl_.endpoint_),
    PROTOBUF_FIELD_OFFSET(::SigmaMountTreeReq, _impl_.tree_),
    PROTOBUF_FIELD_OFFSET(::SigmaMountTreeReq, _impl_.mountname_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::SigmaLastMountRep, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SigmaLastMountRep, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaLastMountRep, _impl_.path1_),
    PROTOBUF_FIELD_OFFSET(::SigmaLastMountRep, _impl_.path2_),
    PROTOBUF_FIELD_OFFSET(::SigmaLastMountRep, _impl_.err_),
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::SigmaMountReq, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SigmaMountReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaMountReq, _impl_.endpoint_),
    PROTOBUF_FIELD_OFFSET(::SigmaMountReq, _impl_.port_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::SigmaMountRep, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SigmaMountRep, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaMountRep, _impl_.endpoint_),
    PROTOBUF_FIELD_OFFSET(::SigmaMountRep, _impl_.local_),
    PROTOBUF_FIELD_OFFSET(::SigmaMountRep, _impl_.err_),
    0,
    ~0u,
    1,
    PROTOBUF_FIELD_OFFSET(::SigmaMountsRep, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SigmaMountsRep, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SigmaMountsRep, _impl_.endpoints_),
    PROTOBUF_FIELD_OFFSET(::SigmaMountsRep, _impl_.err_),
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::SigmaInitReq)},
        {10, -1, -1, sizeof(::SigmaNullReq)},
        {18, -1, -1, sizeof(::SigmaRealmReq)},
        {27, -1, -1, sizeof(::SigmaCloseReq)},
        {36, 45, -1, sizeof(::SigmaErrRep)},
        {46, -1, -1, sizeof(::SigmaPathReq)},
        {55, 65, -1, sizeof(::SigmaStatRep)},
        {67, 81, -1, sizeof(::SigmaCreateReq)},
        {87, 97, -1, sizeof(::SigmaFdRep)},
        {99, -1, -1, sizeof(::SigmaRenameReq)},
        {109, 119, -1, sizeof(::SigmaDataRep)},
        {121, 135, -1, sizeof(::SigmaPutFileReq)},
        {141, 151, -1, sizeof(::SigmaSizeRep)},
        {153, -1, -1, sizeof(::SigmaReadReq)},
        {164, 176, -1, sizeof(::SigmaWriteReq)},
        {180, -1, -1, sizeof(::SigmaSeekReq)},
        {190, 200, -1, sizeof(::SigmaClntIdRep)},
        {202, 212, -1, sizeof(::SigmaFenceReq)},
        {214, 225, -1, sizeof(::SigmaMountTreeReq)},
        {228, 239, -1, sizeof(::SigmaLastMountRep)},
        {242, 252, -1, sizeof(::SigmaMountReq)},
        {254, 265, -1, sizeof(::SigmaMountRep)},
        {268, 278, -1, sizeof(::SigmaMountsRep)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_SigmaInitReq_default_instance_._instance,
    &::_SigmaNullReq_default_instance_._instance,
    &::_SigmaRealmReq_default_instance_._instance,
    &::_SigmaCloseReq_default_instance_._instance,
    &::_SigmaErrRep_default_instance_._instance,
    &::_SigmaPathReq_default_instance_._instance,
    &::_SigmaStatRep_default_instance_._instance,
    &::_SigmaCreateReq_default_instance_._instance,
    &::_SigmaFdRep_default_instance_._instance,
    &::_SigmaRenameReq_default_instance_._instance,
    &::_SigmaDataRep_default_instance_._instance,
    &::_SigmaPutFileReq_default_instance_._instance,
    &::_SigmaSizeRep_default_instance_._instance,
    &::_SigmaReadReq_default_instance_._instance,
    &::_SigmaWriteReq_default_instance_._instance,
    &::_SigmaSeekReq_default_instance_._instance,
    &::_SigmaClntIdRep_default_instance_._instance,
    &::_SigmaFenceReq_default_instance_._instance,
    &::_SigmaMountTreeReq_default_instance_._instance,
    &::_SigmaLastMountRep_default_instance_._instance,
    &::_SigmaMountReq_default_instance_._instance,
    &::_SigmaMountRep_default_instance_._instance,
    &::_SigmaMountsRep_default_instance_._instance,
};
const char descriptor_table_protodef_proxy_2fsigmap_2fproto_2fspproxy_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n proxy/sigmap/proto/spproxy.proto\032\023sigm"
    "ap/sigmap.proto\032\017proc/proc.proto\032\023rpc/pr"
    "oto/rpc.proto\"3\n\014SigmaInitReq\022#\n\014procEnv"
    "Proto\030\001 \001(\0132\r.ProcEnvProto\"\016\n\014SigmaNullR"
    "eq\"!\n\rSigmaRealmReq\022\020\n\010realmStr\030\001 \001(\t\"\033\n"
    "\rSigmaCloseReq\022\n\n\002fd\030\001 \001(\r\"#\n\013SigmaErrRe"
    "p\022\024\n\003err\030\001 \001(\0132\007.Rerror\"\034\n\014SigmaPathReq\022"
    "\014\n\004path\030\001 \001(\t\"\?\n\014SigmaStatRep\022\031\n\004stat\030\001 "
    "\001(\0132\013.TstatProto\022\024\n\003err\030\002 \001(\0132\007.Rerror\"v"
    "\n\016SigmaCreateReq\022\014\n\004path\030\001 \001(\t\022\014\n\004perm\030\002"
    " \001(\r\022\014\n\004mode\030\003 \001(\r\022\017\n\007leaseId\030\004 \001(\004\022\033\n\005f"
    "ence\030\005 \001(\0132\014.TfenceProto\022\014\n\004wait\030\006 \001(\010\"."
    "\n\nSigmaFdRep\022\n\n\002fd\030\001 \001(\r\022\024\n\003err\030\002 \001(\0132\007."
    "Rerror\"*\n\016SigmaRenameReq\022\013\n\003src\030\001 \001(\t\022\013\n"
    "\003dst\030\002 \001(\t\"9\n\014SigmaDataRep\022\023\n\004blob\030\001 \001(\013"
    "2\005.Blob\022\024\n\003err\030\002 \001(\0132\007.Rerror\"q\n\017SigmaPu"
    "tFileReq\022\014\n\004path\030\001 \001(\t\022\014\n\004perm\030\002 \001(\r\022\014\n\004"
    "mode\030\003 \001(\r\022\016\n\006offset\030\004 \001(\004\022\017\n\007leaseId\030\005 "
    "\001(\004\022\023\n\004blob\030\006 \001(\0132\005.Blob\"2\n\014SigmaSizeRep"
    "\022\014\n\004size\030\001 \001(\004\022\024\n\003err\030\002 \001(\0132\007.Rerror\"5\n\014"
    "SigmaReadReq\022\n\n\002fd\030\001 \001(\r\022\014\n\004size\030\002 \001(\004\022\013"
    "\n\003off\030\003 \001(\004\"^\n\rSigmaWriteReq\022\n\n\002fd\030\001 \001(\r"
    "\022\033\n\005fence\030\002 \001(\0132\014.TfenceProto\022\023\n\004blob\030\003 "
    "\001(\0132\005.Blob\022\017\n\007nOutVec\030\004 \001(\r\"*\n\014SigmaSeek"
    "Req\022\n\n\002fd\030\001 \001(\r\022\016\n\006offset\030\002 \001(\004\"6\n\016Sigma"
    "ClntIdRep\022\016\n\006clntId\030\001 \001(\004\022\024\n\003err\030\002 \001(\0132\007"
    ".Rerror\":\n\rSigmaFenceReq\022\014\n\004Path\030\001 \001(\t\022\033"
    "\n\005Fence\030\002 \001(\0132\014.TfenceProto\"W\n\021SigmaMoun"
    "tTreeReq\022!\n\010Endpoint\030\001 \001(\0132\017.TendpointPr"
    "oto\022\014\n\004tree\030\002 \001(\t\022\021\n\tmountName\030\003 \001(\t\"G\n\021"
    "SigmaLastMountRep\022\r\n\005path1\030\001 \003(\t\022\r\n\005path"
    "2\030\002 \003(\t\022\024\n\003err\030\003 \001(\0132\007.Rerror\"@\n\rSigmaMo"
    "untReq\022!\n\010endpoint\030\001 \001(\0132\017.TendpointProt"
    "o\022\014\n\004port\030\002 \001(\t\"W\n\rSigmaMountRep\022!\n\010endp"
    "oint\030\001 \001(\0132\017.TendpointProto\022\r\n\005local\030\002 \001"
    "(\010\022\024\n\003err\030\003 \001(\0132\007.Rerror\"9\n\016SigmaMountsR"
    "ep\022\021\n\tendpoints\030\001 \003(\t\022\024\n\003err\030\002 \001(\0132\007.Rer"
    "rorB\034Z\032sigmaos/proxy/sigmap/protob\006proto"
    "3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_deps[3] =
    {
        &::descriptor_table_proc_2fproc_2eproto,
        &::descriptor_table_rpc_2fproto_2frpc_2eproto,
        &::descriptor_table_sigmap_2fsigmap_2eproto,
};
static ::absl::once_flag descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto = {
    false,
    false,
    1521,
    descriptor_table_protodef_proxy_2fsigmap_2fproto_2fspproxy_2eproto,
    "proxy/sigmap/proto/spproxy.proto",
    &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
    descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_deps,
    3,
    23,
    schemas,
    file_default_instances,
    TableStruct_proxy_2fsigmap_2fproto_2fspproxy_2eproto::offsets,
    file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto,
    file_level_enum_descriptors_proxy_2fsigmap_2fproto_2fspproxy_2eproto,
    file_level_service_descriptors_proxy_2fsigmap_2fproto_2fspproxy_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter() {
  return &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_proxy_2fsigmap_2fproto_2fspproxy_2eproto(&descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto);
// ===================================================================

class SigmaInitReq::_Internal {
 public:
  using HasBits = decltype(std::declval<SigmaInitReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SigmaInitReq, _impl_._has_bits_);
  static const ::ProcEnvProto& procenvproto(const SigmaInitReq* msg);
  static void set_has_procenvproto(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ProcEnvProto& SigmaInitReq::_Internal::procenvproto(const SigmaInitReq* msg) {
  return *msg->_impl_.procenvproto_;
}
void SigmaInitReq::clear_procenvproto() {
  if (_impl_.procenvproto_ != nullptr) _impl_.procenvproto_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SigmaInitReq::SigmaInitReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaInitReq)
}
SigmaInitReq::SigmaInitReq(const SigmaInitReq& from) : ::google::protobuf::Message() {
  SigmaInitReq* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.procenvproto_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.procenvproto_ = new ::ProcEnvProto(*from._impl_.procenvproto_);
  }

  // @@protoc_insertion_point(copy_constructor:SigmaInitReq)
}
inline void SigmaInitReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.procenvproto_){nullptr},
  };
}
SigmaInitReq::~SigmaInitReq() {
  // @@protoc_insertion_point(destructor:SigmaInitReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaInitReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.procenvproto_;
}
void SigmaInitReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaInitReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaInitReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.procenvproto_ != nullptr);
    _impl_.procenvproto_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaInitReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SigmaInitReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SigmaInitReq, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SigmaInitReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .ProcEnvProto procEnvProto = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SigmaInitReq, _impl_.procenvproto_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ProcEnvProto procEnvProto = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaInitReq, _impl_.procenvproto_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ProcEnvProto>()},
  }}, {{
  }},
};

::uint8_t* SigmaInitReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaInitReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .ProcEnvProto procEnvProto = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::procenvproto(this),
        _Internal::procenvproto(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaInitReq)
  return target;
}

::size_t SigmaInitReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaInitReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ProcEnvProto procEnvProto = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.procenvproto_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaInitReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaInitReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaInitReq::GetClassData() const { return &_class_data_; }


void SigmaInitReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaInitReq*>(&to_msg);
  auto& from = static_cast<const SigmaInitReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaInitReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_procenvproto()->::ProcEnvProto::MergeFrom(
        from._internal_procenvproto());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaInitReq::CopyFrom(const SigmaInitReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaInitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaInitReq::IsInitialized() const {
  return true;
}

void SigmaInitReq::InternalSwap(SigmaInitReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.procenvproto_, other->_impl_.procenvproto_);
}

::google::protobuf::Metadata SigmaInitReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[0]);
}
// ===================================================================

class SigmaNullReq::_Internal {
 public:
};

SigmaNullReq::SigmaNullReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:SigmaNullReq)
}
SigmaNullReq::SigmaNullReq(const SigmaNullReq& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  SigmaNullReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:SigmaNullReq)
}




const ::google::protobuf::Message::ClassData SigmaNullReq::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*SigmaNullReq::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata SigmaNullReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[1]);
}
// ===================================================================

class SigmaRealmReq::_Internal {
 public:
};

SigmaRealmReq::SigmaRealmReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaRealmReq)
}
SigmaRealmReq::SigmaRealmReq(const SigmaRealmReq& from) : ::google::protobuf::Message() {
  SigmaRealmReq* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.realmstr_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.realmstr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.realmstr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_realmstr().empty()) {
    _this->_impl_.realmstr_.Set(from._internal_realmstr(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:SigmaRealmReq)
}
inline void SigmaRealmReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.realmstr_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.realmstr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.realmstr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SigmaRealmReq::~SigmaRealmReq() {
  // @@protoc_insertion_point(destructor:SigmaRealmReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaRealmReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.realmstr_.Destroy();
}
void SigmaRealmReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaRealmReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaRealmReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.realmstr_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaRealmReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 30, 2> SigmaRealmReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SigmaRealmReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string realmStr = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaRealmReq, _impl_.realmstr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string realmStr = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaRealmReq, _impl_.realmstr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\15\10\0\0\0\0\0\0"
    "SigmaRealmReq"
    "realmStr"
  }},
};

::uint8_t* SigmaRealmReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaRealmReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string realmStr = 1;
  if (!this->_internal_realmstr().empty()) {
    const std::string& _s = this->_internal_realmstr();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SigmaRealmReq.realmStr");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaRealmReq)
  return target;
}

::size_t SigmaRealmReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaRealmReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string realmStr = 1;
  if (!this->_internal_realmstr().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_realmstr());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaRealmReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaRealmReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaRealmReq::GetClassData() const { return &_class_data_; }


void SigmaRealmReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaRealmReq*>(&to_msg);
  auto& from = static_cast<const SigmaRealmReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaRealmReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_realmstr().empty()) {
    _this->_internal_set_realmstr(from._internal_realmstr());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaRealmReq::CopyFrom(const SigmaRealmReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaRealmReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaRealmReq::IsInitialized() const {
  return true;
}

void SigmaRealmReq::InternalSwap(SigmaRealmReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.realmstr_, lhs_arena,
                                       &other->_impl_.realmstr_, rhs_arena);
}

::google::protobuf::Metadata SigmaRealmReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[2]);
}
// ===================================================================

class SigmaCloseReq::_Internal {
 public:
};

SigmaCloseReq::SigmaCloseReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaCloseReq)
}
SigmaCloseReq::SigmaCloseReq(const SigmaCloseReq& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SigmaCloseReq)
}
inline void SigmaCloseReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.fd_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
SigmaCloseReq::~SigmaCloseReq() {
  // @@protoc_insertion_point(destructor:SigmaCloseReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaCloseReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void SigmaCloseReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaCloseReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaCloseReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fd_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaCloseReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SigmaCloseReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SigmaCloseReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 fd = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SigmaCloseReq, _impl_.fd_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaCloseReq, _impl_.fd_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 fd = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaCloseReq, _impl_.fd_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SigmaCloseReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaCloseReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 fd = 1;
  if (this->_internal_fd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_fd(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaCloseReq)
  return target;
}

::size_t SigmaCloseReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaCloseReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 fd = 1;
  if (this->_internal_fd() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_fd());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaCloseReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaCloseReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaCloseReq::GetClassData() const { return &_class_data_; }


void SigmaCloseReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaCloseReq*>(&to_msg);
  auto& from = static_cast<const SigmaCloseReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaCloseReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_fd() != 0) {
    _this->_internal_set_fd(from._internal_fd());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaCloseReq::CopyFrom(const SigmaCloseReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaCloseReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaCloseReq::IsInitialized() const {
  return true;
}

void SigmaCloseReq::InternalSwap(SigmaCloseReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.fd_, other->_impl_.fd_);
}

::google::protobuf::Metadata SigmaCloseReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[3]);
}
// ===================================================================

class SigmaErrRep::_Internal {
 public:
  using HasBits = decltype(std::declval<SigmaErrRep>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SigmaErrRep, _impl_._has_bits_);
  static const ::Rerror& err(const SigmaErrRep* msg);
  static void set_has_err(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Rerror& SigmaErrRep::_Internal::err(const SigmaErrRep* msg) {
  return *msg->_impl_.err_;
}
void SigmaErrRep::clear_err() {
  if (_impl_.err_ != nullptr) _impl_.err_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SigmaErrRep::SigmaErrRep(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaErrRep)
}
SigmaErrRep::SigmaErrRep(const SigmaErrRep& from) : ::google::protobuf::Message() {
  SigmaErrRep* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.err_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.err_ = new ::Rerror(*from._impl_.err_);
  }

  // @@protoc_insertion_point(copy_constructor:SigmaErrRep)
}
inline void SigmaErrRep::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.err_){nullptr},
  };
}
SigmaErrRep::~SigmaErrRep() {
  // @@protoc_insertion_point(destructor:SigmaErrRep)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaErrRep::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.err_;
}
void SigmaErrRep::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaErrRep::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaErrRep)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.err_ != nullptr);
    _impl_.err_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaErrRep::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SigmaErrRep::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SigmaErrRep, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SigmaErrRep_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .Rerror err = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SigmaErrRep, _impl_.err_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Rerror err = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaErrRep, _impl_.err_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Rerror>()},
  }}, {{
  }},
};

::uint8_t* SigmaErrRep::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaErrRep)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .Rerror err = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::err(this),
        _Internal::err(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaErrRep)
  return target;
}

::size_t SigmaErrRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaErrRep)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Rerror err = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.err_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaErrRep::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaErrRep::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaErrRep::GetClassData() const { return &_class_data_; }


void SigmaErrRep::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaErrRep*>(&to_msg);
  auto& from = static_cast<const SigmaErrRep&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaErrRep)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_err()->::Rerror::MergeFrom(
        from._internal_err());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaErrRep::CopyFrom(const SigmaErrRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaErrRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaErrRep::IsInitialized() const {
  return true;
}

void SigmaErrRep::InternalSwap(SigmaErrRep* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.err_, other->_impl_.err_);
}

::google::protobuf::Metadata SigmaErrRep::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[4]);
}
// ===================================================================

class SigmaPathReq::_Internal {
 public:
};

SigmaPathReq::SigmaPathReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaPathReq)
}
SigmaPathReq::SigmaPathReq(const SigmaPathReq& from) : ::google::protobuf::Message() {
  SigmaPathReq* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:SigmaPathReq)
}
inline void SigmaPathReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SigmaPathReq::~SigmaPathReq() {
  // @@protoc_insertion_point(destructor:SigmaPathReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaPathReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.path_.Destroy();
}
void SigmaPathReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaPathReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaPathReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaPathReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 25, 2> SigmaPathReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SigmaPathReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaPathReq, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string path = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaPathReq, _impl_.path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\14\4\0\0\0\0\0\0"
    "SigmaPathReq"
    "path"
  }},
};

::uint8_t* SigmaPathReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaPathReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SigmaPathReq.path");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaPathReq)
  return target;
}

::size_t SigmaPathReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaPathReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaPathReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaPathReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaPathReq::GetClassData() const { return &_class_data_; }


void SigmaPathReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaPathReq*>(&to_msg);
  auto& from = static_cast<const SigmaPathReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaPathReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaPathReq::CopyFrom(const SigmaPathReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaPathReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaPathReq::IsInitialized() const {
  return true;
}

void SigmaPathReq::InternalSwap(SigmaPathReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, lhs_arena,
                                       &other->_impl_.path_, rhs_arena);
}

::google::protobuf::Metadata SigmaPathReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[5]);
}
// ===================================================================

class SigmaStatRep::_Internal {
 public:
  using HasBits = decltype(std::declval<SigmaStatRep>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SigmaStatRep, _impl_._has_bits_);
  static const ::TstatProto& stat(const SigmaStatRep* msg);
  static void set_has_stat(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::Rerror& err(const SigmaStatRep* msg);
  static void set_has_err(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::TstatProto& SigmaStatRep::_Internal::stat(const SigmaStatRep* msg) {
  return *msg->_impl_.stat_;
}
const ::Rerror& SigmaStatRep::_Internal::err(const SigmaStatRep* msg) {
  return *msg->_impl_.err_;
}
void SigmaStatRep::clear_stat() {
  if (_impl_.stat_ != nullptr) _impl_.stat_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void SigmaStatRep::clear_err() {
  if (_impl_.err_ != nullptr) _impl_.err_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SigmaStatRep::SigmaStatRep(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaStatRep)
}
SigmaStatRep::SigmaStatRep(const SigmaStatRep& from) : ::google::protobuf::Message() {
  SigmaStatRep* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.stat_){nullptr},
      decltype(_impl_.err_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.stat_ = new ::TstatProto(*from._impl_.stat_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.err_ = new ::Rerror(*from._impl_.err_);
  }

  // @@protoc_insertion_point(copy_constructor:SigmaStatRep)
}
inline void SigmaStatRep::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.stat_){nullptr},
      decltype(_impl_.err_){nullptr},
  };
}
SigmaStatRep::~SigmaStatRep() {
  // @@protoc_insertion_point(destructor:SigmaStatRep)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaStatRep::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.stat_;
  if (this != internal_default_instance()) delete _impl_.err_;
}
void SigmaStatRep::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaStatRep::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaStatRep)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.stat_ != nullptr);
      _impl_.stat_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.err_ != nullptr);
      _impl_.err_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaStatRep::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> SigmaStatRep::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SigmaStatRep, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SigmaStatRep_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .Rerror err = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SigmaStatRep, _impl_.err_)}},
    // .TstatProto stat = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SigmaStatRep, _impl_.stat_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .TstatProto stat = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaStatRep, _impl_.stat_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .Rerror err = 2;
    {PROTOBUF_FIELD_OFFSET(SigmaStatRep, _impl_.err_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::TstatProto>()},
    {::_pbi::TcParser::GetTable<::Rerror>()},
  }}, {{
  }},
};

::uint8_t* SigmaStatRep::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaStatRep)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .TstatProto stat = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::stat(this),
        _Internal::stat(this).GetCachedSize(), target, stream);
  }

  // .Rerror err = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::err(this),
        _Internal::err(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaStatRep)
  return target;
}

::size_t SigmaStatRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaStatRep)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .TstatProto stat = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.stat_);
    }

    // .Rerror err = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.err_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaStatRep::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaStatRep::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaStatRep::GetClassData() const { return &_class_data_; }


void SigmaStatRep::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaStatRep*>(&to_msg);
  auto& from = static_cast<const SigmaStatRep&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaStatRep)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_stat()->::TstatProto::MergeFrom(
          from._internal_stat());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_err()->::Rerror::MergeFrom(
          from._internal_err());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaStatRep::CopyFrom(const SigmaStatRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaStatRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaStatRep::IsInitialized() const {
  return true;
}

void SigmaStatRep::InternalSwap(SigmaStatRep* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SigmaStatRep, _impl_.err_)
      + sizeof(SigmaStatRep::_impl_.err_)
      - PROTOBUF_FIELD_OFFSET(SigmaStatRep, _impl_.stat_)>(
          reinterpret_cast<char*>(&_impl_.stat_),
          reinterpret_cast<char*>(&other->_impl_.stat_));
}

::google::protobuf::Metadata SigmaStatRep::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[6]);
}
// ===================================================================

class SigmaCreateReq::_Internal {
 public:
  using HasBits = decltype(std::declval<SigmaCreateReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SigmaCreateReq, _impl_._has_bits_);
  static const ::TfenceProto& fence(const SigmaCreateReq* msg);
  static void set_has_fence(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TfenceProto& SigmaCreateReq::_Internal::fence(const SigmaCreateReq* msg) {
  return *msg->_impl_.fence_;
}
void SigmaCreateReq::clear_fence() {
  if (_impl_.fence_ != nullptr) _impl_.fence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SigmaCreateReq::SigmaCreateReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaCreateReq)
}
SigmaCreateReq::SigmaCreateReq(const SigmaCreateReq& from) : ::google::protobuf::Message() {
  SigmaCreateReq* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.path_){},
      decltype(_impl_.fence_){nullptr},
      decltype(_impl_.perm_){},
      decltype(_impl_.mode_){},
      decltype(_impl_.leaseid_){},
      decltype(_impl_.wait_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.fence_ = new ::TfenceProto(*from._impl_.fence_);
  }
  ::memcpy(&_impl_.perm_, &from._impl_.perm_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.wait_) -
    reinterpret_cast<char*>(&_impl_.perm_)) + sizeof(_impl_.wait_));

  // @@protoc_insertion_point(copy_constructor:SigmaCreateReq)
}
inline void SigmaCreateReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.path_){},
      decltype(_impl_.fence_){nullptr},
      decltype(_impl_.perm_){0u},
      decltype(_impl_.mode_){0u},
      decltype(_impl_.leaseid_){::uint64_t{0u}},
      decltype(_impl_.wait_){false},
  };
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SigmaCreateReq::~SigmaCreateReq() {
  // @@protoc_insertion_point(destructor:SigmaCreateReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaCreateReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.path_.Destroy();
  if (this != internal_default_instance()) delete _impl_.fence_;
}
void SigmaCreateReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaCreateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaCreateReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.fence_ != nullptr);
    _impl_.fence_->Clear();
  }
  ::memset(&_impl_.perm_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.wait_) -
      reinterpret_cast<char*>(&_impl_.perm_)) + sizeof(_impl_.wait_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaCreateReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 27, 2> SigmaCreateReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SigmaCreateReq, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SigmaCreateReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaCreateReq, _impl_.path_)}},
    // uint32 perm = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SigmaCreateReq, _impl_.perm_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaCreateReq, _impl_.perm_)}},
    // uint32 mode = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SigmaCreateReq, _impl_.mode_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaCreateReq, _impl_.mode_)}},
    // uint64 leaseId = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SigmaCreateReq, _impl_.leaseid_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaCreateReq, _impl_.leaseid_)}},
    // .TfenceProto fence = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(SigmaCreateReq, _impl_.fence_)}},
    // bool wait = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SigmaCreateReq, _impl_.wait_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaCreateReq, _impl_.wait_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string path = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaCreateReq, _impl_.path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 perm = 2;
    {PROTOBUF_FIELD_OFFSET(SigmaCreateReq, _impl_.perm_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 mode = 3;
    {PROTOBUF_FIELD_OFFSET(SigmaCreateReq, _impl_.mode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 leaseId = 4;
    {PROTOBUF_FIELD_OFFSET(SigmaCreateReq, _impl_.leaseid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .TfenceProto fence = 5;
    {PROTOBUF_FIELD_OFFSET(SigmaCreateReq, _impl_.fence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool wait = 6;
    {PROTOBUF_FIELD_OFFSET(SigmaCreateReq, _impl_.wait_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::TfenceProto>()},
  }}, {{
    "\16\4\0\0\0\0\0\0"
    "SigmaCreateReq"
    "path"
  }},
};

::uint8_t* SigmaCreateReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaCreateReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SigmaCreateReq.path");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint32 perm = 2;
  if (this->_internal_perm() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_perm(), target);
  }

  // uint32 mode = 3;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_mode(), target);
  }

  // uint64 leaseId = 4;
  if (this->_internal_leaseid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_leaseid(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .TfenceProto fence = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::fence(this),
        _Internal::fence(this).GetCachedSize(), target, stream);
  }

  // bool wait = 6;
  if (this->_internal_wait() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_wait(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaCreateReq)
  return target;
}

::size_t SigmaCreateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaCreateReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_path());
  }

  // .TfenceProto fence = 5;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.fence_);
  }

  // uint32 perm = 2;
  if (this->_internal_perm() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_perm());
  }

  // uint32 mode = 3;
  if (this->_internal_mode() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_mode());
  }

  // uint64 leaseId = 4;
  if (this->_internal_leaseid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_leaseid());
  }

  // bool wait = 6;
  if (this->_internal_wait() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaCreateReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaCreateReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaCreateReq::GetClassData() const { return &_class_data_; }


void SigmaCreateReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaCreateReq*>(&to_msg);
  auto& from = static_cast<const SigmaCreateReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaCreateReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_fence()->::TfenceProto::MergeFrom(
        from._internal_fence());
  }
  if (from._internal_perm() != 0) {
    _this->_internal_set_perm(from._internal_perm());
  }
  if (from._internal_mode() != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  if (from._internal_leaseid() != 0) {
    _this->_internal_set_leaseid(from._internal_leaseid());
  }
  if (from._internal_wait() != 0) {
    _this->_internal_set_wait(from._internal_wait());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaCreateReq::CopyFrom(const SigmaCreateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaCreateReq::IsInitialized() const {
  return true;
}

void SigmaCreateReq::InternalSwap(SigmaCreateReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, lhs_arena,
                                       &other->_impl_.path_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SigmaCreateReq, _impl_.wait_)
      + sizeof(SigmaCreateReq::_impl_.wait_)
      - PROTOBUF_FIELD_OFFSET(SigmaCreateReq, _impl_.fence_)>(
          reinterpret_cast<char*>(&_impl_.fence_),
          reinterpret_cast<char*>(&other->_impl_.fence_));
}

::google::protobuf::Metadata SigmaCreateReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[7]);
}
// ===================================================================

class SigmaFdRep::_Internal {
 public:
  using HasBits = decltype(std::declval<SigmaFdRep>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SigmaFdRep, _impl_._has_bits_);
  static const ::Rerror& err(const SigmaFdRep* msg);
  static void set_has_err(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Rerror& SigmaFdRep::_Internal::err(const SigmaFdRep* msg) {
  return *msg->_impl_.err_;
}
void SigmaFdRep::clear_err() {
  if (_impl_.err_ != nullptr) _impl_.err_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SigmaFdRep::SigmaFdRep(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaFdRep)
}
SigmaFdRep::SigmaFdRep(const SigmaFdRep& from) : ::google::protobuf::Message() {
  SigmaFdRep* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.err_){nullptr},
      decltype(_impl_.fd_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.err_ = new ::Rerror(*from._impl_.err_);
  }
  _this->_impl_.fd_ = from._impl_.fd_;

  // @@protoc_insertion_point(copy_constructor:SigmaFdRep)
}
inline void SigmaFdRep::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.err_){nullptr},
      decltype(_impl_.fd_){0u},
  };
}
SigmaFdRep::~SigmaFdRep() {
  // @@protoc_insertion_point(destructor:SigmaFdRep)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaFdRep::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.err_;
}
void SigmaFdRep::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaFdRep::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaFdRep)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.err_ != nullptr);
    _impl_.err_->Clear();
  }
  _impl_.fd_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaFdRep::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SigmaFdRep::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SigmaFdRep, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SigmaFdRep_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .Rerror err = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SigmaFdRep, _impl_.err_)}},
    // uint32 fd = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SigmaFdRep, _impl_.fd_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaFdRep, _impl_.fd_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 fd = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaFdRep, _impl_.fd_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .Rerror err = 2;
    {PROTOBUF_FIELD_OFFSET(SigmaFdRep, _impl_.err_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Rerror>()},
  }}, {{
  }},
};

::uint8_t* SigmaFdRep::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaFdRep)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 fd = 1;
  if (this->_internal_fd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_fd(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Rerror err = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::err(this),
        _Internal::err(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaFdRep)
  return target;
}

::size_t SigmaFdRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaFdRep)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Rerror err = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.err_);
  }

  // uint32 fd = 1;
  if (this->_internal_fd() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_fd());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaFdRep::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaFdRep::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaFdRep::GetClassData() const { return &_class_data_; }


void SigmaFdRep::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaFdRep*>(&to_msg);
  auto& from = static_cast<const SigmaFdRep&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaFdRep)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_err()->::Rerror::MergeFrom(
        from._internal_err());
  }
  if (from._internal_fd() != 0) {
    _this->_internal_set_fd(from._internal_fd());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaFdRep::CopyFrom(const SigmaFdRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaFdRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaFdRep::IsInitialized() const {
  return true;
}

void SigmaFdRep::InternalSwap(SigmaFdRep* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SigmaFdRep, _impl_.fd_)
      + sizeof(SigmaFdRep::_impl_.fd_)
      - PROTOBUF_FIELD_OFFSET(SigmaFdRep, _impl_.err_)>(
          reinterpret_cast<char*>(&_impl_.err_),
          reinterpret_cast<char*>(&other->_impl_.err_));
}

::google::protobuf::Metadata SigmaFdRep::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[8]);
}
// ===================================================================

class SigmaRenameReq::_Internal {
 public:
};

SigmaRenameReq::SigmaRenameReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaRenameReq)
}
SigmaRenameReq::SigmaRenameReq(const SigmaRenameReq& from) : ::google::protobuf::Message() {
  SigmaRenameReq* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.src_){},
      decltype(_impl_.dst_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.src_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.src_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_src().empty()) {
    _this->_impl_.src_.Set(from._internal_src(), _this->GetArenaForAllocation());
  }
  _impl_.dst_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dst_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dst().empty()) {
    _this->_impl_.dst_.Set(from._internal_dst(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:SigmaRenameReq)
}
inline void SigmaRenameReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.src_){},
      decltype(_impl_.dst_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.src_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.src_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.dst_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dst_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SigmaRenameReq::~SigmaRenameReq() {
  // @@protoc_insertion_point(destructor:SigmaRenameReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaRenameReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.src_.Destroy();
  _impl_.dst_.Destroy();
}
void SigmaRenameReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaRenameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaRenameReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.src_.ClearToEmpty();
  _impl_.dst_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaRenameReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 29, 2> SigmaRenameReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SigmaRenameReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string dst = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaRenameReq, _impl_.dst_)}},
    // string src = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaRenameReq, _impl_.src_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string src = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaRenameReq, _impl_.src_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string dst = 2;
    {PROTOBUF_FIELD_OFFSET(SigmaRenameReq, _impl_.dst_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\16\3\3\0\0\0\0\0"
    "SigmaRenameReq"
    "src"
    "dst"
  }},
};

::uint8_t* SigmaRenameReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaRenameReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string src = 1;
  if (!this->_internal_src().empty()) {
    const std::string& _s = this->_internal_src();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SigmaRenameReq.src");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string dst = 2;
  if (!this->_internal_dst().empty()) {
    const std::string& _s = this->_internal_dst();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SigmaRenameReq.dst");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaRenameReq)
  return target;
}

::size_t SigmaRenameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaRenameReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string src = 1;
  if (!this->_internal_src().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_src());
  }

  // string dst = 2;
  if (!this->_internal_dst().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_dst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaRenameReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaRenameReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaRenameReq::GetClassData() const { return &_class_data_; }


void SigmaRenameReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaRenameReq*>(&to_msg);
  auto& from = static_cast<const SigmaRenameReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaRenameReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_src().empty()) {
    _this->_internal_set_src(from._internal_src());
  }
  if (!from._internal_dst().empty()) {
    _this->_internal_set_dst(from._internal_dst());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaRenameReq::CopyFrom(const SigmaRenameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaRenameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaRenameReq::IsInitialized() const {
  return true;
}

void SigmaRenameReq::InternalSwap(SigmaRenameReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.src_, lhs_arena,
                                       &other->_impl_.src_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dst_, lhs_arena,
                                       &other->_impl_.dst_, rhs_arena);
}

::google::protobuf::Metadata SigmaRenameReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[9]);
}
// ===================================================================

class SigmaDataRep::_Internal {
 public:
  using HasBits = decltype(std::declval<SigmaDataRep>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SigmaDataRep, _impl_._has_bits_);
  static const ::Blob& blob(const SigmaDataRep* msg);
  static void set_has_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::Rerror& err(const SigmaDataRep* msg);
  static void set_has_err(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::Blob& SigmaDataRep::_Internal::blob(const SigmaDataRep* msg) {
  return *msg->_impl_.blob_;
}
const ::Rerror& SigmaDataRep::_Internal::err(const SigmaDataRep* msg) {
  return *msg->_impl_.err_;
}
void SigmaDataRep::clear_blob() {
  if (_impl_.blob_ != nullptr) _impl_.blob_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void SigmaDataRep::clear_err() {
  if (_impl_.err_ != nullptr) _impl_.err_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SigmaDataRep::SigmaDataRep(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaDataRep)
}
SigmaDataRep::SigmaDataRep(const SigmaDataRep& from) : ::google::protobuf::Message() {
  SigmaDataRep* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.blob_){nullptr},
      decltype(_impl_.err_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.blob_ = new ::Blob(*from._impl_.blob_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.err_ = new ::Rerror(*from._impl_.err_);
  }

  // @@protoc_insertion_point(copy_constructor:SigmaDataRep)
}
inline void SigmaDataRep::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.blob_){nullptr},
      decltype(_impl_.err_){nullptr},
  };
}
SigmaDataRep::~SigmaDataRep() {
  // @@protoc_insertion_point(destructor:SigmaDataRep)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaDataRep::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.blob_;
  if (this != internal_default_instance()) delete _impl_.err_;
}
void SigmaDataRep::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaDataRep::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaDataRep)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.blob_ != nullptr);
      _impl_.blob_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.err_ != nullptr);
      _impl_.err_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaDataRep::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> SigmaDataRep::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SigmaDataRep, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SigmaDataRep_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .Rerror err = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SigmaDataRep, _impl_.err_)}},
    // .Blob blob = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SigmaDataRep, _impl_.blob_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Blob blob = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaDataRep, _impl_.blob_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .Rerror err = 2;
    {PROTOBUF_FIELD_OFFSET(SigmaDataRep, _impl_.err_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Blob>()},
    {::_pbi::TcParser::GetTable<::Rerror>()},
  }}, {{
  }},
};

::uint8_t* SigmaDataRep::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaDataRep)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .Blob blob = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::blob(this),
        _Internal::blob(this).GetCachedSize(), target, stream);
  }

  // .Rerror err = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::err(this),
        _Internal::err(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaDataRep)
  return target;
}

::size_t SigmaDataRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaDataRep)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .Blob blob = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.blob_);
    }

    // .Rerror err = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.err_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaDataRep::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaDataRep::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaDataRep::GetClassData() const { return &_class_data_; }


void SigmaDataRep::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaDataRep*>(&to_msg);
  auto& from = static_cast<const SigmaDataRep&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaDataRep)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_blob()->::Blob::MergeFrom(
          from._internal_blob());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_err()->::Rerror::MergeFrom(
          from._internal_err());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaDataRep::CopyFrom(const SigmaDataRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaDataRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaDataRep::IsInitialized() const {
  return true;
}

void SigmaDataRep::InternalSwap(SigmaDataRep* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SigmaDataRep, _impl_.err_)
      + sizeof(SigmaDataRep::_impl_.err_)
      - PROTOBUF_FIELD_OFFSET(SigmaDataRep, _impl_.blob_)>(
          reinterpret_cast<char*>(&_impl_.blob_),
          reinterpret_cast<char*>(&other->_impl_.blob_));
}

::google::protobuf::Metadata SigmaDataRep::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[10]);
}
// ===================================================================

class SigmaPutFileReq::_Internal {
 public:
  using HasBits = decltype(std::declval<SigmaPutFileReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SigmaPutFileReq, _impl_._has_bits_);
  static const ::Blob& blob(const SigmaPutFileReq* msg);
  static void set_has_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Blob& SigmaPutFileReq::_Internal::blob(const SigmaPutFileReq* msg) {
  return *msg->_impl_.blob_;
}
void SigmaPutFileReq::clear_blob() {
  if (_impl_.blob_ != nullptr) _impl_.blob_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SigmaPutFileReq::SigmaPutFileReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaPutFileReq)
}
SigmaPutFileReq::SigmaPutFileReq(const SigmaPutFileReq& from) : ::google::protobuf::Message() {
  SigmaPutFileReq* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.path_){},
      decltype(_impl_.blob_){nullptr},
      decltype(_impl_.perm_){},
      decltype(_impl_.mode_){},
      decltype(_impl_.offset_){},
      decltype(_impl_.leaseid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.blob_ = new ::Blob(*from._impl_.blob_);
  }
  ::memcpy(&_impl_.perm_, &from._impl_.perm_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.leaseid_) -
    reinterpret_cast<char*>(&_impl_.perm_)) + sizeof(_impl_.leaseid_));

  // @@protoc_insertion_point(copy_constructor:SigmaPutFileReq)
}
inline void SigmaPutFileReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.path_){},
      decltype(_impl_.blob_){nullptr},
      decltype(_impl_.perm_){0u},
      decltype(_impl_.mode_){0u},
      decltype(_impl_.offset_){::uint64_t{0u}},
      decltype(_impl_.leaseid_){::uint64_t{0u}},
  };
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SigmaPutFileReq::~SigmaPutFileReq() {
  // @@protoc_insertion_point(destructor:SigmaPutFileReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaPutFileReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.path_.Destroy();
  if (this != internal_default_instance()) delete _impl_.blob_;
}
void SigmaPutFileReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaPutFileReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaPutFileReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.blob_ != nullptr);
    _impl_.blob_->Clear();
  }
  ::memset(&_impl_.perm_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.leaseid_) -
      reinterpret_cast<char*>(&_impl_.perm_)) + sizeof(_impl_.leaseid_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaPutFileReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 28, 2> SigmaPutFileReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SigmaPutFileReq, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SigmaPutFileReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaPutFileReq, _impl_.path_)}},
    // uint32 perm = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SigmaPutFileReq, _impl_.perm_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaPutFileReq, _impl_.perm_)}},
    // uint32 mode = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SigmaPutFileReq, _impl_.mode_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaPutFileReq, _impl_.mode_)}},
    // uint64 offset = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SigmaPutFileReq, _impl_.offset_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaPutFileReq, _impl_.offset_)}},
    // uint64 leaseId = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SigmaPutFileReq, _impl_.leaseid_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaPutFileReq, _impl_.leaseid_)}},
    // .Blob blob = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(SigmaPutFileReq, _impl_.blob_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string path = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaPutFileReq, _impl_.path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 perm = 2;
    {PROTOBUF_FIELD_OFFSET(SigmaPutFileReq, _impl_.perm_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 mode = 3;
    {PROTOBUF_FIELD_OFFSET(SigmaPutFileReq, _impl_.mode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 offset = 4;
    {PROTOBUF_FIELD_OFFSET(SigmaPutFileReq, _impl_.offset_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 leaseId = 5;
    {PROTOBUF_FIELD_OFFSET(SigmaPutFileReq, _impl_.leaseid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .Blob blob = 6;
    {PROTOBUF_FIELD_OFFSET(SigmaPutFileReq, _impl_.blob_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Blob>()},
  }}, {{
    "\17\4\0\0\0\0\0\0"
    "SigmaPutFileReq"
    "path"
  }},
};

::uint8_t* SigmaPutFileReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaPutFileReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SigmaPutFileReq.path");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint32 perm = 2;
  if (this->_internal_perm() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_perm(), target);
  }

  // uint32 mode = 3;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_mode(), target);
  }

  // uint64 offset = 4;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_offset(), target);
  }

  // uint64 leaseId = 5;
  if (this->_internal_leaseid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_leaseid(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Blob blob = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::blob(this),
        _Internal::blob(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaPutFileReq)
  return target;
}

::size_t SigmaPutFileReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaPutFileReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_path());
  }

  // .Blob blob = 6;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.blob_);
  }

  // uint32 perm = 2;
  if (this->_internal_perm() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_perm());
  }

  // uint32 mode = 3;
  if (this->_internal_mode() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_mode());
  }

  // uint64 offset = 4;
  if (this->_internal_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_offset());
  }

  // uint64 leaseId = 5;
  if (this->_internal_leaseid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_leaseid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaPutFileReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaPutFileReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaPutFileReq::GetClassData() const { return &_class_data_; }


void SigmaPutFileReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaPutFileReq*>(&to_msg);
  auto& from = static_cast<const SigmaPutFileReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaPutFileReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_blob()->::Blob::MergeFrom(
        from._internal_blob());
  }
  if (from._internal_perm() != 0) {
    _this->_internal_set_perm(from._internal_perm());
  }
  if (from._internal_mode() != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  if (from._internal_offset() != 0) {
    _this->_internal_set_offset(from._internal_offset());
  }
  if (from._internal_leaseid() != 0) {
    _this->_internal_set_leaseid(from._internal_leaseid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaPutFileReq::CopyFrom(const SigmaPutFileReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaPutFileReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaPutFileReq::IsInitialized() const {
  return true;
}

void SigmaPutFileReq::InternalSwap(SigmaPutFileReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, lhs_arena,
                                       &other->_impl_.path_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SigmaPutFileReq, _impl_.leaseid_)
      + sizeof(SigmaPutFileReq::_impl_.leaseid_)
      - PROTOBUF_FIELD_OFFSET(SigmaPutFileReq, _impl_.blob_)>(
          reinterpret_cast<char*>(&_impl_.blob_),
          reinterpret_cast<char*>(&other->_impl_.blob_));
}

::google::protobuf::Metadata SigmaPutFileReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[11]);
}
// ===================================================================

class SigmaSizeRep::_Internal {
 public:
  using HasBits = decltype(std::declval<SigmaSizeRep>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SigmaSizeRep, _impl_._has_bits_);
  static const ::Rerror& err(const SigmaSizeRep* msg);
  static void set_has_err(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Rerror& SigmaSizeRep::_Internal::err(const SigmaSizeRep* msg) {
  return *msg->_impl_.err_;
}
void SigmaSizeRep::clear_err() {
  if (_impl_.err_ != nullptr) _impl_.err_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SigmaSizeRep::SigmaSizeRep(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaSizeRep)
}
SigmaSizeRep::SigmaSizeRep(const SigmaSizeRep& from) : ::google::protobuf::Message() {
  SigmaSizeRep* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.err_){nullptr},
      decltype(_impl_.size_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.err_ = new ::Rerror(*from._impl_.err_);
  }
  _this->_impl_.size_ = from._impl_.size_;

  // @@protoc_insertion_point(copy_constructor:SigmaSizeRep)
}
inline void SigmaSizeRep::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.err_){nullptr},
      decltype(_impl_.size_){::uint64_t{0u}},
  };
}
SigmaSizeRep::~SigmaSizeRep() {
  // @@protoc_insertion_point(destructor:SigmaSizeRep)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaSizeRep::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.err_;
}
void SigmaSizeRep::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaSizeRep::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaSizeRep)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.err_ != nullptr);
    _impl_.err_->Clear();
  }
  _impl_.size_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaSizeRep::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SigmaSizeRep::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SigmaSizeRep, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SigmaSizeRep_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .Rerror err = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SigmaSizeRep, _impl_.err_)}},
    // uint64 size = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SigmaSizeRep, _impl_.size_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaSizeRep, _impl_.size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 size = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaSizeRep, _impl_.size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .Rerror err = 2;
    {PROTOBUF_FIELD_OFFSET(SigmaSizeRep, _impl_.err_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Rerror>()},
  }}, {{
  }},
};

::uint8_t* SigmaSizeRep::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaSizeRep)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 size = 1;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_size(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Rerror err = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::err(this),
        _Internal::err(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaSizeRep)
  return target;
}

::size_t SigmaSizeRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaSizeRep)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Rerror err = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.err_);
  }

  // uint64 size = 1;
  if (this->_internal_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaSizeRep::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaSizeRep::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaSizeRep::GetClassData() const { return &_class_data_; }


void SigmaSizeRep::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaSizeRep*>(&to_msg);
  auto& from = static_cast<const SigmaSizeRep&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaSizeRep)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_err()->::Rerror::MergeFrom(
        from._internal_err());
  }
  if (from._internal_size() != 0) {
    _this->_internal_set_size(from._internal_size());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaSizeRep::CopyFrom(const SigmaSizeRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaSizeRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaSizeRep::IsInitialized() const {
  return true;
}

void SigmaSizeRep::InternalSwap(SigmaSizeRep* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SigmaSizeRep, _impl_.size_)
      + sizeof(SigmaSizeRep::_impl_.size_)
      - PROTOBUF_FIELD_OFFSET(SigmaSizeRep, _impl_.err_)>(
          reinterpret_cast<char*>(&_impl_.err_),
          reinterpret_cast<char*>(&other->_impl_.err_));
}

::google::protobuf::Metadata SigmaSizeRep::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[12]);
}
// ===================================================================

class SigmaReadReq::_Internal {
 public:
};

SigmaReadReq::SigmaReadReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaReadReq)
}
SigmaReadReq::SigmaReadReq(const SigmaReadReq& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SigmaReadReq)
}
inline void SigmaReadReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.size_){::uint64_t{0u}},
      decltype(_impl_.off_){::uint64_t{0u}},
      decltype(_impl_.fd_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
SigmaReadReq::~SigmaReadReq() {
  // @@protoc_insertion_point(destructor:SigmaReadReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaReadReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void SigmaReadReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaReadReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaReadReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.size_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.fd_) -
      reinterpret_cast<char*>(&_impl_.size_)) + sizeof(_impl_.fd_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaReadReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> SigmaReadReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SigmaReadReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 fd = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SigmaReadReq, _impl_.fd_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaReadReq, _impl_.fd_)}},
    // uint64 size = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SigmaReadReq, _impl_.size_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaReadReq, _impl_.size_)}},
    // uint64 off = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SigmaReadReq, _impl_.off_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaReadReq, _impl_.off_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 fd = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaReadReq, _impl_.fd_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 size = 2;
    {PROTOBUF_FIELD_OFFSET(SigmaReadReq, _impl_.size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 off = 3;
    {PROTOBUF_FIELD_OFFSET(SigmaReadReq, _impl_.off_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SigmaReadReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaReadReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 fd = 1;
  if (this->_internal_fd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_fd(), target);
  }

  // uint64 size = 2;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_size(), target);
  }

  // uint64 off = 3;
  if (this->_internal_off() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_off(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaReadReq)
  return target;
}

::size_t SigmaReadReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaReadReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 size = 2;
  if (this->_internal_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_size());
  }

  // uint64 off = 3;
  if (this->_internal_off() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_off());
  }

  // uint32 fd = 1;
  if (this->_internal_fd() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_fd());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaReadReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaReadReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaReadReq::GetClassData() const { return &_class_data_; }


void SigmaReadReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaReadReq*>(&to_msg);
  auto& from = static_cast<const SigmaReadReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaReadReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_size() != 0) {
    _this->_internal_set_size(from._internal_size());
  }
  if (from._internal_off() != 0) {
    _this->_internal_set_off(from._internal_off());
  }
  if (from._internal_fd() != 0) {
    _this->_internal_set_fd(from._internal_fd());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaReadReq::CopyFrom(const SigmaReadReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaReadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaReadReq::IsInitialized() const {
  return true;
}

void SigmaReadReq::InternalSwap(SigmaReadReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SigmaReadReq, _impl_.fd_)
      + sizeof(SigmaReadReq::_impl_.fd_)
      - PROTOBUF_FIELD_OFFSET(SigmaReadReq, _impl_.size_)>(
          reinterpret_cast<char*>(&_impl_.size_),
          reinterpret_cast<char*>(&other->_impl_.size_));
}

::google::protobuf::Metadata SigmaReadReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[13]);
}
// ===================================================================

class SigmaWriteReq::_Internal {
 public:
  using HasBits = decltype(std::declval<SigmaWriteReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SigmaWriteReq, _impl_._has_bits_);
  static const ::TfenceProto& fence(const SigmaWriteReq* msg);
  static void set_has_fence(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::Blob& blob(const SigmaWriteReq* msg);
  static void set_has_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::TfenceProto& SigmaWriteReq::_Internal::fence(const SigmaWriteReq* msg) {
  return *msg->_impl_.fence_;
}
const ::Blob& SigmaWriteReq::_Internal::blob(const SigmaWriteReq* msg) {
  return *msg->_impl_.blob_;
}
void SigmaWriteReq::clear_fence() {
  if (_impl_.fence_ != nullptr) _impl_.fence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void SigmaWriteReq::clear_blob() {
  if (_impl_.blob_ != nullptr) _impl_.blob_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SigmaWriteReq::SigmaWriteReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaWriteReq)
}
SigmaWriteReq::SigmaWriteReq(const SigmaWriteReq& from) : ::google::protobuf::Message() {
  SigmaWriteReq* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.fence_){nullptr},
      decltype(_impl_.blob_){nullptr},
      decltype(_impl_.fd_){},
      decltype(_impl_.noutvec_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.fence_ = new ::TfenceProto(*from._impl_.fence_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.blob_ = new ::Blob(*from._impl_.blob_);
  }
  ::memcpy(&_impl_.fd_, &from._impl_.fd_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.noutvec_) -
    reinterpret_cast<char*>(&_impl_.fd_)) + sizeof(_impl_.noutvec_));

  // @@protoc_insertion_point(copy_constructor:SigmaWriteReq)
}
inline void SigmaWriteReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.fence_){nullptr},
      decltype(_impl_.blob_){nullptr},
      decltype(_impl_.fd_){0u},
      decltype(_impl_.noutvec_){0u},
  };
}
SigmaWriteReq::~SigmaWriteReq() {
  // @@protoc_insertion_point(destructor:SigmaWriteReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaWriteReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.fence_;
  if (this != internal_default_instance()) delete _impl_.blob_;
}
void SigmaWriteReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaWriteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaWriteReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.fence_ != nullptr);
      _impl_.fence_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.blob_ != nullptr);
      _impl_.blob_->Clear();
    }
  }
  ::memset(&_impl_.fd_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.noutvec_) -
      reinterpret_cast<char*>(&_impl_.fd_)) + sizeof(_impl_.noutvec_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaWriteReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2> SigmaWriteReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SigmaWriteReq, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SigmaWriteReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 nOutVec = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SigmaWriteReq, _impl_.noutvec_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaWriteReq, _impl_.noutvec_)}},
    // uint32 fd = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SigmaWriteReq, _impl_.fd_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaWriteReq, _impl_.fd_)}},
    // .TfenceProto fence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SigmaWriteReq, _impl_.fence_)}},
    // .Blob blob = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(SigmaWriteReq, _impl_.blob_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 fd = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaWriteReq, _impl_.fd_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .TfenceProto fence = 2;
    {PROTOBUF_FIELD_OFFSET(SigmaWriteReq, _impl_.fence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .Blob blob = 3;
    {PROTOBUF_FIELD_OFFSET(SigmaWriteReq, _impl_.blob_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 nOutVec = 4;
    {PROTOBUF_FIELD_OFFSET(SigmaWriteReq, _impl_.noutvec_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::TfenceProto>()},
    {::_pbi::TcParser::GetTable<::Blob>()},
  }}, {{
  }},
};

::uint8_t* SigmaWriteReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaWriteReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 fd = 1;
  if (this->_internal_fd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_fd(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .TfenceProto fence = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::fence(this),
        _Internal::fence(this).GetCachedSize(), target, stream);
  }

  // .Blob blob = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::blob(this),
        _Internal::blob(this).GetCachedSize(), target, stream);
  }

  // uint32 nOutVec = 4;
  if (this->_internal_noutvec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_noutvec(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaWriteReq)
  return target;
}

::size_t SigmaWriteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaWriteReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .TfenceProto fence = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.fence_);
    }

    // .Blob blob = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.blob_);
    }

  }
  // uint32 fd = 1;
  if (this->_internal_fd() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_fd());
  }

  // uint32 nOutVec = 4;
  if (this->_internal_noutvec() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_noutvec());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaWriteReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaWriteReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaWriteReq::GetClassData() const { return &_class_data_; }


void SigmaWriteReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaWriteReq*>(&to_msg);
  auto& from = static_cast<const SigmaWriteReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaWriteReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_fence()->::TfenceProto::MergeFrom(
          from._internal_fence());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_blob()->::Blob::MergeFrom(
          from._internal_blob());
    }
  }
  if (from._internal_fd() != 0) {
    _this->_internal_set_fd(from._internal_fd());
  }
  if (from._internal_noutvec() != 0) {
    _this->_internal_set_noutvec(from._internal_noutvec());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaWriteReq::CopyFrom(const SigmaWriteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaWriteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaWriteReq::IsInitialized() const {
  return true;
}

void SigmaWriteReq::InternalSwap(SigmaWriteReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SigmaWriteReq, _impl_.noutvec_)
      + sizeof(SigmaWriteReq::_impl_.noutvec_)
      - PROTOBUF_FIELD_OFFSET(SigmaWriteReq, _impl_.fence_)>(
          reinterpret_cast<char*>(&_impl_.fence_),
          reinterpret_cast<char*>(&other->_impl_.fence_));
}

::google::protobuf::Metadata SigmaWriteReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[14]);
}
// ===================================================================

class SigmaSeekReq::_Internal {
 public:
};

SigmaSeekReq::SigmaSeekReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaSeekReq)
}
SigmaSeekReq::SigmaSeekReq(const SigmaSeekReq& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SigmaSeekReq)
}
inline void SigmaSeekReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.offset_){::uint64_t{0u}},
      decltype(_impl_.fd_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
SigmaSeekReq::~SigmaSeekReq() {
  // @@protoc_insertion_point(destructor:SigmaSeekReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaSeekReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void SigmaSeekReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaSeekReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaSeekReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.fd_) -
      reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.fd_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaSeekReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SigmaSeekReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SigmaSeekReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 offset = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SigmaSeekReq, _impl_.offset_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaSeekReq, _impl_.offset_)}},
    // uint32 fd = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SigmaSeekReq, _impl_.fd_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaSeekReq, _impl_.fd_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 fd = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaSeekReq, _impl_.fd_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 offset = 2;
    {PROTOBUF_FIELD_OFFSET(SigmaSeekReq, _impl_.offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SigmaSeekReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaSeekReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 fd = 1;
  if (this->_internal_fd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_fd(), target);
  }

  // uint64 offset = 2;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_offset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaSeekReq)
  return target;
}

::size_t SigmaSeekReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaSeekReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 offset = 2;
  if (this->_internal_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_offset());
  }

  // uint32 fd = 1;
  if (this->_internal_fd() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_fd());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaSeekReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaSeekReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaSeekReq::GetClassData() const { return &_class_data_; }


void SigmaSeekReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaSeekReq*>(&to_msg);
  auto& from = static_cast<const SigmaSeekReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaSeekReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_offset() != 0) {
    _this->_internal_set_offset(from._internal_offset());
  }
  if (from._internal_fd() != 0) {
    _this->_internal_set_fd(from._internal_fd());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaSeekReq::CopyFrom(const SigmaSeekReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaSeekReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaSeekReq::IsInitialized() const {
  return true;
}

void SigmaSeekReq::InternalSwap(SigmaSeekReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SigmaSeekReq, _impl_.fd_)
      + sizeof(SigmaSeekReq::_impl_.fd_)
      - PROTOBUF_FIELD_OFFSET(SigmaSeekReq, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata SigmaSeekReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[15]);
}
// ===================================================================

class SigmaClntIdRep::_Internal {
 public:
  using HasBits = decltype(std::declval<SigmaClntIdRep>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SigmaClntIdRep, _impl_._has_bits_);
  static const ::Rerror& err(const SigmaClntIdRep* msg);
  static void set_has_err(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Rerror& SigmaClntIdRep::_Internal::err(const SigmaClntIdRep* msg) {
  return *msg->_impl_.err_;
}
void SigmaClntIdRep::clear_err() {
  if (_impl_.err_ != nullptr) _impl_.err_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SigmaClntIdRep::SigmaClntIdRep(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaClntIdRep)
}
SigmaClntIdRep::SigmaClntIdRep(const SigmaClntIdRep& from) : ::google::protobuf::Message() {
  SigmaClntIdRep* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.err_){nullptr},
      decltype(_impl_.clntid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.err_ = new ::Rerror(*from._impl_.err_);
  }
  _this->_impl_.clntid_ = from._impl_.clntid_;

  // @@protoc_insertion_point(copy_constructor:SigmaClntIdRep)
}
inline void SigmaClntIdRep::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.err_){nullptr},
      decltype(_impl_.clntid_){::uint64_t{0u}},
  };
}
SigmaClntIdRep::~SigmaClntIdRep() {
  // @@protoc_insertion_point(destructor:SigmaClntIdRep)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaClntIdRep::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.err_;
}
void SigmaClntIdRep::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaClntIdRep::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaClntIdRep)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.err_ != nullptr);
    _impl_.err_->Clear();
  }
  _impl_.clntid_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaClntIdRep::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SigmaClntIdRep::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SigmaClntIdRep, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SigmaClntIdRep_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .Rerror err = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SigmaClntIdRep, _impl_.err_)}},
    // uint64 clntId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SigmaClntIdRep, _impl_.clntid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaClntIdRep, _impl_.clntid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 clntId = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaClntIdRep, _impl_.clntid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .Rerror err = 2;
    {PROTOBUF_FIELD_OFFSET(SigmaClntIdRep, _impl_.err_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Rerror>()},
  }}, {{
  }},
};

::uint8_t* SigmaClntIdRep::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaClntIdRep)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 clntId = 1;
  if (this->_internal_clntid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_clntid(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Rerror err = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::err(this),
        _Internal::err(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaClntIdRep)
  return target;
}

::size_t SigmaClntIdRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaClntIdRep)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Rerror err = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.err_);
  }

  // uint64 clntId = 1;
  if (this->_internal_clntid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_clntid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaClntIdRep::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaClntIdRep::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaClntIdRep::GetClassData() const { return &_class_data_; }


void SigmaClntIdRep::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaClntIdRep*>(&to_msg);
  auto& from = static_cast<const SigmaClntIdRep&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaClntIdRep)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_err()->::Rerror::MergeFrom(
        from._internal_err());
  }
  if (from._internal_clntid() != 0) {
    _this->_internal_set_clntid(from._internal_clntid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaClntIdRep::CopyFrom(const SigmaClntIdRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaClntIdRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaClntIdRep::IsInitialized() const {
  return true;
}

void SigmaClntIdRep::InternalSwap(SigmaClntIdRep* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SigmaClntIdRep, _impl_.clntid_)
      + sizeof(SigmaClntIdRep::_impl_.clntid_)
      - PROTOBUF_FIELD_OFFSET(SigmaClntIdRep, _impl_.err_)>(
          reinterpret_cast<char*>(&_impl_.err_),
          reinterpret_cast<char*>(&other->_impl_.err_));
}

::google::protobuf::Metadata SigmaClntIdRep::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[16]);
}
// ===================================================================

class SigmaFenceReq::_Internal {
 public:
  using HasBits = decltype(std::declval<SigmaFenceReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SigmaFenceReq, _impl_._has_bits_);
  static const ::TfenceProto& fence(const SigmaFenceReq* msg);
  static void set_has_fence(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TfenceProto& SigmaFenceReq::_Internal::fence(const SigmaFenceReq* msg) {
  return *msg->_impl_.fence_;
}
void SigmaFenceReq::clear_fence() {
  if (_impl_.fence_ != nullptr) _impl_.fence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SigmaFenceReq::SigmaFenceReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaFenceReq)
}
SigmaFenceReq::SigmaFenceReq(const SigmaFenceReq& from) : ::google::protobuf::Message() {
  SigmaFenceReq* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.path_){},
      decltype(_impl_.fence_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.fence_ = new ::TfenceProto(*from._impl_.fence_);
  }

  // @@protoc_insertion_point(copy_constructor:SigmaFenceReq)
}
inline void SigmaFenceReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.path_){},
      decltype(_impl_.fence_){nullptr},
  };
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SigmaFenceReq::~SigmaFenceReq() {
  // @@protoc_insertion_point(destructor:SigmaFenceReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaFenceReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.path_.Destroy();
  if (this != internal_default_instance()) delete _impl_.fence_;
}
void SigmaFenceReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaFenceReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaFenceReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.fence_ != nullptr);
    _impl_.fence_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaFenceReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 26, 2> SigmaFenceReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SigmaFenceReq, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SigmaFenceReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .TfenceProto Fence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SigmaFenceReq, _impl_.fence_)}},
    // string Path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaFenceReq, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string Path = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaFenceReq, _impl_.path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .TfenceProto Fence = 2;
    {PROTOBUF_FIELD_OFFSET(SigmaFenceReq, _impl_.fence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::TfenceProto>()},
  }}, {{
    "\15\4\0\0\0\0\0\0"
    "SigmaFenceReq"
    "Path"
  }},
};

::uint8_t* SigmaFenceReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaFenceReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string Path = 1;
  if (!this->_internal_path().empty()) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SigmaFenceReq.Path");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .TfenceProto Fence = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::fence(this),
        _Internal::fence(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaFenceReq)
  return target;
}

::size_t SigmaFenceReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaFenceReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Path = 1;
  if (!this->_internal_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_path());
  }

  // .TfenceProto Fence = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.fence_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaFenceReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaFenceReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaFenceReq::GetClassData() const { return &_class_data_; }


void SigmaFenceReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaFenceReq*>(&to_msg);
  auto& from = static_cast<const SigmaFenceReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaFenceReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_fence()->::TfenceProto::MergeFrom(
        from._internal_fence());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaFenceReq::CopyFrom(const SigmaFenceReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaFenceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaFenceReq::IsInitialized() const {
  return true;
}

void SigmaFenceReq::InternalSwap(SigmaFenceReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, lhs_arena,
                                       &other->_impl_.path_, rhs_arena);
  swap(_impl_.fence_, other->_impl_.fence_);
}

::google::protobuf::Metadata SigmaFenceReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[17]);
}
// ===================================================================

class SigmaMountTreeReq::_Internal {
 public:
  using HasBits = decltype(std::declval<SigmaMountTreeReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SigmaMountTreeReq, _impl_._has_bits_);
  static const ::TendpointProto& endpoint(const SigmaMountTreeReq* msg);
  static void set_has_endpoint(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TendpointProto& SigmaMountTreeReq::_Internal::endpoint(const SigmaMountTreeReq* msg) {
  return *msg->_impl_.endpoint_;
}
void SigmaMountTreeReq::clear_endpoint() {
  if (_impl_.endpoint_ != nullptr) _impl_.endpoint_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SigmaMountTreeReq::SigmaMountTreeReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaMountTreeReq)
}
SigmaMountTreeReq::SigmaMountTreeReq(const SigmaMountTreeReq& from) : ::google::protobuf::Message() {
  SigmaMountTreeReq* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.tree_){},
      decltype(_impl_.mountname_){},
      decltype(_impl_.endpoint_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.tree_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.tree_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tree().empty()) {
    _this->_impl_.tree_.Set(from._internal_tree(), _this->GetArenaForAllocation());
  }
  _impl_.mountname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.mountname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mountname().empty()) {
    _this->_impl_.mountname_.Set(from._internal_mountname(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.endpoint_ = new ::TendpointProto(*from._impl_.endpoint_);
  }

  // @@protoc_insertion_point(copy_constructor:SigmaMountTreeReq)
}
inline void SigmaMountTreeReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.tree_){},
      decltype(_impl_.mountname_){},
      decltype(_impl_.endpoint_){nullptr},
  };
  _impl_.tree_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.tree_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.mountname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.mountname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SigmaMountTreeReq::~SigmaMountTreeReq() {
  // @@protoc_insertion_point(destructor:SigmaMountTreeReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaMountTreeReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tree_.Destroy();
  _impl_.mountname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.endpoint_;
}
void SigmaMountTreeReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaMountTreeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaMountTreeReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tree_.ClearToEmpty();
  _impl_.mountname_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.endpoint_ != nullptr);
    _impl_.endpoint_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaMountTreeReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 39, 2> SigmaMountTreeReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SigmaMountTreeReq, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SigmaMountTreeReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .TendpointProto Endpoint = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SigmaMountTreeReq, _impl_.endpoint_)}},
    // string tree = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaMountTreeReq, _impl_.tree_)}},
    // string mountName = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaMountTreeReq, _impl_.mountname_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .TendpointProto Endpoint = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaMountTreeReq, _impl_.endpoint_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string tree = 2;
    {PROTOBUF_FIELD_OFFSET(SigmaMountTreeReq, _impl_.tree_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string mountName = 3;
    {PROTOBUF_FIELD_OFFSET(SigmaMountTreeReq, _impl_.mountname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::TendpointProto>()},
  }}, {{
    "\21\0\4\11\0\0\0\0"
    "SigmaMountTreeReq"
    "tree"
    "mountName"
  }},
};

::uint8_t* SigmaMountTreeReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaMountTreeReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .TendpointProto Endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::endpoint(this),
        _Internal::endpoint(this).GetCachedSize(), target, stream);
  }

  // string tree = 2;
  if (!this->_internal_tree().empty()) {
    const std::string& _s = this->_internal_tree();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SigmaMountTreeReq.tree");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string mountName = 3;
  if (!this->_internal_mountname().empty()) {
    const std::string& _s = this->_internal_mountname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SigmaMountTreeReq.mountName");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaMountTreeReq)
  return target;
}

::size_t SigmaMountTreeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaMountTreeReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tree = 2;
  if (!this->_internal_tree().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_tree());
  }

  // string mountName = 3;
  if (!this->_internal_mountname().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_mountname());
  }

  // .TendpointProto Endpoint = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.endpoint_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaMountTreeReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaMountTreeReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaMountTreeReq::GetClassData() const { return &_class_data_; }


void SigmaMountTreeReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaMountTreeReq*>(&to_msg);
  auto& from = static_cast<const SigmaMountTreeReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaMountTreeReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tree().empty()) {
    _this->_internal_set_tree(from._internal_tree());
  }
  if (!from._internal_mountname().empty()) {
    _this->_internal_set_mountname(from._internal_mountname());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_endpoint()->::TendpointProto::MergeFrom(
        from._internal_endpoint());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaMountTreeReq::CopyFrom(const SigmaMountTreeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaMountTreeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaMountTreeReq::IsInitialized() const {
  return true;
}

void SigmaMountTreeReq::InternalSwap(SigmaMountTreeReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tree_, lhs_arena,
                                       &other->_impl_.tree_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mountname_, lhs_arena,
                                       &other->_impl_.mountname_, rhs_arena);
  swap(_impl_.endpoint_, other->_impl_.endpoint_);
}

::google::protobuf::Metadata SigmaMountTreeReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[18]);
}
// ===================================================================

class SigmaLastMountRep::_Internal {
 public:
  using HasBits = decltype(std::declval<SigmaLastMountRep>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SigmaLastMountRep, _impl_._has_bits_);
  static const ::Rerror& err(const SigmaLastMountRep* msg);
  static void set_has_err(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Rerror& SigmaLastMountRep::_Internal::err(const SigmaLastMountRep* msg) {
  return *msg->_impl_.err_;
}
void SigmaLastMountRep::clear_err() {
  if (_impl_.err_ != nullptr) _impl_.err_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SigmaLastMountRep::SigmaLastMountRep(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaLastMountRep)
}
SigmaLastMountRep::SigmaLastMountRep(const SigmaLastMountRep& from) : ::google::protobuf::Message() {
  SigmaLastMountRep* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.path1_){from._impl_.path1_},
      decltype(_impl_.path2_){from._impl_.path2_},
      decltype(_impl_.err_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.err_ = new ::Rerror(*from._impl_.err_);
  }

  // @@protoc_insertion_point(copy_constructor:SigmaLastMountRep)
}
inline void SigmaLastMountRep::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.path1_){arena},
      decltype(_impl_.path2_){arena},
      decltype(_impl_.err_){nullptr},
  };
}
SigmaLastMountRep::~SigmaLastMountRep() {
  // @@protoc_insertion_point(destructor:SigmaLastMountRep)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaLastMountRep::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_path1()->~RepeatedPtrField();
  _internal_mutable_path2()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.err_;
}
void SigmaLastMountRep::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaLastMountRep::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaLastMountRep)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_path1()->Clear();
  _internal_mutable_path2()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.err_ != nullptr);
    _impl_.err_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaLastMountRep::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 36, 2> SigmaLastMountRep::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SigmaLastMountRep, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SigmaLastMountRep_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string path1 = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaLastMountRep, _impl_.path1_)}},
    // repeated string path2 = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaLastMountRep, _impl_.path2_)}},
    // .Rerror err = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(SigmaLastMountRep, _impl_.err_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string path1 = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaLastMountRep, _impl_.path1_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string path2 = 2;
    {PROTOBUF_FIELD_OFFSET(SigmaLastMountRep, _impl_.path2_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .Rerror err = 3;
    {PROTOBUF_FIELD_OFFSET(SigmaLastMountRep, _impl_.err_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Rerror>()},
  }}, {{
    "\21\5\5\0\0\0\0\0"
    "SigmaLastMountRep"
    "path1"
    "path2"
  }},
};

::uint8_t* SigmaLastMountRep::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaLastMountRep)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string path1 = 1;
  for (int i = 0, n = this->_internal_path1_size(); i < n; ++i) {
    const auto& s = this->_internal_path1().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SigmaLastMountRep.path1");
    target = stream->WriteString(1, s, target);
  }

  // repeated string path2 = 2;
  for (int i = 0, n = this->_internal_path2_size(); i < n; ++i) {
    const auto& s = this->_internal_path2().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SigmaLastMountRep.path2");
    target = stream->WriteString(2, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Rerror err = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::err(this),
        _Internal::err(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaLastMountRep)
  return target;
}

::size_t SigmaLastMountRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaLastMountRep)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string path1 = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_path1().size());
  for (int i = 0, n = _internal_path1().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_path1().Get(i));
  }
  // repeated string path2 = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_path2().size());
  for (int i = 0, n = _internal_path2().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_path2().Get(i));
  }
  // .Rerror err = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.err_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaLastMountRep::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaLastMountRep::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaLastMountRep::GetClassData() const { return &_class_data_; }


void SigmaLastMountRep::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaLastMountRep*>(&to_msg);
  auto& from = static_cast<const SigmaLastMountRep&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaLastMountRep)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_path1()->MergeFrom(from._internal_path1());
  _this->_internal_mutable_path2()->MergeFrom(from._internal_path2());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_err()->::Rerror::MergeFrom(
        from._internal_err());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaLastMountRep::CopyFrom(const SigmaLastMountRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaLastMountRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaLastMountRep::IsInitialized() const {
  return true;
}

void SigmaLastMountRep::InternalSwap(SigmaLastMountRep* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.path1_.InternalSwap(&other->_impl_.path1_);
  _impl_.path2_.InternalSwap(&other->_impl_.path2_);
  swap(_impl_.err_, other->_impl_.err_);
}

::google::protobuf::Metadata SigmaLastMountRep::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[19]);
}
// ===================================================================

class SigmaMountReq::_Internal {
 public:
  using HasBits = decltype(std::declval<SigmaMountReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SigmaMountReq, _impl_._has_bits_);
  static const ::TendpointProto& endpoint(const SigmaMountReq* msg);
  static void set_has_endpoint(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TendpointProto& SigmaMountReq::_Internal::endpoint(const SigmaMountReq* msg) {
  return *msg->_impl_.endpoint_;
}
void SigmaMountReq::clear_endpoint() {
  if (_impl_.endpoint_ != nullptr) _impl_.endpoint_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SigmaMountReq::SigmaMountReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaMountReq)
}
SigmaMountReq::SigmaMountReq(const SigmaMountReq& from) : ::google::protobuf::Message() {
  SigmaMountReq* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.port_){},
      decltype(_impl_.endpoint_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.port_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.port_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_port().empty()) {
    _this->_impl_.port_.Set(from._internal_port(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.endpoint_ = new ::TendpointProto(*from._impl_.endpoint_);
  }

  // @@protoc_insertion_point(copy_constructor:SigmaMountReq)
}
inline void SigmaMountReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.port_){},
      decltype(_impl_.endpoint_){nullptr},
  };
  _impl_.port_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.port_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SigmaMountReq::~SigmaMountReq() {
  // @@protoc_insertion_point(destructor:SigmaMountReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaMountReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.port_.Destroy();
  if (this != internal_default_instance()) delete _impl_.endpoint_;
}
void SigmaMountReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaMountReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaMountReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.port_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.endpoint_ != nullptr);
    _impl_.endpoint_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaMountReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 26, 2> SigmaMountReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SigmaMountReq, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SigmaMountReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string port = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaMountReq, _impl_.port_)}},
    // .TendpointProto endpoint = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SigmaMountReq, _impl_.endpoint_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .TendpointProto endpoint = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaMountReq, _impl_.endpoint_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string port = 2;
    {PROTOBUF_FIELD_OFFSET(SigmaMountReq, _impl_.port_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::TendpointProto>()},
  }}, {{
    "\15\0\4\0\0\0\0\0"
    "SigmaMountReq"
    "port"
  }},
};

::uint8_t* SigmaMountReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaMountReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .TendpointProto endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::endpoint(this),
        _Internal::endpoint(this).GetCachedSize(), target, stream);
  }

  // string port = 2;
  if (!this->_internal_port().empty()) {
    const std::string& _s = this->_internal_port();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SigmaMountReq.port");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaMountReq)
  return target;
}

::size_t SigmaMountReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaMountReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string port = 2;
  if (!this->_internal_port().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_port());
  }

  // .TendpointProto endpoint = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.endpoint_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaMountReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaMountReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaMountReq::GetClassData() const { return &_class_data_; }


void SigmaMountReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaMountReq*>(&to_msg);
  auto& from = static_cast<const SigmaMountReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaMountReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_port().empty()) {
    _this->_internal_set_port(from._internal_port());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_endpoint()->::TendpointProto::MergeFrom(
        from._internal_endpoint());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaMountReq::CopyFrom(const SigmaMountReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaMountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaMountReq::IsInitialized() const {
  return true;
}

void SigmaMountReq::InternalSwap(SigmaMountReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.port_, lhs_arena,
                                       &other->_impl_.port_, rhs_arena);
  swap(_impl_.endpoint_, other->_impl_.endpoint_);
}

::google::protobuf::Metadata SigmaMountReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[20]);
}
// ===================================================================

class SigmaMountRep::_Internal {
 public:
  using HasBits = decltype(std::declval<SigmaMountRep>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SigmaMountRep, _impl_._has_bits_);
  static const ::TendpointProto& endpoint(const SigmaMountRep* msg);
  static void set_has_endpoint(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::Rerror& err(const SigmaMountRep* msg);
  static void set_has_err(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::TendpointProto& SigmaMountRep::_Internal::endpoint(const SigmaMountRep* msg) {
  return *msg->_impl_.endpoint_;
}
const ::Rerror& SigmaMountRep::_Internal::err(const SigmaMountRep* msg) {
  return *msg->_impl_.err_;
}
void SigmaMountRep::clear_endpoint() {
  if (_impl_.endpoint_ != nullptr) _impl_.endpoint_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void SigmaMountRep::clear_err() {
  if (_impl_.err_ != nullptr) _impl_.err_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SigmaMountRep::SigmaMountRep(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaMountRep)
}
SigmaMountRep::SigmaMountRep(const SigmaMountRep& from) : ::google::protobuf::Message() {
  SigmaMountRep* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.endpoint_){nullptr},
      decltype(_impl_.err_){nullptr},
      decltype(_impl_.local_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.endpoint_ = new ::TendpointProto(*from._impl_.endpoint_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.err_ = new ::Rerror(*from._impl_.err_);
  }
  _this->_impl_.local_ = from._impl_.local_;

  // @@protoc_insertion_point(copy_constructor:SigmaMountRep)
}
inline void SigmaMountRep::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.endpoint_){nullptr},
      decltype(_impl_.err_){nullptr},
      decltype(_impl_.local_){false},
  };
}
SigmaMountRep::~SigmaMountRep() {
  // @@protoc_insertion_point(destructor:SigmaMountRep)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaMountRep::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.endpoint_;
  if (this != internal_default_instance()) delete _impl_.err_;
}
void SigmaMountRep::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaMountRep::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaMountRep)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.endpoint_ != nullptr);
      _impl_.endpoint_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.err_ != nullptr);
      _impl_.err_->Clear();
    }
  }
  _impl_.local_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaMountRep::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> SigmaMountRep::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SigmaMountRep, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SigmaMountRep_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .TendpointProto endpoint = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SigmaMountRep, _impl_.endpoint_)}},
    // bool local = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SigmaMountRep, _impl_.local_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaMountRep, _impl_.local_)}},
    // .Rerror err = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(SigmaMountRep, _impl_.err_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .TendpointProto endpoint = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaMountRep, _impl_.endpoint_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool local = 2;
    {PROTOBUF_FIELD_OFFSET(SigmaMountRep, _impl_.local_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .Rerror err = 3;
    {PROTOBUF_FIELD_OFFSET(SigmaMountRep, _impl_.err_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::TendpointProto>()},
    {::_pbi::TcParser::GetTable<::Rerror>()},
  }}, {{
  }},
};

::uint8_t* SigmaMountRep::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaMountRep)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .TendpointProto endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::endpoint(this),
        _Internal::endpoint(this).GetCachedSize(), target, stream);
  }

  // bool local = 2;
  if (this->_internal_local() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_local(), target);
  }

  // .Rerror err = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::err(this),
        _Internal::err(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaMountRep)
  return target;
}

::size_t SigmaMountRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaMountRep)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .TendpointProto endpoint = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.endpoint_);
    }

    // .Rerror err = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.err_);
    }

  }
  // bool local = 2;
  if (this->_internal_local() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaMountRep::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaMountRep::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaMountRep::GetClassData() const { return &_class_data_; }


void SigmaMountRep::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaMountRep*>(&to_msg);
  auto& from = static_cast<const SigmaMountRep&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaMountRep)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_endpoint()->::TendpointProto::MergeFrom(
          from._internal_endpoint());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_err()->::Rerror::MergeFrom(
          from._internal_err());
    }
  }
  if (from._internal_local() != 0) {
    _this->_internal_set_local(from._internal_local());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaMountRep::CopyFrom(const SigmaMountRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaMountRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaMountRep::IsInitialized() const {
  return true;
}

void SigmaMountRep::InternalSwap(SigmaMountRep* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SigmaMountRep, _impl_.local_)
      + sizeof(SigmaMountRep::_impl_.local_)
      - PROTOBUF_FIELD_OFFSET(SigmaMountRep, _impl_.endpoint_)>(
          reinterpret_cast<char*>(&_impl_.endpoint_),
          reinterpret_cast<char*>(&other->_impl_.endpoint_));
}

::google::protobuf::Metadata SigmaMountRep::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[21]);
}
// ===================================================================

class SigmaMountsRep::_Internal {
 public:
  using HasBits = decltype(std::declval<SigmaMountsRep>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SigmaMountsRep, _impl_._has_bits_);
  static const ::Rerror& err(const SigmaMountsRep* msg);
  static void set_has_err(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Rerror& SigmaMountsRep::_Internal::err(const SigmaMountsRep* msg) {
  return *msg->_impl_.err_;
}
void SigmaMountsRep::clear_err() {
  if (_impl_.err_ != nullptr) _impl_.err_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SigmaMountsRep::SigmaMountsRep(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SigmaMountsRep)
}
SigmaMountsRep::SigmaMountsRep(const SigmaMountsRep& from) : ::google::protobuf::Message() {
  SigmaMountsRep* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.endpoints_){from._impl_.endpoints_},
      decltype(_impl_.err_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.err_ = new ::Rerror(*from._impl_.err_);
  }

  // @@protoc_insertion_point(copy_constructor:SigmaMountsRep)
}
inline void SigmaMountsRep::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.endpoints_){arena},
      decltype(_impl_.err_){nullptr},
  };
}
SigmaMountsRep::~SigmaMountsRep() {
  // @@protoc_insertion_point(destructor:SigmaMountsRep)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SigmaMountsRep::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_endpoints()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.err_;
}
void SigmaMountsRep::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SigmaMountsRep::Clear() {
// @@protoc_insertion_point(message_clear_start:SigmaMountsRep)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_endpoints()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.err_ != nullptr);
    _impl_.err_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SigmaMountsRep::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 32, 2> SigmaMountsRep::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SigmaMountsRep, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SigmaMountsRep_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .Rerror err = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SigmaMountsRep, _impl_.err_)}},
    // repeated string endpoints = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SigmaMountsRep, _impl_.endpoints_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string endpoints = 1;
    {PROTOBUF_FIELD_OFFSET(SigmaMountsRep, _impl_.endpoints_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .Rerror err = 2;
    {PROTOBUF_FIELD_OFFSET(SigmaMountsRep, _impl_.err_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Rerror>()},
  }}, {{
    "\16\11\0\0\0\0\0\0"
    "SigmaMountsRep"
    "endpoints"
  }},
};

::uint8_t* SigmaMountsRep::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SigmaMountsRep)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string endpoints = 1;
  for (int i = 0, n = this->_internal_endpoints_size(); i < n; ++i) {
    const auto& s = this->_internal_endpoints().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SigmaMountsRep.endpoints");
    target = stream->WriteString(1, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Rerror err = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::err(this),
        _Internal::err(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SigmaMountsRep)
  return target;
}

::size_t SigmaMountsRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SigmaMountsRep)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string endpoints = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_endpoints().size());
  for (int i = 0, n = _internal_endpoints().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_endpoints().Get(i));
  }
  // .Rerror err = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.err_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SigmaMountsRep::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SigmaMountsRep::MergeImpl
};
const ::google::protobuf::Message::ClassData*SigmaMountsRep::GetClassData() const { return &_class_data_; }


void SigmaMountsRep::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SigmaMountsRep*>(&to_msg);
  auto& from = static_cast<const SigmaMountsRep&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SigmaMountsRep)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_endpoints()->MergeFrom(from._internal_endpoints());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_err()->::Rerror::MergeFrom(
        from._internal_err());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigmaMountsRep::CopyFrom(const SigmaMountsRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SigmaMountsRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SigmaMountsRep::IsInitialized() const {
  return true;
}

void SigmaMountsRep::InternalSwap(SigmaMountsRep* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.endpoints_.InternalSwap(&other->_impl_.endpoints_);
  swap(_impl_.err_, other->_impl_.err_);
}

::google::protobuf::Metadata SigmaMountsRep::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_getter, &descriptor_table_proxy_2fsigmap_2fproto_2fspproxy_2eproto_once,
      file_level_metadata_proxy_2fsigmap_2fproto_2fspproxy_2eproto[22]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
