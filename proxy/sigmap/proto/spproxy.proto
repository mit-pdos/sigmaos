syntax = "proto3";

import "sigmap/sigmap.proto";
import "proc/proc.proto";
import "rpc/proto/rpc.proto";

option go_package = "sigmaos/proxy/sigmap/proto";

message SigmaInitReq {
        ProcEnvProto procEnvProto = 1;
}

message SigmaNullReq {
}

message SigmaRealmReq {
        string realmStr = 1;
}

message SigmaCloseReq {
        uint32 fd = 1;
}

message SigmaErrRep {
        Rerror err = 1;
}

message SigmaPathReq {
        string path = 1;
}

message SigmaStatRep {
        TstatProto stat = 1;
        Rerror err = 2;
}

message SigmaCreateReq {
        string path = 1;
        uint32 perm = 2;
        uint32 mode = 3;
        uint64 leaseId = 4;
        TfenceProto fence = 5;
        bool wait = 6;
}

message SigmaFdRep {
        uint32 fd = 1;
        Rerror err = 2;
}

message SigmaRenameReq {
        string src = 1;
        string dst = 2;
}

message SigmaDataRep {
        Blob blob = 1;
        Rerror err = 2;
}

message SigmaPutFileReq {
        string path = 1;
        uint32 perm = 2;
        uint32 mode = 3;
        uint64 offset = 4;
        uint64 leaseId = 5;
        Blob blob = 6;
}

message SigmaSizeRep {
        uint64 size = 1;
        Rerror err = 2;
}

message SigmaReadReq {
        uint32 fd = 1;
        uint64 size = 2;
        uint64 off = 3;
}

message SigmaWriteReq {
        uint32 fd = 1;
        TfenceProto fence = 2;
        Blob blob = 3;
        uint32 nOutVec = 4;
}

message SigmaSeekReq {
        uint32 fd = 1;
        uint64 offset = 2;
}

message SigmaClntIdRep {
        uint64 clntId = 1;
        Rerror err = 2;
}

message SigmaFenceReq {
        string Path = 1;
        TfenceProto Fence = 2;
}

message SigmaMountTreeReq {
        TendpointProto Endpoint = 1;
        string tree = 2;
        string mountName = 3;
}

message SigmaLastMountRep {
        repeated string path1 = 1;
        repeated string path2 = 2;
        Rerror err = 3;
}

message SigmaMountReq {
        TendpointProto endpoint = 1;
        string port = 2;
}

message SigmaMountRep {
        TendpointProto endpoint = 1;
        bool local = 2;
        Rerror err = 3;
}

message SigmaMountsRep {
        repeated string endpoints = 1;
        Rerror err = 2;
}
