syntax = "proto3";

import "sigmap/sigmap.proto";
import "proc/proc.proto";
import "rpc/proto/rpc.proto";

option go_package = "sigmaos/proxy/sigmap/proto";

message SigmaInitRequest {
        ProcEnvProto procEnvProto = 1;
}

message SigmaNullRequest {
}

message SigmaRealmRequest {
        string realmStr = 1;
}

message SigmaCloseRequest {
        uint32 fd = 1;
}

message SigmaErrReply {
        Rerror err = 1;
}

message SigmaPathRequest {
        string path = 1;
}

message SigmaStatReply {
        TstatProto stat = 1;
        Rerror err = 2;
}

message SigmaCreateRequest {
        string path = 1;
        uint32 perm = 2;
        uint32 mode = 3;
        uint64 leaseId = 4;
        TfenceProto fence = 5;
        bool wait = 6;
}

message SigmaFdReply {
        uint32 fd = 1;
        Rerror err = 2;
}

message SigmaRenameRequest {
        string src = 1;
        string dst = 2;
}

message SigmaDataReply {
        Blob blob = 1;
        Rerror err = 2;
}

message SigmaPutFileRequest {
        string path = 1;
        uint32 perm = 2;
        uint32 mode = 3;
        uint64 offset = 4;
        uint64 leaseId = 5;
        Blob blob = 6;
}

message SigmaSizeReply {
        uint64 size = 1;
        Rerror err = 2;
}

message SigmaReadRequest {
        uint32 fd = 1;
        uint64 size = 2;
        uint64 off = 3;
}

message SigmaWriteRequest {
        uint32 fd = 1;
        TfenceProto fence = 2;
        Blob blob = 3;
        uint32 nOutVec = 4;
}

message SigmaSeekRequest {
        uint32 fd = 1;
        uint64 offset = 2;
}

message SigmaClntIdReply {
        uint64 clntId = 1;
        Rerror err = 2;
}

message SigmaFenceRequest {
        string Path = 1;
        TfenceProto Fence = 2;
}

message SigmaMountTreeRequest {
        TendpointProto Endpoint = 1;
        string tree = 2;
        string mountName = 3;
}

message SigmaLastMountReply {
        repeated string path1 = 1;
        repeated string path2 = 2;
        Rerror err = 3;
}

message SigmaMountRequest {
        TendpointProto endpoint = 1;
        string port = 2;
}

message SigmaMountReply {
        TendpointProto endpoint = 1;
        bool local = 2;
        Rerror err = 3;
}

message SigmaMountsReply {
        repeated string endpoints = 1;
        Rerror err = 2;
}
