/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: pylib/proto/rpc.proto */

#ifndef PROTOBUF_C_pylib_2fproto_2frpc_2eproto__INCLUDED
#define PROTOBUF_C_pylib_2fproto_2frpc_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "pylib/proto/sigmap.pb-c.h"

typedef struct _Req Req;
typedef struct _Rep Rep;
typedef struct _Blob Blob;


/* --- enums --- */


/* --- messages --- */

struct  _Req
{
  ProtobufCMessage base;
  char *method;
};
#define REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&req__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Rep
{
  ProtobufCMessage base;
  Rerror *err;
};
#define REP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rep__descriptor) \
    , NULL }


/*
 * Users of rpc package can use Blob to pass data directly through to
 * the transport without the rpc package marshaling it.
 */
struct  _Blob
{
  ProtobufCMessage base;
  size_t n_iov;
  ProtobufCBinaryData *iov;
};
#define BLOB__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&blob__descriptor) \
    , 0,NULL }


/* Req methods */
void   req__init
                     (Req         *message);
size_t req__get_packed_size
                     (const Req   *message);
size_t req__pack
                     (const Req   *message,
                      uint8_t             *out);
size_t req__pack_to_buffer
                     (const Req   *message,
                      ProtobufCBuffer     *buffer);
Req *
       req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   req__free_unpacked
                     (Req *message,
                      ProtobufCAllocator *allocator);
/* Rep methods */
void   rep__init
                     (Rep         *message);
size_t rep__get_packed_size
                     (const Rep   *message);
size_t rep__pack
                     (const Rep   *message,
                      uint8_t             *out);
size_t rep__pack_to_buffer
                     (const Rep   *message,
                      ProtobufCBuffer     *buffer);
Rep *
       rep__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rep__free_unpacked
                     (Rep *message,
                      ProtobufCAllocator *allocator);
/* Blob methods */
void   blob__init
                     (Blob         *message);
size_t blob__get_packed_size
                     (const Blob   *message);
size_t blob__pack
                     (const Blob   *message,
                      uint8_t             *out);
size_t blob__pack_to_buffer
                     (const Blob   *message,
                      ProtobufCBuffer     *buffer);
Blob *
       blob__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   blob__free_unpacked
                     (Blob *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Req_Closure)
                 (const Req *message,
                  void *closure_data);
typedef void (*Rep_Closure)
                 (const Rep *message,
                  void *closure_data);
typedef void (*Blob_Closure)
                 (const Blob *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor req__descriptor;
extern const ProtobufCMessageDescriptor rep__descriptor;
extern const ProtobufCMessageDescriptor blob__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_pylib_2fproto_2frpc_2eproto__INCLUDED */
