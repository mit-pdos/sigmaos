/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: pylib/proto/spproxy.proto */

#ifndef PROTOBUF_C_pylib_2fproto_2fspproxy_2eproto__INCLUDED
#define PROTOBUF_C_pylib_2fproto_2fspproxy_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "pylib/proto/sigmap.pb-c.h"
#include "pylib/proto/proc.pb-c.h"
#include "pylib/proto/rpc.pb-c.h"

typedef struct _SigmaInitReq SigmaInitReq;
typedef struct _SigmaNullReq SigmaNullReq;
typedef struct _SigmaRealmReq SigmaRealmReq;
typedef struct _SigmaCloseReq SigmaCloseReq;
typedef struct _SigmaErrRep SigmaErrRep;
typedef struct _SigmaPathReq SigmaPathReq;
typedef struct _SigmaStatRep SigmaStatRep;
typedef struct _SigmaCreateReq SigmaCreateReq;
typedef struct _SigmaFdRep SigmaFdRep;
typedef struct _SigmaRenameReq SigmaRenameReq;
typedef struct _SigmaDataRep SigmaDataRep;
typedef struct _SigmaPutFileReq SigmaPutFileReq;
typedef struct _SigmaSizeRep SigmaSizeRep;
typedef struct _SigmaReadReq SigmaReadReq;
typedef struct _SigmaWriteReq SigmaWriteReq;
typedef struct _SigmaSeekReq SigmaSeekReq;
typedef struct _SigmaClntIdRep SigmaClntIdRep;
typedef struct _SigmaFenceReq SigmaFenceReq;
typedef struct _SigmaMountTreeReq SigmaMountTreeReq;
typedef struct _SigmaLastMountRep SigmaLastMountRep;
typedef struct _SigmaMountReq SigmaMountReq;
typedef struct _SigmaMountRep SigmaMountRep;
typedef struct _SigmaMountsRep SigmaMountsRep;


/* --- enums --- */


/* --- messages --- */

struct  _SigmaInitReq
{
  ProtobufCMessage base;
  ProcEnvProto *procenvproto;
};
#define SIGMA_INIT_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_init_req__descriptor) \
    , NULL }


struct  _SigmaNullReq
{
  ProtobufCMessage base;
};
#define SIGMA_NULL_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_null_req__descriptor) \
     }


struct  _SigmaRealmReq
{
  ProtobufCMessage base;
  char *realmstr;
};
#define SIGMA_REALM_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_realm_req__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _SigmaCloseReq
{
  ProtobufCMessage base;
  uint32_t fd;
};
#define SIGMA_CLOSE_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_close_req__descriptor) \
    , 0 }


struct  _SigmaErrRep
{
  ProtobufCMessage base;
  Rerror *err;
};
#define SIGMA_ERR_REP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_err_rep__descriptor) \
    , NULL }


struct  _SigmaPathReq
{
  ProtobufCMessage base;
  char *path;
};
#define SIGMA_PATH_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_path_req__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _SigmaStatRep
{
  ProtobufCMessage base;
  TstatProto *stat;
  Rerror *err;
};
#define SIGMA_STAT_REP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_stat_rep__descriptor) \
    , NULL, NULL }


struct  _SigmaCreateReq
{
  ProtobufCMessage base;
  char *path;
  uint32_t perm;
  uint32_t mode;
  uint64_t leaseid;
  TfenceProto *fence;
  protobuf_c_boolean wait;
};
#define SIGMA_CREATE_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_create_req__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0, 0, NULL, 0 }


struct  _SigmaFdRep
{
  ProtobufCMessage base;
  uint32_t fd;
  Rerror *err;
};
#define SIGMA_FD_REP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_fd_rep__descriptor) \
    , 0, NULL }


struct  _SigmaRenameReq
{
  ProtobufCMessage base;
  char *src;
  char *dst;
};
#define SIGMA_RENAME_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_rename_req__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _SigmaDataRep
{
  ProtobufCMessage base;
  Blob *blob;
  Rerror *err;
};
#define SIGMA_DATA_REP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_data_rep__descriptor) \
    , NULL, NULL }


struct  _SigmaPutFileReq
{
  ProtobufCMessage base;
  char *path;
  uint32_t perm;
  uint32_t mode;
  uint64_t offset;
  uint64_t leaseid;
  Blob *blob;
};
#define SIGMA_PUT_FILE_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_put_file_req__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0, 0, 0, NULL }


struct  _SigmaSizeRep
{
  ProtobufCMessage base;
  uint64_t size;
  Rerror *err;
};
#define SIGMA_SIZE_REP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_size_rep__descriptor) \
    , 0, NULL }


struct  _SigmaReadReq
{
  ProtobufCMessage base;
  uint32_t fd;
  uint64_t size;
  uint64_t off;
};
#define SIGMA_READ_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_read_req__descriptor) \
    , 0, 0, 0 }


struct  _SigmaWriteReq
{
  ProtobufCMessage base;
  uint32_t fd;
  TfenceProto *fence;
  Blob *blob;
  uint32_t noutvec;
};
#define SIGMA_WRITE_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_write_req__descriptor) \
    , 0, NULL, NULL, 0 }


struct  _SigmaSeekReq
{
  ProtobufCMessage base;
  uint32_t fd;
  uint64_t offset;
};
#define SIGMA_SEEK_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_seek_req__descriptor) \
    , 0, 0 }


struct  _SigmaClntIdRep
{
  ProtobufCMessage base;
  uint64_t clntid;
  Rerror *err;
};
#define SIGMA_CLNT_ID_REP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_clnt_id_rep__descriptor) \
    , 0, NULL }


struct  _SigmaFenceReq
{
  ProtobufCMessage base;
  char *path;
  TfenceProto *fence;
};
#define SIGMA_FENCE_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_fence_req__descriptor) \
    , (char *)protobuf_c_empty_string, NULL }


struct  _SigmaMountTreeReq
{
  ProtobufCMessage base;
  TendpointProto *endpoint;
  char *tree;
  char *mountname;
};
#define SIGMA_MOUNT_TREE_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_mount_tree_req__descriptor) \
    , NULL, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _SigmaLastMountRep
{
  ProtobufCMessage base;
  size_t n_path1;
  char **path1;
  size_t n_path2;
  char **path2;
  Rerror *err;
};
#define SIGMA_LAST_MOUNT_REP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_last_mount_rep__descriptor) \
    , 0,NULL, 0,NULL, NULL }


struct  _SigmaMountReq
{
  ProtobufCMessage base;
  TendpointProto *endpoint;
  char *port;
};
#define SIGMA_MOUNT_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_mount_req__descriptor) \
    , NULL, (char *)protobuf_c_empty_string }


struct  _SigmaMountRep
{
  ProtobufCMessage base;
  TendpointProto *endpoint;
  protobuf_c_boolean local;
  Rerror *err;
};
#define SIGMA_MOUNT_REP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_mount_rep__descriptor) \
    , NULL, 0, NULL }


struct  _SigmaMountsRep
{
  ProtobufCMessage base;
  size_t n_endpoints;
  char **endpoints;
  Rerror *err;
};
#define SIGMA_MOUNTS_REP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sigma_mounts_rep__descriptor) \
    , 0,NULL, NULL }


/* SigmaInitReq methods */
void   sigma_init_req__init
                     (SigmaInitReq         *message);
size_t sigma_init_req__get_packed_size
                     (const SigmaInitReq   *message);
size_t sigma_init_req__pack
                     (const SigmaInitReq   *message,
                      uint8_t             *out);
size_t sigma_init_req__pack_to_buffer
                     (const SigmaInitReq   *message,
                      ProtobufCBuffer     *buffer);
SigmaInitReq *
       sigma_init_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_init_req__free_unpacked
                     (SigmaInitReq *message,
                      ProtobufCAllocator *allocator);
/* SigmaNullReq methods */
void   sigma_null_req__init
                     (SigmaNullReq         *message);
size_t sigma_null_req__get_packed_size
                     (const SigmaNullReq   *message);
size_t sigma_null_req__pack
                     (const SigmaNullReq   *message,
                      uint8_t             *out);
size_t sigma_null_req__pack_to_buffer
                     (const SigmaNullReq   *message,
                      ProtobufCBuffer     *buffer);
SigmaNullReq *
       sigma_null_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_null_req__free_unpacked
                     (SigmaNullReq *message,
                      ProtobufCAllocator *allocator);
/* SigmaRealmReq methods */
void   sigma_realm_req__init
                     (SigmaRealmReq         *message);
size_t sigma_realm_req__get_packed_size
                     (const SigmaRealmReq   *message);
size_t sigma_realm_req__pack
                     (const SigmaRealmReq   *message,
                      uint8_t             *out);
size_t sigma_realm_req__pack_to_buffer
                     (const SigmaRealmReq   *message,
                      ProtobufCBuffer     *buffer);
SigmaRealmReq *
       sigma_realm_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_realm_req__free_unpacked
                     (SigmaRealmReq *message,
                      ProtobufCAllocator *allocator);
/* SigmaCloseReq methods */
void   sigma_close_req__init
                     (SigmaCloseReq         *message);
size_t sigma_close_req__get_packed_size
                     (const SigmaCloseReq   *message);
size_t sigma_close_req__pack
                     (const SigmaCloseReq   *message,
                      uint8_t             *out);
size_t sigma_close_req__pack_to_buffer
                     (const SigmaCloseReq   *message,
                      ProtobufCBuffer     *buffer);
SigmaCloseReq *
       sigma_close_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_close_req__free_unpacked
                     (SigmaCloseReq *message,
                      ProtobufCAllocator *allocator);
/* SigmaErrRep methods */
void   sigma_err_rep__init
                     (SigmaErrRep         *message);
size_t sigma_err_rep__get_packed_size
                     (const SigmaErrRep   *message);
size_t sigma_err_rep__pack
                     (const SigmaErrRep   *message,
                      uint8_t             *out);
size_t sigma_err_rep__pack_to_buffer
                     (const SigmaErrRep   *message,
                      ProtobufCBuffer     *buffer);
SigmaErrRep *
       sigma_err_rep__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_err_rep__free_unpacked
                     (SigmaErrRep *message,
                      ProtobufCAllocator *allocator);
/* SigmaPathReq methods */
void   sigma_path_req__init
                     (SigmaPathReq         *message);
size_t sigma_path_req__get_packed_size
                     (const SigmaPathReq   *message);
size_t sigma_path_req__pack
                     (const SigmaPathReq   *message,
                      uint8_t             *out);
size_t sigma_path_req__pack_to_buffer
                     (const SigmaPathReq   *message,
                      ProtobufCBuffer     *buffer);
SigmaPathReq *
       sigma_path_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_path_req__free_unpacked
                     (SigmaPathReq *message,
                      ProtobufCAllocator *allocator);
/* SigmaStatRep methods */
void   sigma_stat_rep__init
                     (SigmaStatRep         *message);
size_t sigma_stat_rep__get_packed_size
                     (const SigmaStatRep   *message);
size_t sigma_stat_rep__pack
                     (const SigmaStatRep   *message,
                      uint8_t             *out);
size_t sigma_stat_rep__pack_to_buffer
                     (const SigmaStatRep   *message,
                      ProtobufCBuffer     *buffer);
SigmaStatRep *
       sigma_stat_rep__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_stat_rep__free_unpacked
                     (SigmaStatRep *message,
                      ProtobufCAllocator *allocator);
/* SigmaCreateReq methods */
void   sigma_create_req__init
                     (SigmaCreateReq         *message);
size_t sigma_create_req__get_packed_size
                     (const SigmaCreateReq   *message);
size_t sigma_create_req__pack
                     (const SigmaCreateReq   *message,
                      uint8_t             *out);
size_t sigma_create_req__pack_to_buffer
                     (const SigmaCreateReq   *message,
                      ProtobufCBuffer     *buffer);
SigmaCreateReq *
       sigma_create_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_create_req__free_unpacked
                     (SigmaCreateReq *message,
                      ProtobufCAllocator *allocator);
/* SigmaFdRep methods */
void   sigma_fd_rep__init
                     (SigmaFdRep         *message);
size_t sigma_fd_rep__get_packed_size
                     (const SigmaFdRep   *message);
size_t sigma_fd_rep__pack
                     (const SigmaFdRep   *message,
                      uint8_t             *out);
size_t sigma_fd_rep__pack_to_buffer
                     (const SigmaFdRep   *message,
                      ProtobufCBuffer     *buffer);
SigmaFdRep *
       sigma_fd_rep__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_fd_rep__free_unpacked
                     (SigmaFdRep *message,
                      ProtobufCAllocator *allocator);
/* SigmaRenameReq methods */
void   sigma_rename_req__init
                     (SigmaRenameReq         *message);
size_t sigma_rename_req__get_packed_size
                     (const SigmaRenameReq   *message);
size_t sigma_rename_req__pack
                     (const SigmaRenameReq   *message,
                      uint8_t             *out);
size_t sigma_rename_req__pack_to_buffer
                     (const SigmaRenameReq   *message,
                      ProtobufCBuffer     *buffer);
SigmaRenameReq *
       sigma_rename_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_rename_req__free_unpacked
                     (SigmaRenameReq *message,
                      ProtobufCAllocator *allocator);
/* SigmaDataRep methods */
void   sigma_data_rep__init
                     (SigmaDataRep         *message);
size_t sigma_data_rep__get_packed_size
                     (const SigmaDataRep   *message);
size_t sigma_data_rep__pack
                     (const SigmaDataRep   *message,
                      uint8_t             *out);
size_t sigma_data_rep__pack_to_buffer
                     (const SigmaDataRep   *message,
                      ProtobufCBuffer     *buffer);
SigmaDataRep *
       sigma_data_rep__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_data_rep__free_unpacked
                     (SigmaDataRep *message,
                      ProtobufCAllocator *allocator);
/* SigmaPutFileReq methods */
void   sigma_put_file_req__init
                     (SigmaPutFileReq         *message);
size_t sigma_put_file_req__get_packed_size
                     (const SigmaPutFileReq   *message);
size_t sigma_put_file_req__pack
                     (const SigmaPutFileReq   *message,
                      uint8_t             *out);
size_t sigma_put_file_req__pack_to_buffer
                     (const SigmaPutFileReq   *message,
                      ProtobufCBuffer     *buffer);
SigmaPutFileReq *
       sigma_put_file_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_put_file_req__free_unpacked
                     (SigmaPutFileReq *message,
                      ProtobufCAllocator *allocator);
/* SigmaSizeRep methods */
void   sigma_size_rep__init
                     (SigmaSizeRep         *message);
size_t sigma_size_rep__get_packed_size
                     (const SigmaSizeRep   *message);
size_t sigma_size_rep__pack
                     (const SigmaSizeRep   *message,
                      uint8_t             *out);
size_t sigma_size_rep__pack_to_buffer
                     (const SigmaSizeRep   *message,
                      ProtobufCBuffer     *buffer);
SigmaSizeRep *
       sigma_size_rep__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_size_rep__free_unpacked
                     (SigmaSizeRep *message,
                      ProtobufCAllocator *allocator);
/* SigmaReadReq methods */
void   sigma_read_req__init
                     (SigmaReadReq         *message);
size_t sigma_read_req__get_packed_size
                     (const SigmaReadReq   *message);
size_t sigma_read_req__pack
                     (const SigmaReadReq   *message,
                      uint8_t             *out);
size_t sigma_read_req__pack_to_buffer
                     (const SigmaReadReq   *message,
                      ProtobufCBuffer     *buffer);
SigmaReadReq *
       sigma_read_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_read_req__free_unpacked
                     (SigmaReadReq *message,
                      ProtobufCAllocator *allocator);
/* SigmaWriteReq methods */
void   sigma_write_req__init
                     (SigmaWriteReq         *message);
size_t sigma_write_req__get_packed_size
                     (const SigmaWriteReq   *message);
size_t sigma_write_req__pack
                     (const SigmaWriteReq   *message,
                      uint8_t             *out);
size_t sigma_write_req__pack_to_buffer
                     (const SigmaWriteReq   *message,
                      ProtobufCBuffer     *buffer);
SigmaWriteReq *
       sigma_write_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_write_req__free_unpacked
                     (SigmaWriteReq *message,
                      ProtobufCAllocator *allocator);
/* SigmaSeekReq methods */
void   sigma_seek_req__init
                     (SigmaSeekReq         *message);
size_t sigma_seek_req__get_packed_size
                     (const SigmaSeekReq   *message);
size_t sigma_seek_req__pack
                     (const SigmaSeekReq   *message,
                      uint8_t             *out);
size_t sigma_seek_req__pack_to_buffer
                     (const SigmaSeekReq   *message,
                      ProtobufCBuffer     *buffer);
SigmaSeekReq *
       sigma_seek_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_seek_req__free_unpacked
                     (SigmaSeekReq *message,
                      ProtobufCAllocator *allocator);
/* SigmaClntIdRep methods */
void   sigma_clnt_id_rep__init
                     (SigmaClntIdRep         *message);
size_t sigma_clnt_id_rep__get_packed_size
                     (const SigmaClntIdRep   *message);
size_t sigma_clnt_id_rep__pack
                     (const SigmaClntIdRep   *message,
                      uint8_t             *out);
size_t sigma_clnt_id_rep__pack_to_buffer
                     (const SigmaClntIdRep   *message,
                      ProtobufCBuffer     *buffer);
SigmaClntIdRep *
       sigma_clnt_id_rep__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_clnt_id_rep__free_unpacked
                     (SigmaClntIdRep *message,
                      ProtobufCAllocator *allocator);
/* SigmaFenceReq methods */
void   sigma_fence_req__init
                     (SigmaFenceReq         *message);
size_t sigma_fence_req__get_packed_size
                     (const SigmaFenceReq   *message);
size_t sigma_fence_req__pack
                     (const SigmaFenceReq   *message,
                      uint8_t             *out);
size_t sigma_fence_req__pack_to_buffer
                     (const SigmaFenceReq   *message,
                      ProtobufCBuffer     *buffer);
SigmaFenceReq *
       sigma_fence_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_fence_req__free_unpacked
                     (SigmaFenceReq *message,
                      ProtobufCAllocator *allocator);
/* SigmaMountTreeReq methods */
void   sigma_mount_tree_req__init
                     (SigmaMountTreeReq         *message);
size_t sigma_mount_tree_req__get_packed_size
                     (const SigmaMountTreeReq   *message);
size_t sigma_mount_tree_req__pack
                     (const SigmaMountTreeReq   *message,
                      uint8_t             *out);
size_t sigma_mount_tree_req__pack_to_buffer
                     (const SigmaMountTreeReq   *message,
                      ProtobufCBuffer     *buffer);
SigmaMountTreeReq *
       sigma_mount_tree_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_mount_tree_req__free_unpacked
                     (SigmaMountTreeReq *message,
                      ProtobufCAllocator *allocator);
/* SigmaLastMountRep methods */
void   sigma_last_mount_rep__init
                     (SigmaLastMountRep         *message);
size_t sigma_last_mount_rep__get_packed_size
                     (const SigmaLastMountRep   *message);
size_t sigma_last_mount_rep__pack
                     (const SigmaLastMountRep   *message,
                      uint8_t             *out);
size_t sigma_last_mount_rep__pack_to_buffer
                     (const SigmaLastMountRep   *message,
                      ProtobufCBuffer     *buffer);
SigmaLastMountRep *
       sigma_last_mount_rep__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_last_mount_rep__free_unpacked
                     (SigmaLastMountRep *message,
                      ProtobufCAllocator *allocator);
/* SigmaMountReq methods */
void   sigma_mount_req__init
                     (SigmaMountReq         *message);
size_t sigma_mount_req__get_packed_size
                     (const SigmaMountReq   *message);
size_t sigma_mount_req__pack
                     (const SigmaMountReq   *message,
                      uint8_t             *out);
size_t sigma_mount_req__pack_to_buffer
                     (const SigmaMountReq   *message,
                      ProtobufCBuffer     *buffer);
SigmaMountReq *
       sigma_mount_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_mount_req__free_unpacked
                     (SigmaMountReq *message,
                      ProtobufCAllocator *allocator);
/* SigmaMountRep methods */
void   sigma_mount_rep__init
                     (SigmaMountRep         *message);
size_t sigma_mount_rep__get_packed_size
                     (const SigmaMountRep   *message);
size_t sigma_mount_rep__pack
                     (const SigmaMountRep   *message,
                      uint8_t             *out);
size_t sigma_mount_rep__pack_to_buffer
                     (const SigmaMountRep   *message,
                      ProtobufCBuffer     *buffer);
SigmaMountRep *
       sigma_mount_rep__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_mount_rep__free_unpacked
                     (SigmaMountRep *message,
                      ProtobufCAllocator *allocator);
/* SigmaMountsRep methods */
void   sigma_mounts_rep__init
                     (SigmaMountsRep         *message);
size_t sigma_mounts_rep__get_packed_size
                     (const SigmaMountsRep   *message);
size_t sigma_mounts_rep__pack
                     (const SigmaMountsRep   *message,
                      uint8_t             *out);
size_t sigma_mounts_rep__pack_to_buffer
                     (const SigmaMountsRep   *message,
                      ProtobufCBuffer     *buffer);
SigmaMountsRep *
       sigma_mounts_rep__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sigma_mounts_rep__free_unpacked
                     (SigmaMountsRep *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*SigmaInitReq_Closure)
                 (const SigmaInitReq *message,
                  void *closure_data);
typedef void (*SigmaNullReq_Closure)
                 (const SigmaNullReq *message,
                  void *closure_data);
typedef void (*SigmaRealmReq_Closure)
                 (const SigmaRealmReq *message,
                  void *closure_data);
typedef void (*SigmaCloseReq_Closure)
                 (const SigmaCloseReq *message,
                  void *closure_data);
typedef void (*SigmaErrRep_Closure)
                 (const SigmaErrRep *message,
                  void *closure_data);
typedef void (*SigmaPathReq_Closure)
                 (const SigmaPathReq *message,
                  void *closure_data);
typedef void (*SigmaStatRep_Closure)
                 (const SigmaStatRep *message,
                  void *closure_data);
typedef void (*SigmaCreateReq_Closure)
                 (const SigmaCreateReq *message,
                  void *closure_data);
typedef void (*SigmaFdRep_Closure)
                 (const SigmaFdRep *message,
                  void *closure_data);
typedef void (*SigmaRenameReq_Closure)
                 (const SigmaRenameReq *message,
                  void *closure_data);
typedef void (*SigmaDataRep_Closure)
                 (const SigmaDataRep *message,
                  void *closure_data);
typedef void (*SigmaPutFileReq_Closure)
                 (const SigmaPutFileReq *message,
                  void *closure_data);
typedef void (*SigmaSizeRep_Closure)
                 (const SigmaSizeRep *message,
                  void *closure_data);
typedef void (*SigmaReadReq_Closure)
                 (const SigmaReadReq *message,
                  void *closure_data);
typedef void (*SigmaWriteReq_Closure)
                 (const SigmaWriteReq *message,
                  void *closure_data);
typedef void (*SigmaSeekReq_Closure)
                 (const SigmaSeekReq *message,
                  void *closure_data);
typedef void (*SigmaClntIdRep_Closure)
                 (const SigmaClntIdRep *message,
                  void *closure_data);
typedef void (*SigmaFenceReq_Closure)
                 (const SigmaFenceReq *message,
                  void *closure_data);
typedef void (*SigmaMountTreeReq_Closure)
                 (const SigmaMountTreeReq *message,
                  void *closure_data);
typedef void (*SigmaLastMountRep_Closure)
                 (const SigmaLastMountRep *message,
                  void *closure_data);
typedef void (*SigmaMountReq_Closure)
                 (const SigmaMountReq *message,
                  void *closure_data);
typedef void (*SigmaMountRep_Closure)
                 (const SigmaMountRep *message,
                  void *closure_data);
typedef void (*SigmaMountsRep_Closure)
                 (const SigmaMountsRep *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor sigma_init_req__descriptor;
extern const ProtobufCMessageDescriptor sigma_null_req__descriptor;
extern const ProtobufCMessageDescriptor sigma_realm_req__descriptor;
extern const ProtobufCMessageDescriptor sigma_close_req__descriptor;
extern const ProtobufCMessageDescriptor sigma_err_rep__descriptor;
extern const ProtobufCMessageDescriptor sigma_path_req__descriptor;
extern const ProtobufCMessageDescriptor sigma_stat_rep__descriptor;
extern const ProtobufCMessageDescriptor sigma_create_req__descriptor;
extern const ProtobufCMessageDescriptor sigma_fd_rep__descriptor;
extern const ProtobufCMessageDescriptor sigma_rename_req__descriptor;
extern const ProtobufCMessageDescriptor sigma_data_rep__descriptor;
extern const ProtobufCMessageDescriptor sigma_put_file_req__descriptor;
extern const ProtobufCMessageDescriptor sigma_size_rep__descriptor;
extern const ProtobufCMessageDescriptor sigma_read_req__descriptor;
extern const ProtobufCMessageDescriptor sigma_write_req__descriptor;
extern const ProtobufCMessageDescriptor sigma_seek_req__descriptor;
extern const ProtobufCMessageDescriptor sigma_clnt_id_rep__descriptor;
extern const ProtobufCMessageDescriptor sigma_fence_req__descriptor;
extern const ProtobufCMessageDescriptor sigma_mount_tree_req__descriptor;
extern const ProtobufCMessageDescriptor sigma_last_mount_rep__descriptor;
extern const ProtobufCMessageDescriptor sigma_mount_req__descriptor;
extern const ProtobufCMessageDescriptor sigma_mount_rep__descriptor;
extern const ProtobufCMessageDescriptor sigma_mounts_rep__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_pylib_2fproto_2fspproxy_2eproto__INCLUDED */
