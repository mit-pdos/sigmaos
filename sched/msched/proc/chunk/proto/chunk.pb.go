// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.3
// source: sched/msched/proc/chunk/proto/chunk.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	proto "sigmaos/rpc/proto"
	sigmap "sigmaos/sigmap"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetFileStatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prog               string                 `protobuf:"bytes,1,opt,name=prog,proto3" json:"prog,omitempty"`
	RealmStr           string                 `protobuf:"bytes,2,opt,name=realmStr,proto3" json:"realmStr,omitempty"`
	Pid                string                 `protobuf:"bytes,3,opt,name=pid,proto3" json:"pid,omitempty"`
	SigmaPath          []string               `protobuf:"bytes,4,rep,name=sigmaPath,proto3" json:"sigmaPath,omitempty"`
	S3Secret           *sigmap.SecretProto    `protobuf:"bytes,5,opt,name=s3Secret,proto3" json:"s3Secret,omitempty"`
	NamedEndpointProto *sigmap.TendpointProto `protobuf:"bytes,6,opt,name=namedEndpointProto,proto3" json:"namedEndpointProto,omitempty"`
}

func (x *GetFileStatReq) Reset() {
	*x = GetFileStatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sched_msched_proc_chunk_proto_chunk_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileStatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileStatReq) ProtoMessage() {}

func (x *GetFileStatReq) ProtoReflect() protoreflect.Message {
	mi := &file_sched_msched_proc_chunk_proto_chunk_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileStatReq.ProtoReflect.Descriptor instead.
func (*GetFileStatReq) Descriptor() ([]byte, []int) {
	return file_sched_msched_proc_chunk_proto_chunk_proto_rawDescGZIP(), []int{0}
}

func (x *GetFileStatReq) GetProg() string {
	if x != nil {
		return x.Prog
	}
	return ""
}

func (x *GetFileStatReq) GetRealmStr() string {
	if x != nil {
		return x.RealmStr
	}
	return ""
}

func (x *GetFileStatReq) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *GetFileStatReq) GetSigmaPath() []string {
	if x != nil {
		return x.SigmaPath
	}
	return nil
}

func (x *GetFileStatReq) GetS3Secret() *sigmap.SecretProto {
	if x != nil {
		return x.S3Secret
	}
	return nil
}

func (x *GetFileStatReq) GetNamedEndpointProto() *sigmap.TendpointProto {
	if x != nil {
		return x.NamedEndpointProto
	}
	return nil
}

type GetFileStatRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat *sigmap.TstatProto `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	Path string             `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *GetFileStatRep) Reset() {
	*x = GetFileStatRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sched_msched_proc_chunk_proto_chunk_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileStatRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileStatRep) ProtoMessage() {}

func (x *GetFileStatRep) ProtoReflect() protoreflect.Message {
	mi := &file_sched_msched_proc_chunk_proto_chunk_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileStatRep.ProtoReflect.Descriptor instead.
func (*GetFileStatRep) Descriptor() ([]byte, []int) {
	return file_sched_msched_proc_chunk_proto_chunk_proto_rawDescGZIP(), []int{1}
}

func (x *GetFileStatRep) GetStat() *sigmap.TstatProto {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *GetFileStatRep) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type FetchChunkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prog               string                 `protobuf:"bytes,1,opt,name=prog,proto3" json:"prog,omitempty"`
	ChunkId            int32                  `protobuf:"varint,2,opt,name=chunkId,proto3" json:"chunkId,omitempty"`
	Size               uint64                 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Realm              string                 `protobuf:"bytes,4,opt,name=realm,proto3" json:"realm,omitempty"`
	SigmaPath          []string               `protobuf:"bytes,5,rep,name=sigmaPath,proto3" json:"sigmaPath,omitempty"`
	Pid                string                 `protobuf:"bytes,6,opt,name=pid,proto3" json:"pid,omitempty"`
	Data               bool                   `protobuf:"varint,7,opt,name=data,proto3" json:"data,omitempty"`
	S3Secret           *sigmap.SecretProto    `protobuf:"bytes,8,opt,name=s3Secret,proto3" json:"s3Secret,omitempty"`
	NamedEndpointProto *sigmap.TendpointProto `protobuf:"bytes,9,opt,name=namedEndpointProto,proto3" json:"namedEndpointProto,omitempty"`
}

func (x *FetchChunkReq) Reset() {
	*x = FetchChunkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sched_msched_proc_chunk_proto_chunk_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchChunkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchChunkReq) ProtoMessage() {}

func (x *FetchChunkReq) ProtoReflect() protoreflect.Message {
	mi := &file_sched_msched_proc_chunk_proto_chunk_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchChunkReq.ProtoReflect.Descriptor instead.
func (*FetchChunkReq) Descriptor() ([]byte, []int) {
	return file_sched_msched_proc_chunk_proto_chunk_proto_rawDescGZIP(), []int{2}
}

func (x *FetchChunkReq) GetProg() string {
	if x != nil {
		return x.Prog
	}
	return ""
}

func (x *FetchChunkReq) GetChunkId() int32 {
	if x != nil {
		return x.ChunkId
	}
	return 0
}

func (x *FetchChunkReq) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FetchChunkReq) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *FetchChunkReq) GetSigmaPath() []string {
	if x != nil {
		return x.SigmaPath
	}
	return nil
}

func (x *FetchChunkReq) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *FetchChunkReq) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

func (x *FetchChunkReq) GetS3Secret() *sigmap.SecretProto {
	if x != nil {
		return x.S3Secret
	}
	return nil
}

func (x *FetchChunkReq) GetNamedEndpointProto() *sigmap.TendpointProto {
	if x != nil {
		return x.NamedEndpointProto
	}
	return nil
}

type FetchChunkRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blob *proto.Blob `protobuf:"bytes,1,opt,name=blob,proto3" json:"blob,omitempty"`
	Size uint64      `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Path string      `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *FetchChunkRep) Reset() {
	*x = FetchChunkRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sched_msched_proc_chunk_proto_chunk_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchChunkRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchChunkRep) ProtoMessage() {}

func (x *FetchChunkRep) ProtoReflect() protoreflect.Message {
	mi := &file_sched_msched_proc_chunk_proto_chunk_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchChunkRep.ProtoReflect.Descriptor instead.
func (*FetchChunkRep) Descriptor() ([]byte, []int) {
	return file_sched_msched_proc_chunk_proto_chunk_proto_rawDescGZIP(), []int{3}
}

func (x *FetchChunkRep) GetBlob() *proto.Blob {
	if x != nil {
		return x.Blob
	}
	return nil
}

func (x *FetchChunkRep) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FetchChunkRep) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

var File_sched_msched_proc_chunk_proto_chunk_proto protoreflect.FileDescriptor

var file_sched_msched_proc_chunk_proto_chunk_proto_rawDesc = []byte{
	0x0a, 0x29, 0x73, 0x63, 0x68, 0x65, 0x64, 0x2f, 0x6d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x2f, 0x70,
	0x72, 0x6f, 0x63, 0x2f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x72, 0x70, 0x63,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x70, 0x2f, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdb, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x6f, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x61, 0x6c, 0x6d, 0x53, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x61, 0x6c, 0x6d, 0x53, 0x74, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6d, 0x61, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6d, 0x61, 0x50, 0x61, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x08, 0x73, 0x33, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x73, 0x33, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x12, 0x3f, 0x0a, 0x12, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x54, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x12, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x45, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x65, 0x70, 0x12, 0x1f, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54, 0x73, 0x74, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x96, 0x02, 0x0a, 0x0d, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x72, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72,
	0x65, 0x61, 0x6c, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x08, 0x73, 0x33, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x73, 0x33, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x12, 0x3f, 0x0a, 0x12, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x54, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x12, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x0d, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x52, 0x65, 0x70, 0x12, 0x19, 0x0a, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x42, 0x27, 0x5a, 0x25, 0x73, 0x69, 0x67, 0x6d, 0x61,
	0x6f, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x2f, 0x6d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x2f,
	0x70, 0x72, 0x6f, 0x63, 0x2f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sched_msched_proc_chunk_proto_chunk_proto_rawDescOnce sync.Once
	file_sched_msched_proc_chunk_proto_chunk_proto_rawDescData = file_sched_msched_proc_chunk_proto_chunk_proto_rawDesc
)

func file_sched_msched_proc_chunk_proto_chunk_proto_rawDescGZIP() []byte {
	file_sched_msched_proc_chunk_proto_chunk_proto_rawDescOnce.Do(func() {
		file_sched_msched_proc_chunk_proto_chunk_proto_rawDescData = protoimpl.X.CompressGZIP(file_sched_msched_proc_chunk_proto_chunk_proto_rawDescData)
	})
	return file_sched_msched_proc_chunk_proto_chunk_proto_rawDescData
}

var file_sched_msched_proc_chunk_proto_chunk_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_sched_msched_proc_chunk_proto_chunk_proto_goTypes = []interface{}{
	(*GetFileStatReq)(nil),        // 0: GetFileStatReq
	(*GetFileStatRep)(nil),        // 1: GetFileStatRep
	(*FetchChunkReq)(nil),         // 2: FetchChunkReq
	(*FetchChunkRep)(nil),         // 3: FetchChunkRep
	(*sigmap.SecretProto)(nil),    // 4: SecretProto
	(*sigmap.TendpointProto)(nil), // 5: TendpointProto
	(*sigmap.TstatProto)(nil),     // 6: TstatProto
	(*proto.Blob)(nil),            // 7: Blob
}
var file_sched_msched_proc_chunk_proto_chunk_proto_depIdxs = []int32{
	4, // 0: GetFileStatReq.s3Secret:type_name -> SecretProto
	5, // 1: GetFileStatReq.namedEndpointProto:type_name -> TendpointProto
	6, // 2: GetFileStatRep.stat:type_name -> TstatProto
	4, // 3: FetchChunkReq.s3Secret:type_name -> SecretProto
	5, // 4: FetchChunkReq.namedEndpointProto:type_name -> TendpointProto
	7, // 5: FetchChunkRep.blob:type_name -> Blob
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_sched_msched_proc_chunk_proto_chunk_proto_init() }
func file_sched_msched_proc_chunk_proto_chunk_proto_init() {
	if File_sched_msched_proc_chunk_proto_chunk_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sched_msched_proc_chunk_proto_chunk_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileStatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sched_msched_proc_chunk_proto_chunk_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileStatRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sched_msched_proc_chunk_proto_chunk_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchChunkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sched_msched_proc_chunk_proto_chunk_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchChunkRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sched_msched_proc_chunk_proto_chunk_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sched_msched_proc_chunk_proto_chunk_proto_goTypes,
		DependencyIndexes: file_sched_msched_proc_chunk_proto_chunk_proto_depIdxs,
		MessageInfos:      file_sched_msched_proc_chunk_proto_chunk_proto_msgTypes,
	}.Build()
	File_sched_msched_proc_chunk_proto_chunk_proto = out.File
	file_sched_msched_proc_chunk_proto_chunk_proto_rawDesc = nil
	file_sched_msched_proc_chunk_proto_chunk_proto_goTypes = nil
	file_sched_msched_proc_chunk_proto_chunk_proto_depIdxs = nil
}
